<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blocks name="blocks">
<!-- blocks are arranged by increasing blockId, so please add blocks at the end of the file. -->
	<block id="Block0" name="Cities / China v1.0" />
	<block id="Block1" name="Virtual Earth r7" />
	<block id="Block2" name="Weather Report v1.0" />
	<block id="Block3" name="Cities / Australia v1.0" />
	<block id="Block5" name="Flickr Photos r2" />
	<block id="Block8" name="Contacts r2" />
	<block id="Block9" name="Sample Contacts r2" />
	<block id="Block10" name="Phone Number Locator r2" />
	<block id="Block11" name="Douban User Search" />
	<block id="Block12" name="Douban Friends" />
	<block id="Block13" name="Address Locator" />
	<block id="Block14" name="Douban Actions" />
	<block id="Block15" name="Map Traveler" />
	<block id="Block16" name="Sample Music" />
	<block id="Block17" name="Douban Music Search" />
	<block id="Block18" name="Taobao Product Search" />
	<block id="Block19" name="List Viewer" />
	<block id="Block20" name="Douban Activities" />
	<block id="Block21" name="Douban Favorites" />
	<block id="Block22" name="Music" />
	<block id="Block101" name="VirtualEarth">
		<providerUrl>http://maps.live.com/</providerUrl>
		<description>
			<tags>mapping</tags>
			<text>
				Adds a pushpin to the map based on latitude and
				longitude
			</text>
		</description>
		<category>mapping</category>
		<services>
			<service name="addPushpin">
				<description>
					Adds a pushpin to the map based on latitude and
					longitude
				</description>
				<invokeUrl />
				<input>
					<param className="geo.latitude" name="latitude"
						required="true">
						<description>
							The pushpin's latitude
						</description>
						<defaultValue>0</defaultValue>
					</param>
					<param className="geo.longitude" name="longitude"
						required="true">
						<description>
							The pushpin's longitude
						</description>
						<defaultValue>0</defaultValue>
					</param>
					<param className="photo.thumbnailImageUrl"
						name="url" required="false">
						<description>
							The URL used for the pushpin's image
						</description>
						<defaultValue>0</defaultValue>
					</param>
					<param className="object.title" name="title"
						required="false">
						<description>The pushpin's title</description>
						<defaultValue>My Pushpin</defaultValue>
					</param>
					<param className="object.description"
						name="description" required="false">
						<description>
							The pushpin's description
						</description>
						<defaultValue>
							This is a pushpin on the earth
						</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.street-address" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.locality" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.country" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.region" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.location" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
		</services>
	</block>
	<block id="Block102" name="GoogleMap">
		<providerUrl>http://maps.google.com/</providerUrl>
		<description>
			<tags>mapping</tags>
			<text>
				Adds a pushpin to the map based on latitude and
				longitude
			</text>
		</description>
		<category>mapping</category>
		<services>
			<service name="addPushpin">
				<description>
					Adds a pushpin to the map based on latitude and
					longitude
				</description>
				<invokeUrl />
				<input>
					<param className="geo.latitude" name="latitude"
						required="true">
						<description>
							The pushpin's latitude
						</description>
						<defaultValue>0</defaultValue>
					</param>
					<param className="geo.longitude" name="longitude"
						required="true">
						<description>
							The pushpin's longitude
						</description>
						<defaultValue>0</defaultValue>
					</param>
					<param className="photo.thumbnailImageUrl"
						name="url" required="false">
						<description>
							The URL used for the pushpin's image
						</description>
						<defaultValue>0</defaultValue>
					</param>
					<param className="object.title" name="title"
						required="false">
						<description>The pushpin's title</description>
						<defaultValue>My Pushpin</defaultValue>
					</param>
					<param className="object.description"
						name="description" required="false">
						<description>
							The pushpin's description
						</description>
						<defaultValue>
							This is a pushpin on the earth
						</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.street-address" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.locality" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.country" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.region" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.location" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
		</services>
	</block>
	<block id="Block103" name="UserInput">
		<providerUrl>http://myinput.com/</providerUrl>
		<description>
			<tags>input</tags>
			<text>user input</text>
		</description>
		<category>mapping</category>
		<services>
			<service name="InputData">
				<description>input data</description>
				<invokeUrl />
				<input></input>
				<output>
					<param className="object.allType"
						name="inputValue">
					</param>
				</output>
			</service>
		</services>
	</block>
	<block id="Block104" name="Flickr">
		<providerUrl>
			http://www.flickr.com/services/api/, http://api.flickr.com
		</providerUrl>
		<description>
			<tags>photos</tags>
			<text>Get photos you wanted</text>
		</description>
		<category>photos</category>
		<services>
			<service name="getGeotaggedPhotos">
				<description>
					Get photos that have a latitude and longitude and
					have been tagged as "geotagged"
				</description>
				<invokeUrl />
				<input>
					<param className="object.allType" name="search_text"
						required="true">
						<description>
							text in title, description, or tags
						</description>
						<defaultValue>beach</defaultValue>
					</param>
					<param className="object.decimal" name="number"
						required="false">
						<description>
							maximum number of photos to return
						</description>
						<defaultValue>15</defaultValue>
					</param>
				</input>
				<output>
					<param className="photo.title" name="title" />
					<param className="photo.imageUrl" name="url" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailUrl" />
					<param className="photo.userName" name="owner" />
					<param className="photo.url" name="linkUrl" />
					<param className="photo.imageUrl"
						name="originalUrl" />
					<param className="geo.latitude" name="latitude" />
					<param className="geo.longitude" name="longitude" />
					<param className="photo.id" name="id" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block105" name="Upcoming">
		<providerUrl>http://www.upcoming.org/</providerUrl>
		<description>
			<tags>events</tags>
			<text>Get events</text>
		</description>
		<category>events</category>
		<services>
			<service name="findEvents">
				<description>Find events from upcoming.org</description>
				<invokeUrl />
				<input>
					<param className="object.allType" name="searchText"
						required="true">
						<description>Search terms</description>
						<defaultValue>music</defaultValue>
					</param>
				</input>
				<output>
					<param className="event.id" name="id" />
					<param className="event.title" name="name" />
					<param className="event.description"
						name="description" />
					<param className="event.date" name="start_date" />
					<param className="event.date" name="end_date" />
					<param className="event.time" name="start_time" />
					<param className="event.time" name="end_time" />
					<param className="object.string" name="personal" />
					<param className="object.string"
						name="selfpromotion" />
					<param className="object.id" name="metro_id" />
					<param className="object.id" name="venue_id" />
					<param className="object.id" name="user_id" />
					<param className="object.id" name="category_id" />
					<param className="event.date" name="date_posted" />
					<param className="geo.latitude" name="latitude" />
					<param className="geo.longitude" name="longitude" />
					<param className="object.string"
						name="geocoding_precision" />
					<param className="object.string"
						name="geocoding_ambiguous" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block106" name="Digg">
		<providerUrl>http://digg.com/</providerUrl>
		<description>
			<tags>news</tags>
			<text>Get recent stories</text>
		</description>
		<category>news</category>
		<services>
			<service name="getStories">
				<description>Get recent stories</description>
				<invokeUrl />
				<input>
					<param className="object.integer" name="number"
						required="false">
						<description>
							maximum number of stories to return
						</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="story.title" name="title" />
					<param className="story.description"
						name="description" />
					<param className="person.userName" name="user" />
					<param className="photo.thumbnailImageUrl"
						name="userThumbnail" />
					<param className="object.string" name="topic" />
					<param className="object.id" name="storyID" />
					<param className="object.url" name="link" />
					<param className="story.date" name="submitDate" />
					<param className="object.integer" name="diggs" />
					<param className="object.string" name="comments" />
					<param className="object.url" name="href" />
					<param className="object.string" name="status" />
					<param className="adr.location" name="location" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block107" name="Twitter">
		<providerUrl>http://twitter.com/</providerUrl>
		<description>
			<tags>community</tags>
			<text>Get News</text>
		</description>
		<category>community</category>
		<services>
			<service name="getLatestPosts">
				<description>
					Gets the latest updates from Twitter
				</description>
				<invokeUrl />
				<input>
					<param className="object.integer" name="number"
						required="false">
						<description>
							Maximum number of results to return
						</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.id" name="messageID" />
					<param className="object.description" name="text" />
					<param className="object.date" name="createdAt" />
					<param className="object.id" name="userID" />
					<param className="person.userName"
						name="screenName" />
					<param className="adr.locality" name="location" />
					<param className="object.description"
						name="description" />
					<param className="photo.thumbnailImageUrl"
						name="imageUrl" />
					<param className="object.url" name="url" />
				</output>
			</service>
			<service name="getLatestUserPosts">
				<description>
					Gets the latest updates from a Twitter user
				</description>
				<input>
					<param className="person.userName" name="userID"
						required="true">
						<description>User's Twitter ID</description>
						<defaultValue>Conversation</defaultValue>
					</param>
					<param className="object.integer" name="number"
						required="false">
						<description>
							Maximum number of results to return
						</description>
						<defaultValue>15</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.id" name="messageID" />
					<param className="object.description" name="text" />
					<param className="object.date" name="createdAt" />
					<param className="object.id" name="userID" />
					<param className="person.userName"
						name="screenName" />
					<param className="adr.locality" name="location" />
					<param className="object.description"
						name="description" />
					<param className="photo.thumbnailImageUrl"
						name="imageUrl" />
					<param className="object.url" name="url" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block108" name="Youtube">
		<providerUrl>
			http://gdata.youtube.com/feeds/api/videos
		</providerUrl>
		<description>
			<tags>video</tags>
			<text>Search for video</text>
		</description>
		<category>video</category>
		<services>
			<service name="searchVideo">
				<description>search videos in youtube</description>
				<input>
					<param className="object.allType" name="searchText"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>football</defaultValue>
					</param>
					<param className="video.userName" name="author"
						required="false">
						<description>
							videos uploaded by a particular YouTube user
						</description>
						<defaultValue>robin</defaultValue>
					</param>
					<param className="object.integer" name="count"
						required="false">
						<description>max returned number</description>
						<defaultValue>10</defaultValue>
					</param>
					<param className="object.string" name="category"
						required="false">
						<description>
							retrieve videos that are in a particular
							category or are tagged with a particular
							keyword or developer tag
						</description>
						<defaultValue>Sports</defaultValue>
					</param>
				</input>
				<output>
					<param className="video.title" name="title" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailUrl" />
					<param className="video.description"
						name="description" />
					<param className="video.url" name="linkurl" />
					<param className="adr.location" name="location" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block109" name="Lastfm">
		<providerUrl>
			http://www.Audioscrobbler.com, http://www.last.fm,
			http://ws.Audioscrobbler.com
		</providerUrl>
		<description>
			<tags>music</tags>
			<text>
				retrieve the music information, such as users, artists
			</text>
		</description>
		<category>music</category>
		<services>
			<service name="getTracksByArtist">
				<description>get artist's track</description>
				<input>
					<param className="person.userName" name="artist"
						required="true">
						<description>
							The userName to search for
						</description>
						<defaultValue>Cher</defaultValue>
					</param>
				</input>
				<output>
					<param className="track.name" name="name" />
					<param className="track.url" name="playUrl" />
					<param className="photo.imageURL" name="imageUrl" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailUrl" />
				</output>
			</service>
			<service name="getWeeklyTopTracks">
				<description>get weekly top track</description>
				<input></input>
				<output>
					<param className="track.name" name="name" />
					<param className="track.url" name="playUrl" />
					<param className="photo.imageURL" name="imageUrl" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailUrl" />
				</output>
			</service>
			<service name="getWeeklyTopArtists">
				<description>get weekly top artists</description>
				<input></input>
				<output>
					<param className="person.name" name="name" />
					<param className="person.url" name="playUrl" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block110" name="YahooMap">
		<providerUrl>http://maps.yahoo.com/</providerUrl>
		<description>
			<tags>mapping</tags>
			<text>
				Adds a pushpin to the map based on latitude and
				longitude
			</text>
		</description>
		<category>mapping</category>
		<services>
			<service name="addPushpin">
				<description>
					Adds a pushpin to the map based on latitude and
					longitude
				</description>
				<input>
					<param className="geo.latitude" name="latitude"
						required="true">
						<description>
							The pushpin's latitude
						</description>
						<defaultValue>0</defaultValue>
					</param>
					<param className="geo.longitude" name="longitude"
						required="true">
						<description>
							The pushpin's longitude
						</description>
						<defaultValue>0</defaultValue>
					</param>
					<param className="photo.thumbnailImageUrl"
						name="url" required="false">
						<description>
							The URL used for the pushpin's image
						</description>
						<defaultValue>0</defaultValue>
					</param>
					<param className="object.title" name="title"
						required="false">
						<description>The pushpin's title</description>
						<defaultValue>My Pushpin</defaultValue>
					</param>
					<param className="object.description"
						name="description" required="false">
						<description>
							The pushpin's description
						</description>
						<defaultValue>
							This is a pushpin on the earth
						</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.street-address" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.locality" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.country" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.region" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
			<service name="addPushpinByAdr">
				<description>
					Adds a pushpin to the map based on adress
				</description>
				<invokeUrl />
				<input>
					<param className="adr.location" name="address"
						required="true">
						<description>adress</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
		</services>
	</block>
	<block id="Block111" name="MSNNewsFeed">
		<providerUrl>http://msn.com/</providerUrl>
		<description>
			<tags>news</tags>
			<text>Get News</text>
		</description>
		<category>news</category>
		<services>
			<service name="TopBoxOffice">
				<description>Top Box Office</description>
				<input></input>
				<output>
					<param className="news.title" name="title" />
					<param className="object.url" name="link" />
					<param className="object.description"
						name="description" />
					<param className="object.string" name="source" />
					<param className="object.url" name="sourceLink" />
					<param className="object.name" name="author" />
					<param className="object.description"
						name="description" />
					<param className="object.string" name="tags" />
					<param className="object.string" name="comments" />
					<param className="object.string" name="comments" />
					<param className="object.date" name="publishedDate" />
					<param className="object.url" name="mediaLink" />
					<param className="object.string" name="mediaType" />
				</output>
			</service>
			<service name="TopCelebrities">
				<description>Top Celebrities</description>
				<input></input>
				<output>
					<param className="news.title" name="title" />
					<param className="object.url" name="link" />
					<param className="object.description"
						name="description" />
					<param className="object.string" name="source" />
					<param className="object.url" name="sourceLink" />
					<param className="object.name" name="author" />
					<param className="object.description"
						name="description" />
					<param className="object.string" name="tags" />
					<param className="object.string" name="comments" />
					<param className="object.string" name="comments" />
					<param className="object.date" name="publishedDate" />
					<param className="object.url" name="mediaLink" />
					<param className="object.string" name="mediaType" />
				</output>
			</service>
			<service name="InTheaters">
				<description>Now Playing</description>
				<input></input>
				<output>
					<param className="news.title" name="title" />
					<param className="object.url" name="link" />
					<param className="object.description"
						name="description" />
					<param className="object.string" name="source" />
					<param className="object.url" name="sourceLink" />
					<param className="object.name" name="author" />
					<param className="object.description"
						name="description" />
					<param className="object.string" name="tags" />
					<param className="object.string" name="comments" />
					<param className="object.string" name="comments" />
					<param className="object.date" name="publishedDate" />
					<param className="object.url" name="mediaLink" />
					<param className="object.string" name="mediaType" />
				</output>
			</service>
			<service name="TopStories">
				<description>Top headlines</description>
				<input></input>
				<output>
					<param className="news.title" name="title" />
					<param className="object.url" name="link" />
					<param className="object.description"
						name="description" />
					<param className="object.string" name="source" />
					<param className="object.url" name="sourceLink" />
					<param className="object.name" name="author" />
					<param className="object.description"
						name="description" />
					<param className="object.string" name="tags" />
					<param className="object.string" name="comments" />
					<param className="object.string" name="comments" />
					<param className="object.date" name="publishedDate" />
					<param className="object.url" name="mediaLink" />
					<param className="object.string" name="mediaType" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block112" name="MSNShopping">
		<providerUrl>http://shopping.msn.com/</providerUrl>
		<description>
			<tags>shopping</tags>
			<text>MSN Shopping</text>
		</description>
		<category>shopping</category>
		<services>
			<service name="getProducts">
				<description>
					Get products from MSN Shopping
				</description>
				<input>
					<param className="object.allType" name="text"
						required="true">
						<description>
							text in title or description
						</description>
						<defaultValue>xbox 360</defaultValue>
					</param>
					<param className="object.integer" name="number"
						required="false">
						<description>
							maximum number of products to return
						</description>
						<defaultValue>30</defaultValue>
					</param>
				</input>
				<output>
					<param className="product.url" name="productUrl" />
					<param className="photo.imageUrl" name="url" />
					<param className="object.id" name="id" />
					<param className="object.id" name="categoryId" />
					<param className="object.title" name="title" />
					<param className="object.title" name="brand" />
					<param className="person.userName"
						name="vendorName" />
					<param className="object.description"
						name="description" />
					<param className="object.string" name="rating" />
					<param className="product.price" name="price" />
					<param className="object.id" name="vendorId" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block113" name="GoogleWebSearch">
		<providerUrl>
			http://ajax.googleapis.com/ajax/services/search/web
		</providerUrl>
		<description>
			<tags>search</tags>
			<text>google web search</text>
		</description>
		<category>search</category>
		<services>
			<service name="search">
				<description>
					Get web search results from the Google Search engine
				</description>
				<input>
					<param className="object.allType" name="query"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>robin</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.url" name="rawUrl" />
					<param className="object.title" name="title" />
					<param className="object.string" name="content" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block114" name="GoogleLocalSearch">
		<providerUrl>
			http://ajax.googleapis.com/ajax/services/search/local
		</providerUrl>
		<description>
			<tags>localSearch</tags>
			<text>
				Search for local business listings by name, key word, or
				location
			</text>
		</description>
		<category>local</category>
		<services>
			<service name="search">
				<description>
					Get web search results from the Google Search engine
				</description>
				<input>
					<param className="object.allType" name="query"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>robin</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.title" name="title" />
					<param className="object.url" name="googleMapUrl" />
					<param className="geo.latitude" name="latitude" />
					<param className="geo.longitude" name="longitude" />
					<param className="adr.street_address"
						name="streetAddress" />
					<param className="adr.locality" name="city" />
					<param className="adr.region" name="region" />
					<param className="adr.country" name="country" />
					<param className="object.url" name="ddUrl" />
					<param className="object.url" name="ddUrlToHere" />
					<param className="object.url" name="ddUrlFromHere" />
					<param className="photo.imageUrl" name="mapImage" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block115" name="YahooGeocoding">
		<providerUrl>
			http://developer.yahoo.com/maps/rest/V1/geocode.html
		</providerUrl>
		<description>
			<tags>mapping</tags>
			<text>
				The Geocoding Web Service allows you to find the
				specific latitude and longitude for an address.
			</text>
		</description>
		<category>mapping</category>
		<services>
			<service name="geoCode">
				<description>
					The Geocoding Web Service allows you to find the
					specific latitude and longitude for an address.
				</description>
				<invokeUrl>
					http://local.yahooapis.com/MapsService/V1/geocode
				</invokeUrl>
				<input>
					<param className="adr.street-address" name="street"
						required="true">
						<description>Street name</description>
						<defaultValue>street</defaultValue>
					</param>
					<param className="adr.locality" name="city"
						required="false">
						<description>City name.</description>
						<defaultValue>newYork</defaultValue>
					</param>
					<param className="adr.location" name="location"
						required="false">
						<description>
							* city, state * city, state, zip * zip *
							street, city, state * street, city, state,
							zip * street, zip
						</description>
						<defaultValue>freeText</defaultValue>
					</param>
				</input>
				<output>
					<param className="geo.latitude" name="Latitude" />
					<param className="geo.longitude" name="Longitude" />
					<param className="adr.location" name="Address" />
					<param className="adr.locality" name="City" />
					<param className="adr.region" name="State" />
					<param className="adr.zipCode" name="Zip" />
					<param className="adr.country" name="Country" />
				</output>
			</service>
			<service name="geoCodeByAdr">
				<description>
					The Geocoding Web Service allows you to find the
					specific latitude and longitude for an address.
				</description>
				<invokeUrl>
					http://local.yahooapis.com/MapsService/V1/geocode
				</invokeUrl>
				<input>
					<param className="adr.street-address" name="street"
						required="false">
						<description>Street name</description>
						<defaultValue>street</defaultValue>
					</param>
					<param className="adr.locality" name="city"
						required="false">
						<description>City name.</description>
						<defaultValue>newYork</defaultValue>
					</param>
					<param className="adr.location" name="location"
						required="true">
						<description>
							* city, state * city, state, zip * zip *
							street, city, state * street, city, state,
							zip * street, zip
						</description>
						<defaultValue>freeText</defaultValue>
					</param>
				</input>
				<output>
					<param className="geo.latitude" name="Latitude" />
					<param className="geo.longitude" name="Longitude" />
					<param className="adr.location" name="Address" />
					<param className="adr.locality" name="City" />
					<param className="adr.region" name="State" />
					<param className="adr.zipCode" name="Zip" />
					<param className="adr.country" name="Country" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block116" name="GoogleBlogSearch">
		<providerUrl>
			http://ajax.googleapis.com/ajax/services/search/blog,
			http://blogsearch.google.com
		</providerUrl>
		<description>
			<tags>blog</tags>
			<text>Search for blog</text>
		</description>
		<category>blog</category>
		<services>
			<service name="search">
				<description>
					Get blog search results from the Google Search
					engine
				</description>
				<input>
					<param className="object.allType" name="query"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>robin</defaultValue>
					</param>
				</input>
				<output>
					<param className="blog.title" name="title" />
					<param className="blog.url" name="postUrl" />
					<param className="blog.description" name="content" />
					<param className="blog.userName" name="author" />
					<param className="blog.url" name="blogUrl" />
					<param className="blog.date" name="publishedDate" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block117" name="GoogleImageSearch">
		<providerUrl>
			http://ajax.googleapis.com/ajax/services/search/image
		</providerUrl>
		<description>
			<tags>photos</tags>
			<text>Search for image</text>
		</description>
		<category>photos</category>
		<services>
			<service name="search">
				<description>
					Get image search results from the Google Search
					engine
				</description>
				<input>
					<param className="object.allType" name="query"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>robin</defaultValue>
					</param>
				</input>
				<output>
					<param className="photo.title" name="title" />
					<param className="photo.imageUrl" name="imageUrl" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailUrl" />
					<param className="photo.description" name="content" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block118" name="YahooNews">
		<providerUrl>
			http://news.yahoo.com/, http://api.search.yahoo.com
		</providerUrl>
		<description>
			<tags>news</tags>
			<text>
				Retrieves news based on the specified search term in
				yahoo
			</text>
		</description>
		<category>news</category>
		<services>
			<service name="searchNews">
				<description>
					Retrieves news based on the specified search term in
					Yahoo
				</description>
				<input>
					<param className="object.allType" name="term"
						required="true">
						<description>
							The desired search term
						</description>
						<defaultValue>Internet</defaultValue>
					</param>
					<param className="object.integer" name="count"
						required="false">
						<description>max returned number</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="news.title" name="title" />
					<param className="news.description"
						name="description" />
					<param className="object.url" name="url" />
					<param className="object.string" name="newsSource" />
					<param className="object.url" name="newsSourceURL" />
					<param className="news.date" name="publishDate" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailImageUrl" />
					<param className="adr.location" name="location" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block119" name="YahooAnswers">
		<providerUrl>http://answers.yahoo.com/</providerUrl>
		<description>
			<tags>search</tags>
			<text>
				Retrieves a set of answers for the passed-in term
			</text>
		</description>
		<category>search</category>
		<services>
			<service name="getAnswers">
				<description>
					Retrieves a set of answers for the passed-in term
				</description>
				<input>
					<param className="object.allType" name="term"
						required="true">
						<description>
							The desired search term
						</description>
						<defaultValue>computers</defaultValue>
					</param>
					<param className="object.integer" name="count"
						required="false">
						<description>max returned number</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.title" name="subject" />
					<param className="object.description"
						name="content" />
					<param className="object.date" name="date" />
					<param className="object.url" name="link" />
					<param className="object.string" name="category" />
					<param className="object.id" name="userId" />
					<param className="photo.imageUrl"
						name="userPhotoURL" />
					<param className="person.userName" name="userNick" />
					<param className="object.integer" name="numAnswers" />
					<param className="object.integer"
						name="numComments" />
					<param className="object.id"
						name="chosenAnswererId" />
					<param className="person.userName"
						name="chosenAnswererNick" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block120" name="YahooSearch">
		<providerUrl>
			http://search.yahoo.com, http://api.search.yahoo.com
		</providerUrl>
		<description>
			<tags>search</tags>
			<text>Yahoo web search</text>
		</description>
		<category>search</category>
		<services>
			<service name="search">
				<description>
					Get web search results from the Yahoo Search engine
				</description>
				<input>
					<param className="object.allType" name="query"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>robin</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.url" name="rawUrl" />
					<param className="object.title" name="title" />
					<param className="object.string" name="content" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block121" name="LyricWiki">
		<providerUrl>http://lyricwiki.org/server.php</providerUrl>
		<description>
			<tags>music lyrics</tags>
			<text>
				LyricWiki is a free site which is a source where anyone
				can go to get reliable lyrics for any song from any
				artist without being hammered by invasive ads
			</text>
		</description>
		<category>music</category>
		<services>
			<service name="searchArtists">
				<description>
					Search for an artist by name and return up to 10
					close matches
				</description>
				<invokeUrl>http://lyricwiki.org/server.php</invokeUrl>
				<input>
					<param className="object.string" name="use"
						required="true">
						<description />
						<defaultValue>encoded</defaultValue>
					</param>
					<param className="object.string" name="namespace"
						required="true">
						<description />
						<defaultValue>LyricWiki</defaultValue>
					</param>
					<param className="object.string" name="message"
						required="true">
						<description />
						<defaultValue>
							searchArtistsRequest
						</defaultValue>
					</param>
					<param className="object.string" name="searchString"
						required="false">
						<description />
						<defaultValue />
					</param>
					<param className="object.url" name="encodingStyle"
						required="true">
						<description />
						<defaultValue>
							http://schemas.xmlsoap.org/soap/encoding/
						</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.string" name="use" />
					<param className="object.string" name="namespace" />
					<param className="object.url" name="encodingStyle" />
					<param className="object.string" name="message" />
					<param className="object.anyType" name="return" />
				</output>
			</service>
			<service name="searchSongs">
				<description>
					Search for a song on LyricWiki and get up to 10
					close matches
				</description>
				<invokeUrl>http://lyricwiki.org/server.php</invokeUrl>
				<input>
					<param className="object.string" name="use"
						required="true">
						<description />
						<defaultValue>encoded</defaultValue>
					</param>
					<param className="object.string" name="namespace"
						required="true">
						<description />
						<defaultValue>LyricWiki</defaultValue>
					</param>
					<param className="object.string" name="message"
						required="true">
						<description />
						<defaultValue>
							searchArtistsRequest
						</defaultValue>
					</param>
					<param className="person.name" name="artist"
						required="false">
						<description />
						<defaultValue />
					</param>
					<param className="object.url" name="encodingStyle"
						required="true">
						<description />
						<defaultValue>
							http://schemas.xmlsoap.org/soap/encoding/
						</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.string" name="use" />
					<param className="object.string" name="namespace" />
					<param className="object.url" name="encodingStyle" />
					<param className="object.string" name="message" />
					<param className="music.anyType" name="return" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block122" name="LiveNews">
		<providerUrl>http://search.live.com</providerUrl>
		<description>
			<tags>news</tags>
			<text>
				Get News results from the Windows Live Search engine
			</text>
		</description>
		<category>news</category>
		<services>
			<service name="searchNews">
				<description>
					Retrieves a set of answers for the passed-in term
				</description>
				<input>
					<param className="object.allType" name="term"
						required="true">
						<description>
							The desired search term
						</description>
						<defaultValue>Technology</defaultValue>
					</param>
					<param className="object.integer" name="count"
						required="false">
						<description>max returned number</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.title" name="subject" />
					<param className="object.description"
						name="content" />
					<param className="object.url" name="url" />
					<param className="object.url" name="displayUrl" />
					<param className="object.string" name="source" />
					<param className="object.integer" name="totalCount" />
					<param className="adr.location" name="location" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block123" name="FaceBook">
		<providerUrl>http://search.live.com</providerUrl>
		<description>
			<tags>community</tags>
			<text>FaceBook!</text>
		</description>
		<category>community</category>
		<services>
			<service name="getFriends">
				<description>
					Gets information about your friends
				</description>
				<input>
					<param className="object.integer" name="number"
						required="false">
						<description>
							Maximum number of friends to return
						</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.id" name="id" />
					<param className="person.name" name="name" />
					<param className="adr.locality" name="city" />
					<param className="adr.region" name="state" />
					<param className="adr.country" name="country" />
					<param className="adr.zipCode" name="zipCode" />
					<param className="object.string" name="status" />
					<param className="object.date"
						name="statusLastChanged" />
					<param className="object.url" name="profileUrl" />
					<param className="photo.imageUrl" name="photoUrl" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailUrl" />
					<param className="object.description"
						name="aboutMe" />
				</output>
			</service>
			<service name="getUserInfoById">
				<description>
					Gets information about your friends
				</description>
				<input>
					<param className="object.id" name="userID"
						required="true">
						<description>user id</description>
						<defaultValue>676712790</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.id" name="id" />
					<param className="person.name" name="name" />
					<param className="adr.locality" name="city" />
					<param className="adr.region" name="state" />
					<param className="adr.country" name="country" />
					<param className="adr.zipCode" name="zipCode" />
					<param className="object.string" name="status" />
					<param className="object.date"
						name="statusLastChanged" />
					<param className="object.url" name="profileUrl" />
					<param className="photo.imageUrl" name="photoUrl" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailUrl" />
					<param className="object.description"
						name="aboutMe" />
				</output>
			</service>
			<service name="getPhotosByName">
				<description>
					Gets information about your friends
				</description>
				<input>
					<param className="object.name" name="userName"
						required="true">
						<description>user name</description>
						<defaultValue>robin</defaultValue>
					</param>
				</input>
				<output>
					<param className="photo.title" name="caption" />
					<param className="photo.imageUrl" name="imageUrl" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailUrl" />
					<param className="photo.userName" name="owner" />
				</output>
			</service>
			<service name="getEvent">
				<description>
					Gets event info for a specified event ID
				</description>
				<input>
					<param className="event.id" name="eventId"
						required="false">
						<description>Event Id</description>
						<defaultValue>5388533932</defaultValue>
					</param>
				</input>
				<output>
					<param className="event.id" name="eid" />
					<param className="event.title" name="name" />
					<param className="event.description"
						name="description" />
					<param className="event.time" name="start_time" />
					<param className="event.time" name="end_time" />
					<param className="photo.imageUrl" name="pic" />
					<param className="photo.imageUrl" name="pic_big" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailUrl" />
					<param className="event.userName" name="creator" />
					<param className="adr.locality" name="city" />
					<param className="adr.region" name="state" />
					<param className="adr.country" name="country" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block124" name="YahooImage">
		<providerUrl>
			http://images.yahoo.com, http://api.search.yahoo.com
		</providerUrl>
		<description>
			<tags>photos</tags>
			<text>Retrieves images based on your search term</text>
		</description>
		<category>photos</category>
		<services>
			<service name="search">
				<description>
					Retrieves images based on your search term
				</description>
				<input>
					<param className="object.allType" name="term"
						required="true">
						<description>
							The term(s) to search for
						</description>
						<defaultValue>pretty</defaultValue>
					</param>
					<param className="object.integer" name="number"
						required="false">
						<description>max returned number</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="photo.title" name="title" />
					<param className="photo.imageUrl" name="imageUrl" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailUrl" />
					<param className="object.string" name="publisher" />
					<param className="photo.description"
						name="description" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block125" name="geocoderCa">
		<providerUrl>http://geocoder.ca/?api=1</providerUrl>
		<description>
			<tags>mapping</tags>
			<text>Geocoding services for Canada</text>
		</description>
		<category>mapping</category>
		<services>
			<service name="ReverseGeocoding">
				<description>
					Cross Street Intersection Geocoding API
				</description>
				<invokeUrl>http://geocoder.ca</invokeUrl>
				<input>
					<param className="adr.street-address"
						name="addresst" required="true">
						<description>
							The name of the street address
						</description>
						<defaultValue />
					</param>
					<param className="object.decimal" name="stno"
						required="false">
						<description>Street Number</description>
						<defaultValue />
					</param>
					<param className="adr.locality" name="city"
						required="false">
						<description>The City Name</description>
						<defaultValue />
					</param>
					<param className="object.decimal" name="decimal"
						required="false">
						<description>
							This is an optional parameter to limit the
							number of decimal places in the response
						</description>
						<defaultValue />
					</param>
					<param className="adr.location" name="locate"
						required="false">
						<description>
							This is an optional parameter for your
							convenience. We will parse out an address or
							intersection from it
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="geo.latitude" name="latt" />
					<param className="geo.longtitude" name="longt" />
					<param className="object.id" name="id" />
				</output>
			</service>
			<service name="geocoder">
				<description>
					Cross Street Intersection Geocoding API
				</description>
				<invokeUrl>http://geocoder.ca</invokeUrl>
				<input>
					<param className="adr.locality" name="city"
						required="true">
						<description>The City Name</description>
						<defaultValue />
					</param>
					<param className="object.decimal" name="decimal"
						required="false">
						<description>
							This is an optional parameter to limit the
							number of decimal places in the response
						</description>
						<defaultValue />
					</param>
					<param className="adr.location" name="locate"
						required="false">
						<description>
							This is an optional parameter for your
							convenience. We will parse out an address or
							intersection from it
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="geo.latitude" name="latt" />
					<param className="geo.longtitude" name="longt" />
					<param className="object.id" name="id" />
				</output>
			</service>
			<service name="geocoder">
				<description>
					Cross Street Intersection Geocoding API
				</description>
				<invokeUrl>http://geocoder.ca</invokeUrl>
				<input>
					<param className="adr.locality" name="city"
						required="false">
						<description>The City Name</description>
						<defaultValue />
					</param>
					<param className="object.decimal" name="decimal"
						required="false">
						<description>
							This is an optional parameter to limit the
							number of decimal places in the response
						</description>
						<defaultValue />
					</param>
					<param className="adr.location" name="locate"
						required="true">
						<description>
							We will parse out an address or intersection
							from it
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="geo.latitude" name="latt" />
					<param className="geo.longtitude" name="longt" />
					<param className="object.id" name="id" />
				</output>
			</service>
			<service name="geocoder">
				<description>
					Cross Street Intersection Geocoding API
				</description>
				<invokeUrl>http://geocoder.ca</invokeUrl>
				<input>
					<param className="adr.country" name="country"
						required="true">
						<description>The City Name</description>
						<defaultValue />
					</param>
					<param className="object.decimal" name="decimal"
						required="false">
						<description>
							This is an optional parameter to limit the
							number of decimal places in the response
						</description>
						<defaultValue />
					</param>
					<param className="adr.location" name="locate"
						required="false">
						<description>
							This is an optional parameter for your
							convenience. We will parse out an address or
							intersection from it
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="geo.latitude" name="latt" />
					<param className="geo.longtitude" name="longt" />
					<param className="object.id" name="id" />
				</output>
			</service>
			<service name="geocoder">
				<description>
					Cross Street Intersection Geocoding API
				</description>
				<invokeUrl>http://geocoder.ca</invokeUrl>
				<input>
					<param className="adr.region"
						name="state or province name" required="true">
						<description>The City Name</description>
						<defaultValue />
					</param>
					<param className="object.decimal" name="decimal"
						required="false">
						<description>
							This is an optional parameter to limit the
							number of decimal places in the response
						</description>
						<defaultValue />
					</param>
					<param className="adr.location" name="locate"
						required="false">
						<description>
							This is an optional parameter for your
							convenience. We will parse out an address or
							intersection from it
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="geo.latitude" name="latt" />
					<param className="geo.longtitude" name="longt" />
					<param className="object.id" name="id" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block126" name="amazon">
		<providerUrl>http://ecs.amazonaws.com/onca/xml</providerUrl>
		<description>
			<tags>shopping</tags>
			<text>get latest product information from amazon</text>
		</description>
		<category>shopping</category>
		<services>
			<service name="findProducts">
				<description>
					Get search results from the Windows Live Search
					engine
				</description>
				<input>
					<param className="object.allType" name="keyWords"
						required="true">
						<description>
							The product info to search for
						</description>
						<defaultValue>Harry Potter</defaultValue>
					</param>
				</input>
				<output>
					<param className="product.title" name="title" />
					<param className="object.url" name="detailsURL" />
					<param className="object.string" name="category" />
					<param className="photo.thumbnailImageUrl"
						name="stockPhotoURL" />
				</output>
			</service>
			<service name="findLocation">
				<description>Get shopping location of eBay</description>
				<input>
					<param className="object.string" name="keyWords"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>harry potter</defaultValue>
					</param>
				</input>
				<output>
					<param className="adr.location" name="address" />
					<param className="object.url" name="detailsURL" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block127" name="delicious">
		<providerUrl>
			https://api.del.icio.us/v1/posts, http://www.delicious.com
		</providerUrl>
		<description>
			<tags>bookmarks</tags>
			<text>get tags or posts from delicious</text>
		</description>
		<category>bookmarks</category>
		<services>
			<service name="getPostsByTag">
				<description>get posts from delicious</description>
				<input>
					<param className="object.string" name="tag"
						required="true">
						<description>
							The tags to search for
						</description>
						<defaultValue>google</defaultValue>
					</param>
				</input>
				<output>
					<param className="post.title" name="title" />
					<param className="post.url" name="postUrl" />
					<param className="post.description"
						name="description" />
					<param className="object.string" name="tags" />
				</output>
			</service>
			<service name="getTags">
				<description>get tags from delicious</description>
				<input></input>
				<output>
					<param className="object.string" name="tags" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block128" name="YahooTraffic">
		<providerUrl>
			http://traffic.yahoo.com/, http://api.search.yahoo.com
		</providerUrl>
		<description>
			<tags>local</tags>
			<text>
				Returns traffic data for the corresponding address
			</text>
		</description>
		<category>local</category>
		<services>
			<service name="getTrafficForAddress">
				<description>
					Returns traffic data for the corresponding address
				</description>
				<input>
					<param className="adr.street_address" name="street"
						required="true">
						<description>Street address</description>
						<defaultValue>1 Microsoft Way</defaultValue>
					</param>
					<param className="adr.locality" name="city"
						required="true">
						<description>City for the address</description>
						<defaultValue>Redmond</defaultValue>
					</param>
					<param className="adr.region" name="state"
						required="true">
						<description>State for the address</description>
						<defaultValue>WA</defaultValue>
					</param>
					<param className="object.decimal" name="radius"
						required="false">
						<description>
							The radius to search within, in miles
						</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.title" name="title" />
					<param className="object.string" name="type" />
					<param className="object.description"
						name="description" />
					<param className="geo.latitude" name="latitude" />
					<param className="geo.longitude" name="longitude" />
					<param className="object.string" name="direction" />
					<param className="object.string" name="severity" />
					<param className="object.date" name="reportDate" />
					<param className="object.date" name="updateDate" />
					<param className="object.date" name="endDate" />
					<param className="photo.thumbnailImageUrl"
						name="imageURL" />
				</output>
			</service>
			<service name="getTrafficForZipCode">
				<description>
					Returns traffic data for the corresponding ZIP code
				</description>
				<input>
					<param className="adr.zipCode" name="zip"
						required="true">
						<description>ZIP code</description>
						<defaultValue>98052</defaultValue>
					</param>
					<param className="object.decimal" name="radius"
						required="false">
						<description>
							The radius to search within, in miles
						</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.title" name="title" />
					<param className="object.string" name="type" />
					<param className="object.description"
						name="description" />
					<param className="geo.latitude" name="latitude" />
					<param className="geo.longitude" name="longitude" />
					<param className="object.string" name="direction" />
					<param className="object.string" name="severity" />
					<param className="object.date" name="reportDate" />
					<param className="object.date" name="updateDate" />
					<param className="object.date" name="endDate" />
					<param className="photo.thumbnailImageUrl"
						name="imageURL" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block129" name="LiveWebSearch">
		<providerUrl>http://search.live.com</providerUrl>
		<description>
			<tags>search</tags>
			<text>live web search</text>
		</description>
		<category>search</category>
		<services>
			<service name="search">
				<description>
					Get search results from the Windows Live Search
					engine
				</description>
				<input>
					<param className="object.allType" name="query"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>cheese</defaultValue>
					</param>
					<param className="object.integer" name="count"
						required="false">
						<description>
							The number of returned results
						</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.title" name="title" />
					<param className="object.description"
						name="description" />
					<param className="object.url" name="url" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block130" name="eBay">
		<providerUrl>http://open.api.ebay.com/shopping</providerUrl>
		<description>
			<tags>shopping</tags>
			<text>get product information</text>
		</description>
		<category>shopping</category>
		<services>
			<service name="findProducts">
				<description>
					Get shopping information from eBay
				</description>
				<input>
					<param className="object.allType" name="keyWords"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>harry potter</defaultValue>
					</param>
					<param className="object.integer" name="count"
						required="false">
						<description>
							The number of returned results
						</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="product.title" name="title" />
					<param className="object.url" name="detailsURL" />
					<param className="photo.thumbnailImageUrl"
						name="stockPhotoURL" />
				</output>
			</service>
			<service name="findLocation">
				<description>Get shopping location of eBay</description>
				<input>
					<param className="object.string" name="keyWords"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>harry potter</defaultValue>
					</param>
				</input>
				<output>
					<param className="adr.location" name="address" />
					<param className="object.url" name="detailsURL" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block131" name="ShoppingCom">
		<providerUrl>https://partners.shopping.com/app</providerUrl>
		<description>
			<tags>shopping</tags>
			<text>Online retail shopping.</text>
		</description>
		<category>shopping</category>
		<services>
			<service name="findProducts">
				<description>
					find related product information
				</description>
				<invokeUrl>https://partners.shopping.com/app</invokeUrl>
				<input>
					<param className="object.allType" name="keyWords"
						required="true">
						<description>
							The product info to search for
						</description>
						<defaultValue>Harry Potter</defaultValue>
					</param>
				</input>
				<output>
					<param className="product.title" name="title" />
					<param className="object.url" name="detailsURL" />
					<param className="object.string" name="category" />
					<param className="photo.thumbnailImageUrl"
						name="stockPhotoURL" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block132" name="GoogleBase">
		<providerUrl>http://code.google.com/apis/base/</providerUrl>
		<description>
			<tags>
				database structured jobs vehicles recipes reviews
			</tags>
			<text>
				The Google Base API makes it possible to get items in
				and out of Base, an index of all kinds of structured and
				semi-structured data including jobs, vehicles, recipes,
				events, products, reviews, and others.
			</text>
		</description>
		<category>shopping</category>
		<services>
			<service name="searchDataFeed">
				<description>
					find related data feed information
				</description>
				<invokeUrl>
					http://www.google.com/base/feeds/items/item_id/media/
				</invokeUrl>
				<input>
					<param className="object.allType" name="q"
						required="true">
						<description>
							key words to search for
						</description>
						<defaultValue>Harry Potter</defaultValue>
					</param>
				</input>
				<output>
					<param className="product.title" name="attrib_name" />
					<param className="object.url" name="attrib_type" />
					<param className="object.string" name="category" />
					<param className="photo.thumbnailImageUrl"
						name="stockPhotoURL" />
				</output>
			</service>
			<service name="searchDataFeed">
				<description>
					find related data feed information
				</description>
				<invokeUrl>
					http://www.google.com/base/feeds/items/item_id/media/
				</invokeUrl>
				<input>
					<param className="object.allType" name="q"
						required="true">
						<description>
							key words to search for
						</description>
						<defaultValue>Harry Potter</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.string" name="attrib_name" />
					<param className="object.string" name="attrib_type" />
					<param className="object.string"
						name="attrib_value" />
				</output>
			</service>
			<service name="searchMediaFeed">
				<description>
					find related media feed information
				</description>
				<invokeUrl>
					http://www.google.com/base/feeds/items/item_id/media/
				</invokeUrl>
				<input>
					<param className="object.allType" name="q"
						required="true">
						<description>
							key words to search for
						</description>
						<defaultValue>Harry Potter</defaultValue>
					</param>
				</input>
				<output>
					<param className="video.title" name="content" />
					<param className="video.description"
						name="description" />
					<param className="video.url" name="link" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnail" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block133" name="GoogleCalendar">
		<providerUrl>http://code.google.com/apis/calendar/</providerUrl>
		<description>
			<tags>events calendar</tags>
			<text>
				Google Calendar allows client applications to view and
				update calendar events in the form of Google data API,
				GData, feeds.
			</text>
		</description>
		<category>calendar</category>
		<services>
			<service name="retriveEvents">
				<description>
					Retrieving events without query parameters
				</description>
				<invokeUrl>
					http://www.google.com/calendar/feeds/userID/private-magicCookie/full
				</invokeUrl>
				<input></input>
				<output>
					<param className="event.title" name="title" />
					<param className="event.date" name="publishDate" />
					<param className="event.url" name="link" />
					<param className="person.name" name="author" />
					<param className="adr.location" name="location" />
				</output>
			</service>
			<service name="retriveEventsByDate">
				<description>Retrieving events by date</description>
				<invokeUrl>
					http://www.google.com/calendar/feeds/default/private/full
				</invokeUrl>
				<input>
					<param className="object.date" name="start-min"
						required="true">
						<description>start date</description>
						<defaultValue>2006-03-16T00:00:00</defaultValue>
					</param>
					<param className="object.date" name="start-max"
						required="true">
						<description>end date</description>
						<defaultValue>2006-03-24T23:59:59</defaultValue>
					</param>
				</input>
				<output>
					<param className="event.title" name="title" />
					<param className="event.date" name="publishDate" />
					<param className="event.url" name="link" />
					<param className="person.name" name="author" />
					<param className="adr.location" name="location" />
				</output>
			</service>
			<service name="searchEvents">
				<description>
					Retrieving events with query parameters
				</description>
				<invokeUrl>
					http://www.google.com/calendar/feeds/default/private/full
				</invokeUrl>
				<input>
					<param className="object.allType" name="q"
						required="true">
						<description>search term</description>
						<defaultValue>Tennis</defaultValue>
					</param>
				</input>
				<output>
					<param className="event.title" name="title" />
					<param className="event.date" name="publishDate" />
					<param className="event.url" name="link" />
					<param className="person.name" name="author" />
					<param className="adr.location" name="location" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block134" name="GoogleChart">
		<providerUrl>http://code.google.com/apis/chart/</providerUrl>
		<description>
			<tags>charts visualization statistics</tags>
			<text>
				Lets you easily create a chart from some data and embed
				it in a web page.
			</text>
		</description>
		<category>other</category>
		<services>
			<service name="getChart">
				<description>store information</description>
				<invokeUrl>
					http://chart.apis.google.com/chart
				</invokeUrl>
				<input>
					<param className="object.integer" name="chs"
						required="true">
						<description>chart's size</description>
						<defaultValue>250</defaultValue>
					</param>
					<param className="object.string" name="chd"
						required="true">
						<description>chart's data</description>
						<defaultValue>250</defaultValue>
					</param>
					<param className="object.string" name="cht"
						required="true">
						<description>chart's type</description>
						<defaultValue>p3</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
		</services>
	</block>
	<block id="Block135" name="imageLoop">
		<providerUrl>
			http://www.imageloop.com/de/api/index.htm
		</providerUrl>
		<description>
			<tags>photo tools slideshow germany</tags>
			<text>
				With imageloop you can create your own world of photos.
			</text>
		</description>
		<category>Photos</category>
		<services>
			<service name="queryImages">
				<description>
					get a list of photos for a given query
				</description>
				<invokeUrl>
					http://www.imageloop.com/httprpc/?f=imagelooop.queryImages
				</invokeUrl>
				<input>
					<param className="object.string" name="query"
						required="true">
						<description>key word</description>
						<defaultValue>music</defaultValue>
					</param>
				</input>
				<output>
					<param className="photo.id" name="imageID" />
				</output>
			</service>
			<service name="queryImageByImageID">
				<description>
					get photo metadata for a given imageID
				</description>
				<invokeUrl>
					http://www.imageloop.com/httprpc/?f=imagelooop.getImageMetaData
				</invokeUrl>
				<input>
					<param className="photo.id" name="imageID"
						required="true">
						<description>image id</description>
						<defaultValue>100000</defaultValue>
					</param>
				</input>
				<output>
					<param className="photo.title" name="title" />
					<param className="photo.tags" name="tags" />
					<param className="photo.description"
						name="description" />
					<param className="photo.imageUrl" name="imageLink" />
					<param className="person.userName"
						name="ownerUsername" />
				</output>
			</service>
			<service name="makeImageLoop">
				<description>make image loop for images</description>
				<invokeUrl>
					http://www.imageloop.com/httprpc/?f=imagelooop.getImageMetaData
				</invokeUrl>
				<input>
					<param className="photo.imageUrl" name="iUrl"
						required="true">
						<description>image Url</description>
						<defaultValue>None</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
		</services>
	</block>
	<block id="Block136" name="AOLVideo">
		<providerUrl>http://developer.truveo.com/index.php</providerUrl>
		<description>
			<tags>video seach truveo AOL</tags>
			<text>
				The Truveo Video Search indexes over 100 Million vidoes
				on the web with 50MM monthly uniques.
			</text>
		</description>
		<category>Video</category>
		<services>
			<service name="searchVideo">
				<description>
					search related video for a given query
				</description>
				<invokeUrl>
					http://developer.truveo.com/index.php
				</invokeUrl>
				<input>
					<param className="object.allType" name="query"
						required="true">
						<description>key word</description>
						<defaultValue>music</defaultValue>
					</param>
				</input>
				<output>
					<param className="video.title" name="title" />
					<param className="video.description"
						name="description" />
					<param className="photo.imageUrl" name="playUrl" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block137" name="Skype">
		<providerUrl>https://developer.skype.com/</providerUrl>
		<description>
			<tags>messaging chat Voice video communication</tags>
			<text>
				The Truveo Video Search indexes over 100 Million vidoes
				on the web with 50MM monthly uniques.
			</text>
		</description>
		<category>Telephony</category>
		<services>
			<service name="getCategory">
				<description>
					query for Skype Prime listing categories;
				</description>
				<invokeUrl>
					http://developer.truveo.com/index.php
				</invokeUrl>
				<input></input>
				<output>
					<param className="object.title" name="title" />
					<param className="object.id" name="id" />
				</output>
			</service>
			<service name="queryList">
				<description>
					query for listings, by keywords, category or
					language;
				</description>
				<invokeUrl>
					http://developer.truveo.com/index.php
				</invokeUrl>
				<input>
					<param className="object.string" name="category"
						required="true">
						<description>key word</description>
						<defaultValue>music</defaultValue>
					</param>
					<param className="object.integer" name="limit"
						required="false">
						<description>result number</description>
						<defaultValue>100</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.title" name="title" />
					<param className="object.description"
						name="description" />
					<param className="person.userName" name="provider" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block138" name="BBCNews">
		<providerUrl>http://newsrss.bbc.co.uk/</providerUrl>
		<description>
			<tags>news</tags>
			<text>Retrieves news from BBC</text>
		</description>
		<category>news</category>
		<services>
			<service name="getNews">
				<description>Retrieves news from BBC</description>
				<input></input>
				<output>
					<param className="news.title" name="title" />
					<param className="news.description"
						name="description" />
					<param className="news.url" name="url" />
					<param className="news.date" name="publishDate" />
					<param className="adr.location" name="location" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block139" name="YahooVideo">
		<providerUrl>
			http://video.yahoo.com/, http://api.search.yahoo.com
		</providerUrl>
		<description>
			<tags>video</tags>
			<text>Retrieves images based on your search term</text>
		</description>
		<category>video</category>
		<services>
			<service name="search">
				<description>
					Retrieves images based on your search term
				</description>
				<input>
					<param className="object.allType" name="term"
						required="true">
						<description>
							The term(s) to search for
						</description>
						<defaultValue>cars</defaultValue>
					</param>
					<param className="video.format" name="number"
						required="false">
						<description>
							Types of videos to search for. Any
							combination of "any", "avi", "flash",
							"mpeg", "msmedia", "quicktime"...
						</description>
						<defaultValue>flash</defaultValue>
					</param>
					<param className="object.integer" name="number"
						required="false">
						<description>max returned number</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="video.title" name="title" />
					<param className="video.description"
						name="description" />
					<param className="video.videoUrl" name="videoURL" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailImageURL" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block140" name="eBayRss">
		<providerUrl>http://rss.api.ebay.com/ws/rssapi</providerUrl>
		<description>
			<tags>shopping</tags>
			<text>get latest product information</text>
		</description>
		<category>shopping</category>
		<services>
			<service name="findProductsByCategory">
				<description>
					Get search results from the Windows Live Search
					engine
				</description>
				<input>
					<param className="object.string" name="category"
						required="true">
						<description>
							The category product info to search for
						</description>
						<defaultValue>DVD</defaultValue>
					</param>
				</input>
				<output>
					<param className="product.title" name="title" />
					<param className="product.url" name="detailsURL" />
					<param className="product.description"
						name="description" />
					<param className="product.price" name="price" />
					<param className="photo.thumbnailImageUrl"
						name="stockPhotoURL" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block141" name="WindowsLiveSpaces">
		<providerUrl>http://dev.live.com/spaces/</providerUrl>
		<description>
			<tags>blog</tags>
			<text>
				MSN Spaces supports the MetaWeblog API programming
				interface which enables external programs to get and set
				the text and attributes of Weblog posts.
			</text>
		</description>
		<category>bloging</category>
		<services>
			<service name="ViewFriends">
				<description>
					The View Friends API allows the viewing of a
					particular user s social network based upon the user
					s CID.
				</description>
				<invokeUrl>
					http://spaces.live.com/NetworkExplorer.aspx
				</invokeUrl>
				<input>
					<param className="blog.id" name="CID"
						required="true">
						<description>
							Unique identifier that allows the resolution
							of the space alias. This identifier contains
							no personally identifiable information
							(PII).
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="blog.url"
						name="redirecttouserSocialNetwork" />
				</output>
			</service>
			<service name="ViewPhotos">
				<description>
					The View Photos API navigates to either the
					full-page version of the photos module in Visitor
					mode, or the full-page version of the photos module
					in author mode, which lists all of the user s albums
					and plays a slideshow of the default album.
				</description>
				<invokeUrl>http://CID.spaces.live.com/photos</invokeUrl>
				<input>
					<param className="blog.id" name="CID"
						required="true">
						<description>
							Unique identifier that allows the resolution
							of the space alias. This identifier contains
							no personally identifiable information
							(PII).
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="photo.url" name="photo" />
				</output>
			</service>
			<service name="ViewSpace">
				<description>
					The View Space API allows the viewing or redirecting
					to a particular user s space using the CID of that
					user.
				</description>
				<invokeUrl>
					http://spaces.live.com/viewspace.aspx
				</invokeUrl>
				<input>
					<param className="blog.id" name="CID"
						required="true">
						<description>
							Unique identifier that allows the resolution
							of the space alias. This identifier contains
							no personally identifiable information
							(PII).
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="blog.url" name="userspace" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block142" name="blogspot">
		<providerUrl>
			http://www.blogger.com/feeds/blogID/posts/default,
			http://www.blogspot.com
		</providerUrl>
		<description>
			<tags>blog</tags>
			<text>retrieve the user's posts</text>
		</description>
		<category>blog</category>
		<services>
			<service name="getPosts">
				<description>get posts from blogspot</description>
				<input>
					<param className="person.userName"
						name="blogUserName" required="true">
						<description>
							The userName to search for
						</description>
						<defaultValue>robin-zju</defaultValue>
					</param>
				</input>
				<output>
					<param className="blog.title" name="title" />
					<param className="blog.description" name="content" />
					<param className="person.name" name="author" />
					<param className="person.email" name="email" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block143" name="YahooLocalSearch">
		<providerUrl>
			http://yahoo.com/services/search/local,
			http://api.search.yahoo.com
		</providerUrl>
		<description>
			<tags>local</tags>
			<text>
				Search for local business listings by name, key word, or
				location
			</text>
		</description>
		<category>local</category>
		<services>
			<service name="search">
				<description>
					Get web search results from the yahoo Search engine
				</description>
				<input>
					<param className="object.string" name="query"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>hotel</defaultValue>
					</param>
					<param className="object.decimal" name="withinMiles"
						required="false">
						<description>The miles within</description>
						<defaultValue>10</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.title" name="title" />
					<param className="object.url" name="googleMapUrl" />
					<param className="geo.latitude" name="latitude" />
					<param className="geo.longitude" name="longitude" />
					<param className="adr.street_address"
						name="streetAddress" />
					<param className="adr.locality" name="city" />
					<param className="adr.region" name="region" />
					<param className="adr.country" name="country" />
					<param className="object.url" name="ddUrl" />
					<param className="object.url" name="ddUrlToHere" />
					<param className="object.url" name="ddUrlFromHere" />
					<param className="photo.imageUrl" name="mapImage" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block144" name="CNN">
		<providerUrl>http://www.cnn.com, rss.cnn.com</providerUrl>
		<description>
			<tags>news</tags>
			<text>
				Retrieves breaking news, business news, entertainment
				from CNN
			</text>
		</description>
		<category>news</category>
		<services>
			<service name="getTopStories">
				<description>
					Retrieves top stories from cnn
				</description>
				<input></input>
				<output>
					<param className="story.title" name="title" />
					<param className="story.description"
						name="description" />
					<param className="story.url" name="url" />
				</output>
			</service>
			<service name="getTechnologyNews">
				<description>
					Retrieves technology news from cnn
				</description>
				<input></input>
				<output>
					<param className="news.title" name="title" />
					<param className="news.description"
						name="description" />
					<param className="news.url" name="url" />
				</output>
			</service>
			<service name="getEntertainmentNews">
				<description>
					Retrieves entertainment news from cnn
				</description>
				<input></input>
				<output>
					<param className="news.title" name="title" />
					<param className="news.description"
						name="description" />
					<param className="news.url" name="url" />
				</output>
			</service>
			<service name="getVideo">
				<description>
					Retrieves entertainment news from cnn
				</description>
				<input></input>
				<output>
					<param className="video.title" name="title" />
					<param className="video.description"
						name="description" />
					<param className="video.url" name="playUrl" />
					<param className="photo.thumbnailImageUrl"
						name="thumbnailUrl" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block145" name="Technorati">
		<providerUrl>http://api.technorati.com/</providerUrl>
		<description>
			<tags>blog</tags>
			<text>Retrieves blog information</text>
		</description>
		<category>blog</category>
		<services>
			<service name="searchBlog">
				<description>Retrieves blog information</description>
				<input>
					<param className="object.allType" name="term"
						required="true">
						<description>
							The term(s) to search for
						</description>
						<defaultValue>cars</defaultValue>
					</param>
				</input>
				<output>
					<param className="blog.title" name="title" />
					<param className="blog.description"
						name="description" />
					<param className="blog.url" name="url" />
					<param className="blog.date" name="publishDate" />
					<param className="adr.location" name="location" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block146" name="Blogpulse">
		<providerUrl>http://www.blogpulse.com/</providerUrl>
		<description>
			<tags>blog</tags>
			<text>search blog information</text>
		</description>
		<category>blog</category>
		<services>
			<service name="searchBlog">
				<description>Retrieves blog information</description>
				<input>
					<param className="object.allType" name="term"
						required="true">
						<description>
							The term(s) to search for
						</description>
						<defaultValue>cars</defaultValue>
					</param>
				</input>
				<output>
					<param className="blog.title" name="title" />
					<param className="blog.description"
						name="description" />
					<param className="blog.url" name="url" />
					<param className="blog.date" name="publishDate" />
					<param className="adr.location" name="location" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block147" name="MySpace">
		<providerUrl>
			http://developer.myspace.com/Community/
		</providerUrl>
		<description>
			<tags>social opensocial</tags>
			<text>
				With MDP you will be able to create compelling new
				products that integrate directly into MySpace pages and
				get exposure to millions of people around the world.
			</text>
		</description>
		<category>community</category>
		<services>
			<service name="Photos">
				<description>
					Returns all photos of the user specified by userid
				</description>
				<invokeUrl>
					http://api.myspace.com/v1/users/{userid}/photos
				</invokeUrl>
				<input>
					<param className="person.id" name="userid"
						required="true">
						<description>User identifier</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="photo.title" name="title" />
					<param className="photo.description"
						name="description" />
					<param className="photo.imageUrl" name="imageUrl" />
					<param className="geo.latitude" name="latitude" />
					<param className="geo.longitude" name="longitude" />
				</output>
			</service>
			<service name="Videos">
				<description>
					Returns the videos of the user specified by userid
				</description>
				<invokeUrl>
					http://api.myspace.com/v1/users/{userid}/videos
				</invokeUrl>
				<input>
					<param className="person.id" name="userid"
						required="true">
						<description>User identifier</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="video.title" name="title" />
					<param className="video.description"
						name="description" />
					<param className="video.url" name="link" />
					<param className="geo.latitude" name="latitude" />
					<param className="geo.longitude" name="longitude" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block148" name="MSNMessenger">
		<providerUrl>http://dev.live.com/messenger/</providerUrl>
		<description>
			<tags>chat messaging desktop</tags>
			<text>
				an HTML-based application that is exposed as part of the
				MSN Messenger client
			</text>
		</description>
		<category>chat</category>
		<services>
			<service name="InviteUser">
				<description>
					Inviting Users to Share Online Presence
				</description>
				<invokeUrl>
					http://settings.messenger.live.com/applications/websignup.aspx
				</invokeUrl>
				<input>
					<param className="object.url" name="returnurl"
						required="false">
						<description>
							the URL on your site that the user will be
							returned to
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="adr.anyType" name="privacyurl"
						required="true">
						<description>
							the URL for your site s privacy page
						</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.id" name="Id" />
					<param className="object.string" name="Result" />
				</output>
			</service>
			<service name="Query">
				<description>
					Querying with the Windows Live Presence
				</description>
				<invokeUrl>
					http://messenger.services.live.com/users/[ID]/[resource]/
				</invokeUrl>
				<input>
					<param className="object.url" name="cb"
						required="false">
						<description>
							a presence resource request
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="adr.region" name="mkt"
						required="false">
						<description>
							Specifies a culture ID indicating the
							language to which the statusText string
							should be localized
						</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.string" name="status" />
					<param className="object.string" name="statusText" />
					<param className="object.id" name="id" />
					<param className="photo.imageUrl" name="icon.url" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block149" name="CNet">
		<providerUrl>http://api.cnet.com</providerUrl>
		<description>
			<tags>shopping</tags>
			<text>get product information from cnet</text>
		</description>
		<category>shopping</category>
		<services>
			<service name="findProducts">
				<description>
					Get search results from the Windows Live Search
					engine
				</description>
				<input>
					<param className="object.string" name="keyWords"
						required="true">
						<description>
							The product info to search for
						</description>
						<defaultValue>Harry Potter</defaultValue>
					</param>
				</input>
				<output>
					<param className="product.title" name="title" />
					<param className="object.url" name="detailsURL" />
					<param className="object.string" name="category" />
					<param className="photo.thumbnailImageUrl"
						name="stockPhotoURL" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block150" name="Dapper">
		<providerUrl>http://www.dapper.net</providerUrl>
		<description>
			<tags>Internet</tags>
			<text>get product information from cnet</text>
		</description>
		<category>Internet</category>
		<services>
			<service name="search">
				<description>
					provides a programmatic interface for searching
					Dapps and their properties
				</description>
				<input>
					<param className="object.string" name="keyWords"
						required="true">
						<description>
							The key term info to search for
						</description>
						<defaultValue>health</defaultValue>
					</param>
				</input>
				<output>
					<param className="news.title" name="title" />
					<param className="news.url" name="domain" />
					<param className="object.description"
						name="description" />
					<param className="object.url" name="link" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block151" name="Engadget">
		<providerUrl>
			http://www.engadget.com, http://feeds.engadget.com
		</providerUrl>
		<description>
			<tags>news</tags>
			<text>get news from engadget</text>
		</description>
		<category>news</category>
		<services>
			<service name="getNews">
				<description>get news from engadget</description>
				<input></input>
				<output>
					<param className="news.title" name="title" />
					<param className="news.description" name="content" />
					<param className="news.url" name="link" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block152" name="Feedity">
		<providerUrl>http://www.feedity.com</providerUrl>
		<description>
			<tags>news</tags>
			<text>get news from feedity</text>
		</description>
		<category>news</category>
		<services>
			<service name="getNews">
				<description>get news from feedity</description>
				<input></input>
				<output>
					<param className="news.title" name="title" />
					<param className="news.description" name="content" />
					<param className="news.url" name="link" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block153" name="Multimap">
		<providerUrl>
			http://www.multimap.com/share/documentation/api/1.2/
		</providerUrl>
		<description>
			<tags>mapping routing geocoding poi ajax Global</tags>
			<text>
				One-stop service for global AJAX mapping, routing,
				geocoding, searching and POI
			</text>
		</description>
		<category>mapping</category>
		<services>
			<service name="CreateMapView">
				<description>
					create a new map viewer and link it to the container
					DIV
				</description>
				<invokeUrl>
					http://clients.multimap.com/API/maps/api_key
				</invokeUrl>
				<input>
					<param className="geo.latitude" name="latitude"
						required="true">
						<description>
							latitude of the map view
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="geo.longitude" name="longtitude"
						required="true">
						<description>
							longtitude of the map view
						</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output />
			</service>
		</services>
	</block>
	<block id="Block154" name="Basecamp">
		<providerUrl>
			http://developer.37signals.com/basecamp/
		</providerUrl>
		<description>
			<tags>enterprise pm</tags>
			<text>a unique project collaboration tool</text>
		</description>
		<category>enterprise</category>
		<services>
			<service name="Getproject">
				<description>
					Returns a single project identified by its integer
					ID
				</description>
				<invokeUrl>none</invokeUrl>
				<input>
					<param className="object.id" name="id"
						required="true">
						<description>project id</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.anyType" name="project" />
				</output>
			</service>
			<service name="Getpeople">
				<description>
					return all of the people in the given company
				</description>
				<invokeUrl>none</invokeUrl>
				<input>
					<param className="object.id" name="project_id"
						required="false">
						<description>project id</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="object.id" name="company_id"
						required="false">
						<description>company id</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="person.anyType" name="person" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block155" name="Lyricsfly">
		<providerUrl>http://lyricsfly.com/api/</providerUrl>
		<description>
			<tags>music lyrics</tags>
			<text>Song lyrics search engine</text>
		</description>
		<category>music</category>
		<services>
			<service name="search">
				<description>search out lyrics</description>
				<invokeUrl>http://lyricsfly.com/api/api.php</invokeUrl>
				<input>
					<param className="person.id" name="i"
						required="true">
						<description>USER ID</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="person.name" name="a"
						required="true">
						<description>ARTIST</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="music.title" name="t"
						required="true">
						<description>TITLE</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.string" name="tx" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block156" name="indeed">
		<providerUrl>http://www.indeed.com/jsp/apiinfo.jsp</providerUrl>
		<description>
			<tags>job search</tags>
			<text>search the Indeed job</text>
		</description>
		<category>jobSearch</category>
		<services>
			<service name="search">
				<description>search jobs</description>
				<invokeUrl>http://api.indeed.com/apisearch</invokeUrl>
				<input>
					<param className="object.string" name="searchkey"
						required="true">
						<description>
							using search key to access to tools to
							receive job data
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="job.name" name="q"
						required="false">
						<description>Query</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="adr.location" name="l"
						required="false">
						<description>
							Location. Use a postal code or a city, state
							combination
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="object.integer" name="MaxNum"
						required="false">
						<description>
							Maximum number of results returned per query
						</description>
						<defaultValue>10</defaultValue>
					</param>
					<param className="object.string" name="Sort by"
						required="true">
						<description>
							Sort by relevance or date
						</description>
						<defaultValue>relevance</defaultValue>
					</param>
				</input>
				<output>
					<param className="job.description"
						name="description" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block157" name="MusicBrainz">
		<providerUrl>
			http://wiki.musicbrainz.org/XMLWebService
		</providerUrl>
		<description>
			<tags>music</tags>
			<text>Music metadata community service</text>
		</description>
		<category>music</category>
		<services>
			<service name="SearchingArtists">
				<description>Looking up a Specific Artist</description>
				<invokeUrl>
					http://musicbrainz.org/ws/1/artist/
				</invokeUrl>
				<input>
					<param className="object.string" name="inc"
						required="false">
						<description>
							A list of space separated values describing
							how much detail should be included in the
							output
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="object.integer" name="limit"
						required="false">
						<description>
							An integer value defining how many entries
							should be returned
						</description>
						<defaultValue>25</defaultValue>
					</param>
					<param className="person.name" name="name"
						required="true">
						<description>matching name</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="person.name" name="artist" />
				</output>
			</service>
			<service name="SearchingReleases">
				<description>Looking up a Specific Release</description>
				<invokeUrl>
					http://musicbrainz.org/ws/1/release/
				</invokeUrl>
				<input>
					<param className="object.integer" name="limit"
						required="false">
						<description>
							An integer value defining how many entries
							should be returned
						</description>
						<defaultValue>25</defaultValue>
					</param>
					<param className="person.name" name="artist"
						required="true">
						<description>given artist</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="adr.anyType" name="title"
						required="true">
						<description>title to match</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="music.anyType" name="music" />
				</output>
			</service>
			<service name="ratingsresources">
				<description>
					Looking up rating for a Specific Entity
				</description>
				<invokeUrl>
					http://musicbrainz.org/ws/1/rating/
				</invokeUrl>
				<input>
					<param className="object.id" name="id"
						required="false">
						<description>
							The MBID of the entity that you would like
							to see your rating for
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="object.string" name="entity"
						required="false">
						<description>
							Identifies the entity type, can be artist,
							release, track or label
						</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="music.anyType" name="music" />
				</output>
			</service>
			<service name="folksonomyresources">
				<description>
					Looking up tags for a Specific Entity
				</description>
				<invokeUrl>http://musicbrainz.org/ws/1/tag/</invokeUrl>
				<input>
					<param className="object.id" name="id"
						required="false">
						<description>
							The MBID of the entity that you would like
							to see your rating for
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="object.string" name="entity"
						required="false">
						<description>
							Identifies the entity type, can be artist,
							release, track or label
						</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="music.anyType" name="music" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block158" name="YahooMapImage">
		<providerUrl>
			http://developer.yahoo.com/maps/rest/V1/index.html
		</providerUrl>
		<description>
			<tags>mapping</tags>
			<text>
				allows you to get a URL pointing to a graphic of a map
				generated according to the parameters you specify
			</text>
		</description>
		<category>mapping</category>
		<services>
			<service name="Gettingamap">
				<description>
					provides a reference to a map graphic generated
					according to the parameters you specify in your
					request.
				</description>
				<invokeUrl>
					http://local.yahooapis.com/MapsService/V1/mapImage
				</invokeUrl>
				<input>
					<param className="adr.street-address" name="street"
						required="false">
						<description>Street name</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="adr.zipCode" name="zipcode"
						required="false">
						<description>
							The five-digit zip code, or the five-digit
							code plus four-digit extension
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="geo.latitude" name="latitude"
						required="true">
						<description>latitude</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="geo.longitude" name="longtitude"
						required="true">
						<description>longtitude</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="photo.string" name="imagetype"
						required="false">
						<description>
							The image format for the map
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="object.string" name="output"
						required="false">
						<description>
							The format for the output
						</description>
						<defaultValue>php</defaultValue>
					</param>
				</input>
				<output>
					<param className="object.url" name="mapurl" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block159" name="Zvents">
		<providerUrl>
			http://corporate.zvents.com/developers/
		</providerUrl>
		<description>
			<tags>events local</tags>
			<text>
				The Zvents Developer API provides programmatic access to
				objects stored in Zvents include events, venues, groups,
				users and tags.
			</text>
		</description>
		<category>events</category>
		<services>
			<service name="event">
				<description>
					Retrieve information for an event
				</description>
				<invokeUrl>http://www.zvents.com/rest/event</invokeUrl>
				<input>
					<param className="object.string" name="key"
						required="true">
						<description>
							Zvents Developer API key
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="event.id" name="id"
						required="true">
						<description>ID of the event</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="event.id" name="id" />
					<param className="event.description"
						name="description" />
					<param className="event.url" name="link" />
					<param className="event.name" name="name" />
					<param className="event.summary" name="summary" />
				</output>
			</service>
			<service name="search">
				<description>
					Search for events by what, when and where parameters
				</description>
				<invokeUrl>http://www.zvents.com/rest/search</invokeUrl>
				<input>
					<param className="event.string" name="what"
						required="false">
						<description>
							A string specifying a date range for the
							search
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="event.string" name="when"
						required="false">
						<description>
							separating two dates with the word to
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="event.string" name="location"
						required="false">
						<description>
							A string describing a location around which
							the search results will be restricted
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="object.integer" name="limit"
						required="false">
						<description>
							The maximum number of matching events to
							return
						</description>
						<defaultValue>10</defaultValue>
					</param>
					<param className="object.integer" name="cat"
						required="false">
						<description>
							Restrict your search to items that belong to
							a specific category
						</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="event.id" name="id" />
					<param className="event.description"
						name="description" />
					<param className="event.url" name="link" />
					<param className="event.name" name="name" />
					<param className="event.summary" name="summary" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block160" name="AmazonS3">
		<providerUrl>http://www.amazon.com/gp/browse.html</providerUrl>
		<description>
			<tags>storage</tags>
			<text>
				the Simple Storage Service is used to store objects
				using the Amazon online storage infrastructure
			</text>
		</description>
		<category>storage</category>
		<services>
			<service name="write">
				<description>store information</description>
				<invokeUrl>http://aws.amazon.com/s3/</invokeUrl>
				<input>
					<param className="object.anyType" name="data"
						required="true">
						<description>object</description>
						<defaultValue>dataIns</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
		</services>
	</block>
	<block id="Block161" name="feedburner">
		<providerUrl>
			http://www.feedburner.com, http://feeds.feedburner.com,
			http://feedburner.jp
		</providerUrl>
		<description>
			<tags>news</tags>
			<text>get variety kinds of feeds</text>
		</description>
		<category>news</category>
		<services>
			<service name="getNews">
				<description>get news from a specific feed</description>
				<input>
					<param className="object.string" name="feedName"
						required="true">
						<description>
							The feed name to retrive news
						</description>
						<defaultValue>mashable</defaultValue>
					</param>
				</input>
				<output>
					<param className="news.title" name="title" />
					<param className="news.description" name="content" />
					<param className="news.url" name="link" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block162" name="Zillow">
		<providerUrl>
			http://www.zillow.com/howto/api/APIOverview.htm
		</providerUrl>
		<description>
			<tags>realestate</tags>
			<text>
				turns member sites into mini real estate portals by
				offering fresh and provocative real estate content to
				keep people coming back
			</text>
		</description>
		<category>advertisiing</category>
		<services>
			<service name="GetZestimate">
				<description>
					get the information of the most recent property
					Zestimate
				</description>
				<invokeUrl>
					http://www.zillow.com/webservice/GetZestimate.htm
				</invokeUrl>
				<input>
					<param className="object.id" name="zws-id"
						required="true">
						<description>
							The Zillow Web Service Identifier
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="object.integer" name="zpid"
						required="true">
						<description>
							The Zillow Property ID for the property for
							which to obtain information
						</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="adr.location" name="Fulladdress" />
					<param className="object.anyType"
						name="Zestimate data" />
					<param className="object.url" name="Links" />
					<param className="object.boolean"
						name="Limit-warning" />
				</output>
			</service>
			<service name="GetSearchResults">
				<description>
					finds a property for a specified address
				</description>
				<invokeUrl>
					http://www.zillow.com/webservice/GetSearchResults.htm
				</invokeUrl>
				<input>
					<param className="object.id" name="zws-id"
						required="true">
						<description>
							The Zillow Web Service Identifier
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="adr.location" name="address"
						required="true">
						<description>
							The address of the property to search
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="adr.location" name="citystatezip"
						required="true">
						<description>
							The city+state combination and/or ZIP code
							for which to search
						</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="adr.anyType" name="Fulladdress" />
					<param className="object.anyType"
						name="Zestimate data" />
					<param className="object.url" name="Links" />
					<param className="object.boolean"
						name="Limit-warning" />
					<param className="object.id" name="zpid" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block163" name="SeeqPod">
		<providerUrl>
			http://www.seeqpod.com/api.php?music_discovery
		</providerUrl>
		<description>
			<tags>music search discovery</tags>
			<text>
				Submit a song you like to the SeeqPod Music Discovery
				API, and it will return a list of Playable Search
				results that we think you'll like
			</text>
		</description>
		<category>music</category>
		<services>
			<service name="Recommendation">
				<description>
					return a list of playable search results that we
					think you ll like
				</description>
				<invokeUrl>
					http://www.seeqpod.com/api/v0.2/UID/music/recommendations/artists/
				</invokeUrl>
				<input>
					<param className="person.name" name="artist"
						required="true">
						<description>
							The content producer being used as the base
							of the recommendations
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="music.name" name="sone"
						required="true">
						<description>
							The playable search result to base the
							recommendations off of
						</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="music.title" name="title" />
					<param className="music.url" name="mp3_url_id" />
					<param className="music.id" name="song_id" />
				</output>
			</service>
			<service name="Search">
				<description>
					he search call will return a list of pointers
					relevant to the given query
				</description>
				<invokeUrl>
					http://www.seeqpod.com/api/v0.2/UID/music/search/query/start
					index/num results/
				</invokeUrl>
				<input>
					<param className="object.string" name="query"
						required="true">
						<description>
							The string to be searched for
						</description>
						<defaultValue>none</defaultValue>
					</param>
					<param className="object.integer" name="startindex"
						required="false">
						<description>
							The zero based starting index for pagination
						</description>
						<defaultValue>0</defaultValue>
					</param>
					<param className="object.integer" name="numresults"
						required="false">
						<description>
							The number of results that to be returned
							for this page
						</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output>
					<param className="music.title" name="title" />
					<param className="music.url" name="mp3_url_id" />
					<param className="music.id" name="song_id" />
				</output>
			</service>
			<service name="VideoSearch">
				<description>
					The Video Search call will return a list of videos
					relevant to the given query
				</description>
				<invokeUrl>
					http://www.seeqpod.com/api/v0.2/UID/video/search/query/
				</invokeUrl>
				<input>
					<param className="object.string" name="query"
						required="true">
						<description>
							The string to be searched for
						</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="video.title" name="title" />
					<param className="video.videoUrl" name="location" />
					<param className="photo.imageUrl" name="image" />
				</output>
			</service>
			<service name="CacheAccess">
				<description>
					This call will return a temporary pointer to the
					given url_id
				</description>
				<invokeUrl>
					http://www.seeqpod.com/api/adserve/results
				</invokeUrl>
				<input>
					<param className="music.url" name="mp3_url_id"
						required="true">
						<description>
							The url_id to be retrieved from the cache,
							as found in a search call
						</description>
						<defaultValue>none</defaultValue>
					</param>
				</input>
				<output>
					<param className="music.url" name="tempUrl" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block164" name="Yelp">
		<providerUrl>http://www.yelp.com/developers</providerUrl>
		<description>
			<tags>shopping local</tags>
			<text>
				The Yelp APIs are REST (REpresentational State Transfer)
				APIs and users of these APIs will be able to retrieve
				business review and rating, information for a particular
				geographic region or location
			</text>
		</description>
		<category>shopping</category>
		<services>
			<service name="YelpReviewSearch">
				<description>
					The Yelp Review Search API allows the retrieval of
					Yelp business and review data based on a set of
					input parameters
				</description>
				<invokeUrl>
					http://api.yelp.com/business_review_search
				</invokeUrl>
				<input>
					<param className="geo.latitude" name="tl_lat"
						required="true">
						<description>
							Top Left latitude of bounding box
						</description>
						<defaultValue />
					</param>
					<param className="geo.longitude" name="tl_long"
						required="true">
						<description>
							Top Left longitude of bounding box
						</description>
						<defaultValue />
					</param>
					<param className="geo.latitude" name="br_lat"
						required="true">
						<description>
							Bottom right latitude of bounding box
						</description>
						<defaultValue />
					</param>
					<param className="geo.longitude" name="br_long"
						required="true">
						<description>
							Bottom right longitude of bounding box
						</description>
						<defaultValue />
					</param>
					<param className="object.string" name="term"
						required="false">
						<description>
							String representing the name of business or
							search term being requested. (E.G. bars )
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="object.name" name="businesses" />
					<param className="adr.location" name="address1" />
					<param className="adr.location" name="address2 " />
					<param className="object.string" name="categories" />
					<param className="adr.name" name="city" />
				</output>
			</service>
			<service name="YelpNeighborhood">
				<description>
					The Yelp Neighborhood API allows the retrieval of
					neighborhood name information based on various input
					parameters
				</description>
				<invokeUrl>
					http://api.yelp.com/neighborhood_search
				</invokeUrl>
				<input>
					<param className="geo.latitude" name="lat"
						required="true">
						<description>
							Latitude of geo-point for which a
							neighborhood name is desired.
						</description>
						<defaultValue />
					</param>
					<param className="geo.longitude" name="long"
						required="true">
						<description>
							Longitude of geo-point for which a
							neighborhood name is desired.
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="adr.region" name="neighborhoods" />
					<param className="adr.name" name="name " />
					<param className="adr.locality" name="city" />
					<param className="adr.region" name="state" />
					<param className="object.url" name="url" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block165" name="Zazzle">
		<providerUrl>http://www.zazzle.com/api</providerUrl>
		<description>
			<tags>shopping</tags>
			<text>
				Zazzle provides a simple URL linkover-based API that
				allows any third party to automatically generate a
				customized product with dynamic images and text
			</text>
		</description>
		<category>shopping</category>
		<services>
			<service name="CreateTemplateLink">
				<description />
				<invokeUrl>http://www.zazzle.com/create</invokeUrl>
				<input>
					<param className="product.id" name="TemplateId"
						required="true">
						<description />
						<defaultValue />
					</param>
					<param className="photo.imageUrl" name="CoverImg"
						required="true">
						<description />
						<defaultValue />
					</param>
					<param className="product.description"
						name="CoverText" required="true">
						<description />
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="product.url" name="ProductUrl" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block166" name="MyVox">
		<providerUrl>
			http://www2.myvox.com/developers/default.asp
		</providerUrl>
		<description>
			<tags>telephony media Voice</tags>
			<text>
				voice-enable any application you can imagine. MyVox
				turns any phone into a microphone hooked up to your
				application.
			</text>
		</description>
		<category>telephony</category>
		<services>
			<service name="GetRecording">
				<description>
					Returns data for a Recording instance associated
					with a RecordingList instance. If ��recording_key��
					is specified then the matching recording is
					returned.
				</description>
				<invokeUrl>
					http://api.myvox.com/vr?action=GetRecording
				</invokeUrl>
				<input>
					<param className="track.string"
						name="voice_recorder_key" required="true">
						<description>
							The identification key for the VoiceRecorder
							application instance
						</description>
						<defaultValue />
					</param>
					<param className="track.string" name="recording_key"
						required="true">
						<description>
							The identification key for the RecordingList
							instance
						</description>
						<defaultValue />
					</param>
					<param className="adr.anyType"
						name="The identification key for the RecordingList instance"
						required="false">
						<description>
							The identification key for the RecordingList
							instance
						</description>
						<defaultValue />
					</param>
					<param className="music.anyType" name="meta_data_1"
						required="false">
						<description>
							Arbitrary meta-data associated with the
							Recording instance
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="music.string" name="date_created" />
					<param className="event.boolean" name="Status" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block167" name="MyBlogLog">
		<providerUrl>http://developer.yahoo.com/mybloglog/</providerUrl>
		<description>
			<tags>blog social</tags>
			<text>
				Discover who visits your favorite sites, including your
				own. MyBlogLog powers the Recent Reader widget seen on
				many blog sidebars which feature photos of a sites' most
				recent readers.
			</text>
		</description>
		<category>community</category>
		<services>
			<service name="findByName">
				<description />
				<invokeUrl />
				<input>
					<param className="object.string" name="format"
						required="false">
						<description>
							Defines the returned response type for the
							call. If using a header use HTTP ACCEPT.
							Query string values are xml , json , php
						</description>
						<defaultValue />
					</param>
					<param className="object.string" name="callback"
						required="false">
						<description>
							If set, wraps the JSON object in call to the
							selected function. Only makes sense if
							output selected is JSON
						</description>
						<defaultValue />
					</param>
					<param className="person.name" name="name"
						required="true">
						<description>
							Name of community you are looking up
						</description>
						<defaultValue />
					</param>
				</input>
				<output>
					<param className="blog.id" name="id" />
					<param className="blog.name" name="name" />
					<param className="blog.url" name="url" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block168" name="GoogleVideoSearch">
		<providerUrl>
			http://ajax.googleapis.com/ajax/services/search/video
		</providerUrl>
		<description>
			<tags>video</tags>
			<text>Search for video</text>
		</description>
		<category>video</category>
		<services>
			<service name="search">
				<description>
					Get video search results from the Google Search
					engine
				</description>
				<input>
					<param className="object.allType" name="query"
						required="true">
						<description>
							The term to search for
						</description>
						<defaultValue>robin</defaultValue>
					</param>
				</input>
				<output>
					<param className="video.title" name="title" />
					<param className="video.description" name="content" />
					<param className="video.url" name="url" />
					<param className="object.date" name="published" />
					<param className="video.userName" name="publisher" />
					<param className="photo.thumbnailImageUrl"
						name="videoUrl" />
					<param className="video.url" name="flashVersionUrl" />
				</output>
			</service>
		</services>
	</block>
	<block id="Block169" name="Output">
		<providerUrl>http://myoutput.com/</providerUrl>
		<description>
			<tags>output</tags>
			<text>display terminal</text>
		</description>
		<category>mapping</category>
		<services>
			<service name="outputData">
				<description>output all the data</description>
				<invokeUrl />
				<input>
					<param className="object.allType" name="inputParam"
						required="true">
						<description>input Data</description>
						<defaultValue>0</defaultValue>
					</param>
				</input>
				<output></output>
			</service>
		</services>
	</block>
</blocks>
/* * Copyright (c) 2008 Nokia Corporation. */// Contains game cell related variables and functions // Has to be included at the first frame of grid // Currently selected cell column position (0-9)var currentCellColumn : Number = 4;// Currently selected cell row position (0-9)var currentCellRow : Number = 4;// New navigated target cell column position (0-9)var newCellColumn : Number = 4;// New navigated target cell row position (0-9)var newCellRow : Number = 4;// Empty cells var emptyCellNums : Number = 81;// Currently selected of cell movieclip (0-80)var currentCellIndex : Number = currentCellRow * 9 + currentCellColumn;var currentCellWidth : Number;// Write puzzle array numbers into cells// Set cell text color to cellTextColorfunction initCells(puzzle:Array,cellTextColor:Number):Void {    var row:Number;    var column:Number;	if(!cellTextColor){		cellTextColor=0x000000		}    for (row=0; row<9; row++) {        for (column=0; column<9; column++) {            if (puzzle[row][column] != 0) {                _root.main.grid["grid"+(row*9+column)].num.textColor = cellTextColor;                _root.main.grid["grid"+(row*9+column)].num.text = puzzle[row][column];                _root.main.grid["grid"+(row*9+column)].cellValue = puzzle[row][column];                _root.main.grid["grid"+(row*9+column)].isInitialized = true;                _root.main.emptyCellNums--;            }else{                _root.main.grid["grid"+(row*9+column)].cellValue =0                _root.main.grid["grid"+(row*9+column)].num.text ="";                }        }    }}
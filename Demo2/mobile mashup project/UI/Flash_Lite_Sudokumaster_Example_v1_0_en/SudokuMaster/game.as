/* * Copyright (c) 2008 Nokia Corporation. */var currentPuzzleIndex : Number = 1;// How many times user have filled/cleaned a cell (excluding repeats)var userMoves : Number = 0;// Starts new game. Initializes variables and listeners. Updates the screen.function startGame():Void{    //add screensize change listener[listener.as]    initSizeListener();        loadKeyListener(_root.main.gameKeyListener);	loadMouseListener(_root.main.gameMouseListener);    loadSKMouseListener(_root.main.gameSKMouseListener);	setSKLabels("Options", "Exit");}// Reset a game to the beginning of current selected puzzlefunction reset():Void {	//reset variables    _root.main.secondsPassed = 0;    _root.main.minsPassed = 0;    _root.main.emptyCellNums = 81;    _root.main.currentCellColumn = 4;    _root.main.currentCellRow = 4;    _root.main.newCellColumn = 4;    _root.main.newCellRow = 4;    _root.main.userMoves=0    _root.main.timeString="00:00"		// Clean filled numbers    cleanGrids();    	// Fill grid with new numbers    _root.main.initCells(_root.main["puzzle"+_root.main.currentPuzzleIndex],_root.main.cellPrefillTextColor);		 // Center the boardHighlight     _root.main.updateCursorPosition()    	_root.main.setSKLabels("Options", "Exit");   		    _root.main.startTimer()}// Lose current puzzle data and start a new gamefunction newGame():Void {    _root.main.currentPuzzleIndex++;    if (_root.main.currentPuzzleIndex>_root.main.TOTAL_PUZZLE_AMOUNT) {        _root.main.currentPuzzleIndex = 1;    }    reset();}// Clean old grid numbersfunction cleanGrids():Void {    for (row=0; row<9; row++) {        for (column=0; column<9; column++) {            if (puzzle[row][column] != 0) {                _root.main.grid["grid"+(row*9+column)].num.text = "";                _root.main.grid["grid"+(row*9+column)].cellValue = 0;                _root.main.grid["grid"+(row*9+column)].isInitialized = false;            }        }    }}// Pops up game over screen// Stops the timer and updates labelsfunction gameOver():Void {    _root.main.stopTimer();    popWinscreen();}
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<catalog>
<tile tileId="1">
<name>VirtualEarth</name>
<providerUrl>http://maps.live.com/</providerUrl>
<description>
<tags>mapping</tags>
<text>Adds a pushpin to the map based on latitude and longitude</text>
</description>
<category>mapping</category>
<services>
<service name="addPushpin">
<description>Adds a pushpin to the map based on latitude and longitude</description>
<invokeUrl/>
<input>
<param className="geo.latitude" name="latitude" required="true">
<description>The pushpin's latitude</description>
<defaultValue>0</defaultValue>
</param>
<param className="geo.longitude" name="longitude" required="true">
<description>The pushpin's longitude</description>
<defaultValue>0</defaultValue>
</param>
<param className="photo.thumbnailImageUrl" name="url" required="false">
<description>The URL used for the pushpin's image</description>
<defaultValue>0</defaultValue>
</param>
<param className="object.title" name="title" required="false">
<description>The pushpin's title</description>
<defaultValue>My Pushpin</defaultValue>
</param>
<param className="object.description" name="description" required="false">
<description>The pushpin's description</description>
<defaultValue>This is a pushpin on the earth</defaultValue>
</param>
</input>
<output>
</output>
</service> 
</services>
</tile>
<tile tileId="2">
<name>Flickr</name>
<providerUrl>http://www.flickr.com/services/api/, http://api.flickr.com</providerUrl>
<description>
<tags>photos</tags>
<text>Get photos you wanted</text>
</description>
<category>photos</category>
<services>
<service name="getGeotaggedPhotos">
<description>Get photos that have a latitude and longitude and have been tagged as "geotagged"</description>
<invokeUrl/>
<input>
<param className="object.string" name="search_text" required="true">
<description>text in title, description, or tags</description>
<defaultValue>beach</defaultValue>
</param>
<param className="object.decimal" name="number" required="false">
<description>maximum number of photos to return</description>
<defaultValue>15</defaultValue>
</param>
</input>
<output>
<param className="photo.title" name="title"/>
<param className="photo.imageUrl" name="url"/>
<param className="photo.thumbnailImageUrl" name="thumbnailUrl"/>
<param className="photo.userName" name="owner"/>
<param className="photo.url" name="linkUrl"/>
<param className="photo.imageUrl" name="originalUrl"/>
<param className="geo.latitude" name="latitude"/>
<param className="geo.longitude" name="longitude"/>
<param className="photo.id" name="id"/>
</output>
</service>
</services>
</tile>
<tile tileId="3">
<name>Upcoming</name>
<providerUrl>http://www.upcoming.org/</providerUrl>
<description>
<tags>events</tags>
<text>Get events</text>
</description>
<category>events</category>
<services>
<service name="findEvents">
<description>Find events from upcoming.org</description>
<invokeUrl/>
<input>
<param className="object.string" name="searchText" required="true">
<description>Search terms</description>
<defaultValue>music</defaultValue>
</param>
</input>
<output>
<param className="event.id" name="id"/>
<param className="event.title" name="name"/>
<param className="event.description" name="description"/>
<param className="event.date" name="start_date"/>
<param className="event.date" name="end_date"/>
<param className="event.time" name="start_time"/>
<param className="event.time" name="end_time"/>
<param className="object.string" name="personal"/>
<param className="object.string" name="selfpromotion"/>
<param className="object.id" name="metro_id"/>
<param className="object.id" name="venue_id"/>
<param className="object.id" name="user_id"/>
<param className="object.id" name="category_id"/>
<param className="event.date" name="date_posted"/>
<param className="geo.latitude" name="latitude"/>
<param className="geo.longitude" name="longitude"/>
<param className="object.string" name="geocoding_precision"/>
<param className="object.string" name="geocoding_ambiguous"/>
</output>
</service>
</services>
</tile>
<tile tileId="4">
<name>Digg</name>
<providerUrl>http://digg.com/</providerUrl>
<description>
<tags>news</tags>
<text>Get recent stories</text>
</description>
<category>news</category>
<services>
<service name="getStories">
<description>Get recent stories</description>
<invokeUrl/>
<input>
<param className="object.integer" name="number" required="true">
<description>maximum number of stories to return</description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="story.title" name="title"/>
<param className="story.description" name="description"/>
<param className="person.userName" name="user"/>
<param className="photo.thumbnailImageUrl" name="userThumbnail"/>
<param className="object.string" name="topic"/>
<param className="object.id" name="storyID"/>
<param className="object.url" name="link"/>
<param className="story.date" name="submitDate"/>
<param className="object.integer" name="diggs"/>
<param className="object.string" name="comments"/>
<param className="object.url" name="href"/>
<param className="object.string" name="status"/>
</output>
</service>
<service name="getUsers">
<description>Get information of all users</description>
<invokeUrl/>
<input>
<param className="object.integer" name="number" required="true">
<description>maximum number of users to return</description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="person.userName" name="name"/>
<param className="photo.thumbnailImageUrl" name="thumbnail"/>
<param className="object.date" name="registered"/>
<param className="object.string" name="profileViews"/>
</output>
</service>
<service name="getUser">
<description>Get information of a specific user</description>
<invokeUrl/>
<input>
<param className="person.userName" name="userName" required="true">
<description>Named user</description>
<defaultValue>kevinrose</defaultValue>
</param>
</input>
<output>
<param className="person.userName" name="name"/>
<param className="photo.thumbnailImageUrl" name="thumbnail"/>
<param className="object.date" name="registered"/>
<param className="object.string" name="profileViews"/>
</output>
</service>
</services>
</tile>
<tile tileId="7">
<name>Twitter</name>
<providerUrl>http://twitter.com/</providerUrl>
<description>
<tags>community</tags>
<text>Get News</text>
</description>
<category>community</category>
<services>
<service name="getLatestPosts">
<description>Gets the latest updates from Twitter</description>
<invokeUrl/>
<input>
<param className="object.integer" name="number" required="true">
<description>Maximum number of results to return</description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="object.id" name="messageID"/>
<param className="object.description" name="text"/>
<param className="object.date" name="createdAt"/>
<param className="object.id" name="userID"/>
<param className="person.userName" name="screenName"/>
<param className="adr.locality" name="location"/>
<param className="object.description" name="description"/>
<param className="photo.thumbnailImageUrl" name="imageUrl"/>
<param className="object.url" name="url"/>
</output>
</service>
<service name="getLatestUserPosts">
<description>Gets the latest updates from a Twitter user</description>
<input>
<param className="person.userName" name="userID" required="true">
<description>User's Twitter ID</description>
<defaultValue>Conversation</defaultValue>
</param>
<param className="object.integer" name="number" required="false">
<description>Maximum number of results to return</description>
<defaultValue>15</defaultValue>
</param>
</input>
<output>
<param className="object.id" name="messageID"/>
<param className="object.description" name="text"/>
<param className="object.date" name="createdAt"/>
<param className="object.id" name="userID"/>
<param className="person.userName" name="screenName"/>
<param className="adr.locality" name="location"/>
<param className="object.description" name="description"/>
<param className="photo.thumbnailImageUrl" name="imageUrl"/>
<param className="object.url" name="url"/>
</output>
</service>
</services>
</tile>
<tile tileId="8">
<name>MSNNewsFeed</name>
<providerUrl>http://msn.com/</providerUrl>
<description>
<tags>news</tags>
<text>Get News</text>
</description>
<category>news</category>
<services>
<service name="TopBoxOffice">
<description>Top Box Office</description>
<input>
</input>
<output>
<param className="news.title" name="title"/>
<param className="object.url" name="link"/>
<param className="object.description" name="description"/>
<param className="object.string" name="source"/>
<param className="object.url" name="sourceLink"/>
<param className="object.name" name="author"/>
<param className="object.description" name="description"/>
<param className="object.string" name="tags"/>
<param className="object.string" name="comments"/>
<param className="object.string" name="comments"/>
<param className="object.date" name="publishedDate"/>
<param className="object.url" name="mediaLink"/>
<param className="object.string" name="mediaType"/>
</output>
</service>
<service name="TopCelebrities">
<description>Top Celebrities</description>
<input>
</input>
<output>
<param className="news.title" name="title"/>
<param className="object.url" name="link"/>
<param className="object.description" name="description"/>
<param className="object.string" name="source"/>
<param className="object.url" name="sourceLink"/>
<param className="object.name" name="author"/>
<param className="object.description" name="description"/>
<param className="object.string" name="tags"/>
<param className="object.string" name="comments"/>
<param className="object.string" name="comments"/>
<param className="object.date" name="publishedDate"/>
<param className="object.url" name="mediaLink"/>
<param className="object.string" name="mediaType"/>
</output>
</service>
<service name="InTheaters">
<description>Now Playing</description>
<input>
</input>
<output>
<param className="news.title" name="title"/>
<param className="object.url" name="link"/>
<param className="object.description" name="description"/>
<param className="object.string" name="source"/>
<param className="object.url" name="sourceLink"/>
<param className="object.name" name="author"/>
<param className="object.description" name="description"/>
<param className="object.string" name="tags"/>
<param className="object.string" name="comments"/>
<param className="object.string" name="comments"/>
<param className="object.date" name="publishedDate"/>
<param className="object.url" name="mediaLink"/>
<param className="object.string" name="mediaType"/>
</output>
</service>
<service name="TopStories">
<description>Top headlines</description>
<input>
</input>
<output>
<param className="news.title" name="title"/>
<param className="object.url" name="link"/>
<param className="object.description" name="description"/>
<param className="object.string" name="source"/>
<param className="object.url" name="sourceLink"/>
<param className="object.name" name="author"/>
<param className="object.description" name="description"/>
<param className="object.string" name="tags"/>
<param className="object.string" name="comments"/>
<param className="object.string" name="comments"/>
<param className="object.date" name="publishedDate"/>
<param className="object.url" name="mediaLink"/>
<param className="object.string" name="mediaType"/>
</output>
</service>
</services>
</tile>
<tile tileId="10">
<name>MSNShopping</name>
<providerUrl>http://shopping.msn.com/</providerUrl>
<description>
<tags>shopping</tags>
<text>MSN Shopping</text>
</description>
<category>shopping</category>
<services>
<service name="getProducts">
<description>Get products from MSN Shopping</description>
<input>
<param className="object.string" name="text" required="true">
<description>text in title or description</description>
<defaultValue>xbox 360</defaultValue>
</param>
<param className="object.integer" name="number" required="false">
<description>maximum number of products to return</description>
<defaultValue>30</defaultValue>
</param>
</input>
<output>
<param className="product.url" name="productUrl"/>
<param className="photo.imageUrl" name="url"/>
<param className="object.id" name="id"/>
<param className="object.id" name="categoryId"/>
<param className="object.title" name="title"/>
<param className="object.title" name="brand"/>
<param className="person.userName" name="vendorName"/>
<param className="object.description" name="description"/>
<param className="object.string" name="rating"/>
<param className="product.price" name="price"/>
<param className="object.id" name="vendorId"/>
</output>
</service>
</services>
</tile>
<tile tileId="11">
<name>GoogleWebSearch</name>
<providerUrl>http://ajax.googleapis.com/ajax/services/search/web</providerUrl>
<description>
<tags>search</tags>
<text>google web search</text>
</description>
<category>search</category>
<services>
<service name="search">
<description>Get web search results from the Google Search engine</description>
<input>
<param className="object.string" name="query" required="true">
<description>The term to search for</description>
<defaultValue>robin</defaultValue>
</param>
</input>
<output>
<param className="object.url" name="rawUrl"/>
<param className="object.title" name="title"/>
<param className="object.string" name="content"/>
</output>
</service>
</services>
</tile>
<tile tileId="12">
<name>GoogleLocalSearch</name>
<providerUrl>http://ajax.googleapis.com/ajax/services/search/local</providerUrl>
<description>
<tags>localSearch</tags>
<text>Search for local business listings by name, key word, or location</text>
</description>
<category>local</category>
<services>
<service name="search">
<description>Get web search results from the Google Search engine</description>
<input>
<param className="object.string" name="query" required="true">
<description>The term to search for</description>
<defaultValue>robin</defaultValue>
</param>
</input>
<output>
<param className="object.title" name="title"/>
<param className="object.url" name="googleMapUrl"/>
<param className="geo.latitude" name="latitude"/>
<param className="geo.longitude" name="longitude"/>
<param className="adr.street_address" name="streetAddress"/>
<param className="adr.locality" name="city"/>
<param className="adr.region" name="region"/>
<param className="adr.country" name="country"/>
<param className="object.url" name="ddUrl"/>
<param className="object.url" name="ddUrlToHere"/>
<param className="object.url" name="ddUrlFromHere"/>
<param className="photo.imageUrl" name="mapImage"/>
</output>
</service>
</services>
</tile>
<tile tileId="13">
<name>GoogleVideoSearch</name>
<providerUrl>http://ajax.googleapis.com/ajax/services/search/video</providerUrl>
<description>
<tags>video</tags>
<text>Search for video</text>
</description>
<category>video</category>
<services>
<service name="search">
<description>Get video search results from the Google Search engine</description>
<input>
<param className="object.string" name="query" required="true">
<description>The term to search for</description>
<defaultValue>robin</defaultValue>
</param>
</input>
<output>
<param className="video.title" name="title"/>
<param className="video.description" name="content"/>
<param className="video.url" name="url"/>
<param className="object.date" name="published"/>
<param className="video.userName" name="publisher"/>
<param className="photo.thumbnailImageUrl" name="videoUrl"/>
<param className="video.url" name="flashVersionUrl"/>
</output>
</service>
</services>
</tile>
<tile tileId="14">
<name>GoogleBlogSearch</name>
<providerUrl>http://ajax.googleapis.com/ajax/services/search/blog, http://blogsearch.google.com</providerUrl>
<description>
<tags>blog</tags>
<text>Search for blog</text>
</description>
<category>blog</category>
<services>
<service name="search">
<description>Get blog search results from the Google Search engine</description>
<input>
<param className="object.string" name="query" required="true">
<description>The term to search for</description>
<defaultValue>robin</defaultValue>
</param>
</input>
<output>
<param className="blog.title" name="title"/>
<param className="blog.url" name="postUrl"/>
<param className="blog.description" name="content"/>
<param className="blog.userName" name="author"/>
<param className="blog.url" name="blogUrl"/>
<param className="blog.date" name="publishedDate"/>
</output>
</service>
</services>
</tile>
<tile tileId="15">
<name>GoogleImageSearch</name>
<providerUrl>http://ajax.googleapis.com/ajax/services/search/image</providerUrl>
<description>
<tags>photos</tags>
<text>Search for image</text>
</description>
<category>photos</category>
<services>
<service name="search">
<description>Get image search results from the Google Search engine</description>
<input>
<param className="object.string" name="query" required="true">
<description>The term to search for</description>
<defaultValue>robin</defaultValue>
</param>
</input>
<output>
<param className="photo.title" name="title"/>
<param className="photo.imageUrl" name="imageUrl"/>
<param className="photo.thumbnailImageUrl" name="thumbnailUrl"/>
<param className="photo.description" name="content"/>
</output>
</service>
</services>
</tile>
<tile tileId="16">
<name>Youtube</name>
<providerUrl>http://gdata.youtube.com/feeds/api/videos</providerUrl>
<description>
<tags>video</tags>
<text>Search for image</text>
</description>
<category>video</category>
<services>
<service name="searchVideo">
<description>search videos in youtube</description>
<input>
<param className="object.string" name="searchText" required="true">
<description>The term to search for</description>
<defaultValue>football</defaultValue>
</param>
<param className="video.userName" name="author" required="false">
<description>videos uploaded by a particular YouTube user</description>
<defaultValue>robin</defaultValue>
</param>
<param className="object.integer" name="count" required="false">
<description>max returned number</description>
<defaultValue>10</defaultValue>
</param>
<param className="object.string" name="category" required="false">
<description>retrieve videos that are in a particular category or are tagged with a particular keyword or developer tag</description>
<defaultValue>Sports</defaultValue>
</param>
</input>
<output>
<param className="video.title" name="title"/>
<param className="photo.thumbnailImageUrl" name="thumbnailUrl"/>
<param className="video.description" name="description"/>
<param className="video.url" name="linkurl"/>
</output>
</service>
</services>
</tile>
<tile tileId="17">
<name>YahooNews</name>
<providerUrl>http://news.yahoo.com/, http://api.search.yahoo.com</providerUrl>
<description>
<tags>news</tags>
<text>Retrieves news based on the specified search term in yahoo</text>
</description>
<category>news</category>
<services>
<service name="searchNews">
<description>Retrieves news based on the specified search term in Yahoo</description>
<input>
<param className="object.string" name="term" required="true">
<description>The desired search term</description>
<defaultValue>Internet</defaultValue>
</param>
<param className="object.integer" name="count" required="false">
<description>max returned number</description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="news.title" name="title"/>
<param className="news.description" name="description"/>
<param className="object.url" name="url"/>
<param className="object.string" name="newsSource"/>
<param className="object.url" name="newsSourceURL"/>
<param className="news.date" name="publishDate"/>
<param className="photo.thumbnailImageUrl" name="thumbnailImageUrl"/>
</output>
</service>
</services>
</tile>
<tile tileId="18">
<name>YahooAnswers</name>
<providerUrl>http://answers.yahoo.com/</providerUrl>
<description>
<tags>search</tags>
<text>Retrieves a set of answers for the passed-in term</text>
</description>
<category>search</category>
<services>
<service name="getAnswers">
<description>Retrieves a set of answers for the passed-in term</description>
<input>
<param className="object.string" name="term" required="true">
<description>The desired search term</description>
<defaultValue>computers</defaultValue>
</param>
<param className="object.integer" name="count" required="false">
<description>max returned number</description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="object.title" name="subject"/>
<param className="object.description" name="content"/>
<param className="object.date" name="date"/>
<param className="object.url" name="link"/>
<param className="object.string" name="category"/>
<param className="object.id" name="userId"/>
<param className="photo.imageUrl" name="userPhotoURL"/>
<param className="person.userName" name="userNick"/>
<param className="object.integer" name="numAnswers"/>
<param className="object.integer" name="numComments"/>
<param className="object.id" name="chosenAnswererId"/>
<param className="person.userName" name="chosenAnswererNick"/>
</output>
</service>
</services>
</tile>
<tile tileId="19">
<name>LiveNews</name>
<providerUrl>http://search.live.com</providerUrl>
<description>
<tags>news</tags>
<text>Get News results from the Windows Live Search engine</text>
</description>
<category>news</category>
<services>
<service name="searchNews">
<description>Retrieves a set of answers for the passed-in term</description>
<input>
<param className="object.string" name="term" required="true">
<description>The desired search term</description>
<defaultValue>Technology</defaultValue>
</param>
<param className="object.integer" name="count" required="false">
<description>max returned number</description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="object.title" name="subject"/>
<param className="object.description" name="content"/>
<param className="object.url" name="url"/>
<param className="object.url" name="displayUrl"/>
<param className="object.string" name="source"/>
<param className="object.integer" name="totalCount"/>
</output>
</service>
</services>
</tile>
<tile tileId="20">
<name>FaceBook</name>
<providerUrl>http://search.live.com</providerUrl>
<description>
<tags>community</tags>
<text>FaceBook!</text>
</description>
<category>community</category>
<services>
<service name="getFriends">
<description>Gets information about your friends</description>
<input>
<param className="object.integer" name="number" required="false">
<description>Maximum number of friends to return </description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="object.id" name="id"/>
<param className="person.name" name="name"/>
<param className="adr.locality" name="city"/>
<param className="adr.region" name="state"/>
<param className="adr.country" name="country"/>
<param className="adr.zipCode" name="zipCode"/>
<param className="object.string" name="status"/>
<param className="object.date" name="statusLastChanged"/>
<param className="object.url" name="profileUrl"/>
<param className="photo.imageUrl" name="photoUrl"/>
<param className="photo.thumbnailImageUrl" name="thumbnailUrl"/>
<param className="object.description" name="aboutMe"/>
</output>
</service>
<service name="getUserInfoById">
<description>Gets information about your friends</description>
<input>
<param className="object.id" name="userID" required="true">
<description>user id</description>
<defaultValue>676712790</defaultValue>
</param>
</input>
<output>
<param className="object.id" name="id"/>
<param className="person.name" name="name"/>
<param className="adr.locality" name="city"/>
<param className="adr.region" name="state"/>
<param className="adr.country" name="country"/>
<param className="adr.zipCode" name="zipCode"/>
<param className="object.string" name="status"/>
<param className="object.date" name="statusLastChanged"/>
<param className="object.url" name="profileUrl"/>
<param className="photo.imageUrl" name="photoUrl"/>
<param className="photo.thumbnailImageUrl" name="thumbnailUrl"/>
<param className="object.description" name="aboutMe"/>
</output>
</service>
<service name="getPhotosByName">
<description>Gets information about your friends</description>
<input>
<param className="object.name" name="userName" required="true">
<description>user name</description>
<defaultValue>robin</defaultValue>
</param>
</input>
<output>
<param className="photo.title" name="caption"/>
<param className="photo.imageUrl" name="imageUrl"/>
<param className="photo.thumbnailImageUrl" name="thumbnailUrl"/>
<param className="photo.userName" name="owner"/>
</output>
</service>
<service name="getEvent">
<description>Gets event info for a specified event ID</description>
<input>
<param className="event.id" name="eventId" required="false">
<description>Event Id</description>
<defaultValue>5388533932</defaultValue>
</param>
</input>
<output>
<param className="event.id" name="eid"/>
<param className="event.title" name="name"/>
<param className="event.description" name="description"/>
<param className="event.time" name="start_time"/>
<param className="event.time" name="end_time"/>
<param className="photo.imageUrl" name="pic"/>
<param className="photo.imageUrl" name="pic_big"/>
<param className="photo.thumbnailImageUrl" name="thumbnailUrl"/>
<param className="event.userName" name="creator"/>
<param className="adr.locality" name="city"/>
<param className="adr.region" name="state"/>
<param className="adr.country" name="country"/>
</output>
</service>
</services>
</tile>
<tile tileId="21">
<name>YahooImage</name>
<providerUrl>http://images.yahoo.com, http://api.search.yahoo.com</providerUrl>
<description>
<tags>photos</tags>
<text>Retrieves images based on your search term</text>
</description>
<category>photos</category>
<services>
<service name="search">
<description>Retrieves images based on your search term</description>
<input>
<param className="object.string" name="term" required="true">
<description>The term(s) to search for</description>
<defaultValue>pretty</defaultValue>
</param>
<param className="object.integer" name="number" required="false">
<description>max returned number</description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="photo.title" name="title"/>
<param className="photo.imageUrl" name="imageUrl"/>
<param className="photo.thumbnailImageUrl" name="thumbnailUrl"/>
<param className="object.string" name="publisher"/>
<param className="photo.description" name="description"/>
</output>
</service>
</services>
</tile>
<tile tileId="22">
<name>YahooVideo</name>
<providerUrl>http://video.yahoo.com/, http://api.search.yahoo.com</providerUrl>
<description>
<tags>video</tags>
<text>Retrieves images based on your search term</text>
</description>
<category>video</category>
<services>
<service name="search">
<description>Retrieves images based on your search term</description>
<input>
<param className="object.string" name="term" required="true">
<description>The term(s) to search for</description>
<defaultValue>cars</defaultValue>
</param>
<param className="video.format" name="number" required="false">
<description>Types of videos to search for. Any combination of "any", "avi", "flash", "mpeg", "msmedia", "quicktime"...</description>
<defaultValue>flash</defaultValue>
</param>
<param className="object.integer" name="number" required="false">
<description>max returned number</description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="video.title" name="title"/>
<param className="video.description" name="description"/>
<param className="video.videoUrl" name="videoURL"/>
<param className="photo.thumbnailImageUrl" name="thumbnailImageURL"/>
</output>
</service>
</services>
</tile>
<tile tileId="23">
<name>YahooTraffic</name>
<providerUrl>http://traffic.yahoo.com/, http://api.search.yahoo.com</providerUrl>
<description>
<tags>local</tags>
<text>Returns traffic data for the corresponding address</text>
</description>
<category>local</category>
<services>
<service name="getTrafficForAddress">
<description>Returns traffic data for the corresponding address</description>
<input>
<param className="adr.street_address" name="street" required="true">
<description>Street address</description>
<defaultValue>1 Microsoft Way</defaultValue>
</param>
<param className="adr.locality" name="city" required="true">
<description>City for the address</description>
<defaultValue>Redmond</defaultValue>
</param>
<param className="adr.region" name="state" required="true">
<description>State for the address</description>
<defaultValue>WA</defaultValue>
</param>
<param className="object.decimal" name="radius" required="false">
<description>The radius to search within, in miles</description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="object.title" name="title"/>
<param className="object.string" name="type"/>
<param className="object.description" name="description"/>
<param className="geo.latitude" name="latitude"/>
<param className="geo.longitude" name="longitude"/>
<param className="object.string" name="direction"/>
<param className="object.string" name="severity"/>
<param className="object.date" name="reportDate"/>
<param className="object.date" name="updateDate"/>
<param className="object.date" name="endDate"/>
<param className="photo.thumbnailImageUrl" name="imageURL"/>
</output>
</service>
<service name="getTrafficForZipCode">
<description>Returns traffic data for the corresponding ZIP code</description>
<input>
<param className="adr.zipCode" name="zip" required="true">
<description>ZIP code</description>
<defaultValue>98052</defaultValue>
</param>
<param className="object.decimal" name="radius" required="false">
<description>The radius to search within, in miles</description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="object.title" name="title"/>
<param className="object.string" name="type"/>
<param className="object.description" name="description"/>
<param className="geo.latitude" name="latitude"/>
<param className="geo.longitude" name="longitude"/>
<param className="object.string" name="direction"/>
<param className="object.string" name="severity"/>
<param className="object.date" name="reportDate"/>
<param className="object.date" name="updateDate"/>
<param className="object.date" name="endDate"/>
<param className="photo.thumbnailImageUrl" name="imageURL"/>
</output>
</service>
</services>
</tile>
<tile tileId="24">
<name>LiveWebSearch</name>
<providerUrl>http://search.live.com</providerUrl>
<description>
<tags>search</tags>
<text>live web search</text>
</description>
<category>search</category>
<services>
<service name="search">
<description>Get search results from the Windows Live Search engine</description>
<input>
<param className="object.string" name="query" required="true">
<description>The term to search for</description>
<defaultValue>cheese</defaultValue>
</param>
<param className="object.integer" name="count" required="false">
<description>The number of returned results </description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="object.title" name="title"/>
<param className="object.description" name="description"/>
<param className="object.url" name="url"/>
</output>
</service>
</services>
</tile>
<tile tileId="25">
<name>eBay</name>
<providerUrl>http://open.api.ebay.com/shopping</providerUrl>
<description>
<tags>shopping</tags>
<text>get product information</text>
</description>
<category>shopping</category>
<services>
<service name="findProducts">
<description>Get shopping information from eBay </description>
<input>
<param className="object.string" name="keyWords" required="true">
<description>The term to search for</description>
<defaultValue>harry potter</defaultValue>
</param>
<param className="object.integer" name="count" required="false">
<description>The number of returned results </description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="product.title" name="title"/>
<param className="object.url" name="detailsURL"/>
<param className="photo.thumbnailImageUrl" name="stockPhotoURL"/>
</output>
</service>
<service name="getUserProfile">
<description>Retrieves default information about a user</description>
<input>
<param className="person.userName" name="userID" required="true">
<description>user's ID</description>
<defaultValue>hypothetical-user</defaultValue>
</param>
<param className="object.integer" name="count" required="false">
<description>The number of returned results </description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="object.date" name="registrationDate"/>
<param className="person.userName" name="userID"/>
<param className="object.url" name="sellerItemsURL"/>
<param className="object.url" name="aboutMeURL"/>
</output>
</service>
</services>
</tile>
<tile tileId="26">
<name>eBayRss</name>
<providerUrl>http://rss.api.ebay.com/ws/rssapi</providerUrl>
<description>
<tags>shopping</tags>
<text>get latest product information</text>
</description>
<category>shopping</category>
<services>
<service name="findProductsByCategory">
<description>Get search results from the Windows Live Search engine</description>
<input>
<param className="object.string" name="category" required="true">
<description>The category product info to search for</description>
<defaultValue>DVD</defaultValue>
</param>
</input>
<output>
<param className="product.title" name="title"/>
<param className="product.url" name="detailsURL"/>
<param className="product.description" name="description"/>
<param className="product.price" name="price"/>
<param className="photo.thumbnailImageUrl" name="stockPhotoURL"/>
</output>
</service>
</services>
</tile>
<tile tileId="27">
<name>amazon</name>
<providerUrl>http://ecs.amazonaws.com/onca/xml</providerUrl>
<description>
<tags>shopping</tags>
<text>get latest product information from amazon</text>
</description>
<category>shopping</category>
<services>
<service name="findProducts">
<description>Get search results from the Windows Live Search engine</description>
<input>
<param className="object.string" name="keyWords" required="true">
<description>The product info to search for</description>
<defaultValue>Harry Potter</defaultValue>
</param>
</input>
<output>
<param className="product.title" name="title"/>
<param className="object.url" name="detailsURL"/>
<param className="object.string" name="category"/>
<param className="photo.thumbnailImageUrl" name="stockPhotoURL"/>
</output>
</service>
</services>
</tile>
<tile tileId="28">
<name>delicious</name>
<providerUrl>https://api.del.icio.us/v1/posts, http://www.delicious.com</providerUrl>
<description>
<tags>bookmarks</tags>
<text>get tags or posts from delicious</text>
</description>
<category>bookmarks</category>
<services>
<service name="getPostsByTag">
<description>get posts from delicious</description>
<input>
<param className="object.string" name="tag" required="true">
<description>The tags to search for</description>
<defaultValue>google</defaultValue>
</param>
</input>
<output>
<param className="post.title" name="title"/>
<param className="post.url" name="postUrl"/>
<param className="post.description" name="description"/>
<param className="object.string" name="tags"/>
</output>
</service>
<service name="getTags">
<description>get tags from delicious</description>
<input>
</input>
<output>
<param className="object.string" name="tags"/>
</output>
</service>
</services>
</tile>
<tile tileId="29">
<name>blogspot</name>
<providerUrl>http://www.blogger.com/feeds/blogID/posts/default, http://www.blogspot.com</providerUrl>
<description>
<tags>blog</tags>
<text>retrieve the user's posts</text>
</description>
<category>blog</category>
<services>
<service name="getPosts">
<description>get posts from blogspot</description>
<input>
<param className="person.userName" name="blogUserName" required="true">
<description>The userName to search for</description>
<defaultValue>robin-zju</defaultValue>
</param>
</input>
<output>
<param className="blog.title" name="title"/>
<param className="blog.description" name="content"/>
<param className="person.name" name="author"/>
<param className="person.email" name="email"/>
</output>
</service>
</services>
</tile>
<tile tileId="31">
<name>YahooLocalSearch</name>
<providerUrl>http://yahoo.com/services/search/local, http://api.search.yahoo.com</providerUrl>
<description>
<tags>local</tags>
<text>Search for local business listings by name, key word, or location</text>
</description>
<category>local</category>
<services>
<service name="search">
<description>Get web search results from the yahoo Search engine</description>
<input>
<param className="object.string" name="query" required="true">
<description>The term to search for</description>
<defaultValue>hotel</defaultValue>
</param>
<param className="object.decimal" name="withinMiles" required="false">
<description>The miles within</description>
<defaultValue>10</defaultValue>
</param>
</input>
<output>
<param className="object.title" name="title"/>
<param className="object.url" name="googleMapUrl"/>
<param className="geo.latitude" name="latitude"/>
<param className="geo.longitude" name="longitude"/>
<param className="adr.street_address" name="streetAddress"/>
<param className="adr.locality" name="city"/>
<param className="adr.region" name="region"/>
<param className="adr.country" name="country"/>
<param className="object.url" name="ddUrl"/>
<param className="object.url" name="ddUrlToHere"/>
<param className="object.url" name="ddUrlFromHere"/>
<param className="photo.imageUrl" name="mapImage"/>
</output>
</service>
</services>
</tile>
<tile tileId="101">
<name>ShoppingCom</name>
<providerUrl>https://partners.shopping.com/app</providerUrl>
<description>
<tags>shopping</tags>
<text>Online retail shopping.</text>
</description>
<category>shopping</category>
<services>
<service name="findProducts">
<description>find related product information</description>
<invokeUrl>https://partners.shopping.com/app</invokeUrl>
<input>
<param className="object.string" name="keyWords" required="true">
<description>The product info to search for</description>
<defaultValue>Harry Potter</defaultValue>
</param>
</input>
<output>
<param className="product.title" name="title"/>
<param className="object.url" name="detailsURL"/>
<param className="object.string" name="category"/>
<param className="photo.thumbnailImageUrl" name="stockPhotoURL"/>
</output>
</service>
</services>
</tile>
<tile tileId="32">
<name>YahooMap</name>
<providerUrl>http://maps.yahoo.com/</providerUrl>
<description>
<tags>mapping</tags>
<text>Adds a pushpin to the map based on latitude and longitude</text>
</description>
<category>mapping</category>
<services>
<service name="addPushpin">
<description>Adds a pushpin to the map based on latitude and longitude</description>
<input>
<param className="geo.latitude" name="latitude" required="true">
<description>The pushpin's latitude</description>
<defaultValue>0</defaultValue>
</param>
<param className="geo.longitude" name="longitude" required="true">
<description>The pushpin's longitude</description>
<defaultValue>0</defaultValue>
</param>
<param className="photo.thumbnailImageUrl" name="url" required="false">
<description>The URL used for the pushpin's image</description>
<defaultValue>0</defaultValue>
</param>
<param className="object.title" name="title" required="false">
<description>The pushpin's title</description>
<defaultValue>My Pushpin</defaultValue>
</param>
<param className="object.description" name="description" required="false">
<description>The pushpin's description</description>
<defaultValue>This is a pushpin on the earth</defaultValue>
</param>
</input>
<output>
</output>
</service> 
</services>
</tile>
<tile tileId="33">
<name>GoogleNews</name>
<providerUrl>http://ajax.googleapis.com/ajax/services/search/news</providerUrl>
<description>
<tags>news</tags>
<text>Search news by name, key word, or location</text>
</description>
<category>news</category>
<services>
<service name="search">
<description>Get web search results from the Google Search engine</description>
<input>
<param className="object.string" name="topic" required="false">
<description>The related topic to search for</description>
<defaultValue>h</defaultValue>
</param>
</input>
<output>
<param className="news.title" name="title"/>
<param className="news.url" name="link"/>
<param className="news.description" name="content"/>
<param className="news.date" name="publicedDate"/>
</output>
</service>
</services>
</tile>
<tile tileId="37">
<name>YahooSearch</name>
<providerUrl>http://search.yahoo.com, http://api.search.yahoo.com</providerUrl>
<description>
<tags>search</tags>
<text>Yahoo web search</text>
</description>
<category>search</category>
<services>
<service name="search">
<description>Get web search results from the Yahoo Search engine</description>
<input>
<param className="object.string" name="query" required="true">
<description>The term to search for</description>
<defaultValue>robin</defaultValue>
</param>
</input>
<output>
<param className="object.url" name="rawUrl"/>
<param className="object.title" name="title"/>
<param className="object.string" name="content"/>
</output>
</service>
</services>
</tile>
<tile tileId="39">
<name>Audioscrobbler</name>
<providerUrl>http://www.Audioscrobbler.com, http://www.last.fm, http://ws.Audioscrobbler.com</providerUrl>
<description>
<tags>music</tags>
<text>retrieve the music information, such as users, artists</text>
</description>
<category>music</category>
<services>
<service name="getTracksByArtist">
<description>get artist's track</description>
<input>
<param className="person.userName" name="artist" required="true">
<description>The userName to search for</description>
<defaultValue>Cher</defaultValue>
</param>
</input>
<output>
<param className="track.name" name="name"/>
<param className="track.url" name="playUrl"/>
<param className="photo.imageURL" name="imageUrl"/>
<param className="photo.thumbnailImageUrl" name="thumbnailUrl"/>
</output>
</service>
<service name="getWeeklyTopTracks">
<description>get weekly top track</description>
<input>
</input>
<output>
<param className="track.name" name="name"/>
<param className="track.url" name="playUrl"/>
<param className="photo.imageURL" name="imageUrl"/>
<param className="photo.thumbnailImageUrl" name="thumbnailUrl"/>
</output>
</service>
<service name="getWeeklyTopArtists">
<description>get weekly top artists</description>
<input>
</input>
<output>
<param className="person.name" name="name"/>
<param className="person.url" name="playUrl"/>
</output>
</service>
</services>
</tile>
<tile tileId="40">
<name>BBCNews</name>
<providerUrl>http://newsrss.bbc.co.uk/</providerUrl>
<description>
<tags>news</tags>
<text>Retrieves news from BBC</text>
</description>
<category>news</category>
<services>
<service name="getNews">
<description>Retrieves news from BBC</description>
<input>
</input>
<output>
<param className="news.title" name="title"/>
<param className="news.description" name="description"/>
<param className="news.url" name="url"/>
<param className="news.date" name="publishDate"/>
</output>
</service>
</services>
</tile>
<tile tileId="41">
<name>CNN</name>
<providerUrl>http://www.cnn.com, rss.cnn.com</providerUrl>
<description>
<tags>news</tags>
<text>Retrieves breaking news, business news, entertainment from CNN</text>
</description>
<category>news</category>
<services>
<service name="getTopStories">
<description>Retrieves top stories from cnn</description>
<input>
</input>
<output>
<param className="story.title" name="title"/>
<param className="story.description" name="description"/>
<param className="story.url" name="url"/>
</output>
</service>
<service name="getTechnologyNews">
<description>Retrieves technology news from cnn</description>
<input>
</input>
<output>
<param className="news.title" name="title"/>
<param className="news.description" name="description"/>
<param className="news.url" name="url"/>
</output>
</service>
<service name="getEntertainmentNews">
<description>Retrieves entertainment news from cnn</description>
<input>
</input>
<output>
<param className="news.title" name="title"/>
<param className="news.description" name="description"/>
<param className="news.url" name="url"/>
</output>
</service>
<service name="getVideo">
<description>Retrieves entertainment news from cnn</description>
<input>
</input>
<output>
<param className="video.title" name="title"/>
<param className="video.description" name="description"/>
<param className="video.url" name="playUrl"/>
<param className="photo.thumbnailImageUrl" name="thumbnailUrl"/>
</output>
</service>
</services>
</tile>
<tile tileId="93">
<name>YahooGeocoding</name>
<providerUrl>http://developer.yahoo.com/maps/rest/V1/geocode.html</providerUrl>
<description>
<tags>mapping</tags>
<text>The Geocoding Web Service allows you to find the specific latitude and longitude for an address.  </text>
</description>
<category>mapping</category>
<services>
<service name="geoCode">
<description>The Geocoding Web Service allows you to find the specific latitude and longitude for an address.</description>
<invokeUrl>http://local.yahooapis.com/MapsService/V1/geocode</invokeUrl>
<input>
<param className="adr.street-address" name="street" required="true">
<description> 	Street name</description>
<defaultValue>street</defaultValue>
</param>
<param className="adr.locality" name="city" required="false">
<description>City name.</description>
<defaultValue>newYork</defaultValue>
</param>
<param className="adr.location" name="location" required="false">
<description>*  city, state    * city, state, zip    * zip    * street, city, state    * street, city, state, zip    * street, zip</description>
<defaultValue>freeText</defaultValue>
</param>
</input>
<output>
<param className="geo.latitude" name="Latitude"/>
<param className="geo.longitude" name="Longitude"/>
<param className="adr.location" name="Address"/>
<param className="adr.locality" name="City"/>
<param className="adr.region" name="State"/>
<param className="adr.zipCode" name="Zip"/>
<param className="adr.country" name="Country"/>
</output>
</service>
</services>
</tile>
<tile tileId="97">
<name>GoogleHomePage</name>
<providerUrl>http://code.google.com/apis/gadgets</providerUrl>
<description>
<tags>widgets</tags>
<text>The Google Gadgets API provides a way to put third-party content onto the Google homepage.</text>
</description>
<category>widgets</category>
<services>
<service name="display">
<description>a display tool</description>
<invokeUrl>http://code.google.com/apis/gadgets</invokeUrl>
<input>
<param className="object.anyType" name="inputValue" required="true">
<description>this is input param for google homepage</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="99">
<name>GeoNames</name>
<providerUrl>http://www.geonames.org/export/</providerUrl>
<description>
<tags>mapping</tags>
<text>Geographic name and postal code lookup </text>
</description>
<category>mapping</category>
<services>
<service name="search">
<description>returns the names found for the searchterm </description>
<invokeUrl>http://ws.geonames.org/search</invokeUrl>
<input>
<param className="adr.location" name="q" required="true">
<description>search term</description>
<defaultValue>London</defaultValue>
</param>
</input>
<output>
<param className="adr.location" name="name"/>
<param className="geo.latitude" name="lat"/>
<param className="geo.longitude" name="lng"/>
<param className="adr.country" name="countryName"/>
</output>
</service>
</services>
</tile>
<tile tileId="100">
<name>AmazonS3</name>
<providerUrl>http://www.amazon.com/gp/browse.html</providerUrl>
<description>
<tags>storage</tags>
<text>the Simple Storage Service is used to store objects using the Amazon online storage infrastructure</text>
</description>
<category>storage</category>
<services>
<service name="write">
<description>store information</description>
<invokeUrl>http://aws.amazon.com/s3/</invokeUrl>
<input>
<param className="object.anyType" name="data" required="true">
<description>object</description>
<defaultValue>dataIns</defaultValue>
</param>
</input>
<output>
</output>
</service>
</services>
</tile>
<tile tileId="102">
<name>GoogleBase</name>
<providerUrl>http://code.google.com/apis/base/</providerUrl>
<description>
<tags>database structured jobs vehicles recipes reviews</tags>
<text>The Google Base API makes it possible to get items in and out of Base, an index of all kinds of structured and semi-structured data including jobs, vehicles, recipes, events, products, reviews, and others.</text>
</description>
<category>shopping</category>
<services>
<service name="searchDataFeed">
<description>find related data feed information</description>
<invokeUrl>http://www.google.com/base/feeds/items/item_id/media/ </invokeUrl>
<input>
<param className="object.string" name="q" required="true">
<description>key words to search for</description>
<defaultValue>Harry Potter</defaultValue>
</param>
</input>
<output>
<param className="product.title" name="attrib_name"/>
<param className="object.url" name="attrib_type"/>
<param className="object.string" name="category"/>
<param className="photo.thumbnailImageUrl" name="stockPhotoURL"/>
</output>
</service>
<service name="searchDataFeed">
<description>find related data feed information</description>
<invokeUrl>http://www.google.com/base/feeds/items/item_id/media/ </invokeUrl>
<input>
<param className="object.string" name="q" required="true">
<description>key words to search for</description>
<defaultValue>Harry Potter</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="attrib_name"/>
<param className="object.string" name="attrib_type"/>
<param className="object.string" name="attrib_value"/>
</output>
</service>
<service name="searchMediaFeed">
<description>find related media feed information</description>
<invokeUrl>http://www.google.com/base/feeds/items/item_id/media/</invokeUrl>
<input>
<param className="object.string" name="q" required="true">
<description>key words to search for</description>
<defaultValue>Harry Potter</defaultValue>
</param>
</input>
<output>
<param className="video.title" name="content"/>
<param className="video.description" name="description"/>
<param className="video.url" name="link"/>
<param className="photo.thumbnailImageUrl" name="thumbnail"/>
</output>
</service>
</services>
</tile>
<tile tileId="103">
<name>GoogleChart</name>
<providerUrl>http://code.google.com/apis/chart/</providerUrl>
<description>
<tags>charts visualization statistics</tags>
<text>Lets you easily create a chart from some data and embed it in a web page.</text>
</description>
<category>other</category>
<services>
<service name="getChart">
<description>store information</description>
<invokeUrl>http://chart.apis.google.com/chart</invokeUrl>
<input>
<param className="object.integer" name="chs" required="true">
<description>chart's size</description>
<defaultValue>250</defaultValue>
</param>
<param className="object.string" name="chd" required="true">
<description>chart's data</description>
<defaultValue>250</defaultValue>
</param>
<param className="object.string" name="cht" required="true">
<description>chart's type</description>
<defaultValue>p3</defaultValue>
</param>
</input>
<output>
</output>
</service>
</services>
</tile>
<tile tileId="104">
<name>GoogleCalendar</name>
<providerUrl>http://code.google.com/apis/calendar/</providerUrl>
<description>
<tags>events calendar</tags>
<text>Google Calendar allows client applications to view and update calendar events in the form of Google data API, GData, feeds.</text>
</description>
<category>calendar</category>
<services>
<service name="retriveEvents">
<description>Retrieving events without query parameters</description>
<invokeUrl>http://www.google.com/calendar/feeds/userID/private-magicCookie/full</invokeUrl>
<input>
</input>
<output>
<param className="event.title" name="title"/>
<param className="event.date" name="publishDate"/>
<param className="event.url" name="link"/>
<param className="person.name" name="author"/>
<param className="adr.location" name="location"/>
</output>
</service>
<service name="retriveEventsByDate">
<description>Retrieving events by date</description>
<invokeUrl>http://www.google.com/calendar/feeds/default/private/full</invokeUrl>
<input>
<param className="object.date" name="start-min" required="true">
<description>start date</description>
<defaultValue>2006-03-16T00:00:00</defaultValue>
</param>
<param className="object.date" name="start-max" required="true">
<description>end date</description>
<defaultValue>2006-03-24T23:59:59</defaultValue>
</param>
</input>
<output>
<param className="event.title" name="title"/>
<param className="event.date" name="publishDate"/>
<param className="event.url" name="link"/>
<param className="person.name" name="author"/>
<param className="adr.location" name="location"/>
</output>
</service>
<service name="searchEvents">
<description>Retrieving events with query parameters</description>
<invokeUrl>http://www.google.com/calendar/feeds/default/private/full</invokeUrl>
<input>
<param className="object.string" name="q" required="true">
<description>search term</description>
<defaultValue>Tennis</defaultValue>
</param>
</input>
<output>
<param className="event.title" name="title"/>
<param className="event.date" name="publishDate"/>
<param className="event.url" name="link"/>
<param className="person.name" name="author"/>
<param className="adr.location" name="location"/>
</output>
</service>
</services>
</tile>
<tile tileId="118">
<name>YahooTermExtraction</name>
<providerUrl>http://developer.yahoo.com/search/content/V1/</providerUrl>
<description>
<tags>search</tags>
<text>provides a list of significant words or phrases extracted from a larger content. It is one of the technologies used in Y!Q.</text>
</description>
<category>search</category>
<services>
<service name="termExtraction">
<description>get a list of significant words or phrases extracted from a larger conten</description>
<invokeUrl>http://search.yahooapis.com/ContentAnalysisService/V1/termExtraction</invokeUrl>
<input>
<param className="object.string" name="context" required="true">
<description>The context to extract terms from (UTF-8 encoded).</description>
<defaultValue>Italian sculptors and painters of the renaissance favored the Virgin Mary for inspiration.</defaultValue>
</param>
<param className="object.string" name="query" required="false">
<description>An optional query to help with the extraction process.</description>
<defaultValue>madonna</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="result"/>
</output>
</service>
</services>
</tile>
<tile tileId="42">
<name>Technorati</name>
<providerUrl>http://api.technorati.com/</providerUrl>
<description>
<tags>blog</tags>
<text>Retrieves blog information</text>
</description>
<category>blog</category>
<services>
<service name="searchBlog">
<description>Retrieves blog information</description>
<input>
</input>
<output>
<param className="blog.title" name="title"/>
<param className="blog.description" name="description"/>
<param className="blog.url" name="url"/>
<param className="blog.date" name="publishDate"/>
</output>
</service>
</services>
</tile>
<tile tileId="121">
<name>Fotolia</name>
<providerUrl>http://us.fotolia.com/Services/API/Documentation</providerUrl>
<description>
<tags>photo</tags>
<text>store and share photos with others</text>
</description>
<category>photos</category>
<services>
<service name="getSearchResults">
<description>makes possible to search media in fotolia image bank</description>
<invokeUrl>http://api.fotolia.com/xmlrpc.getSearchResults</invokeUrl>
<input>
<param className="object.string" name="words" required="true">
<description>the key word to search</description>
<defaultValue/>
</param>
<param className="object.string" name="order" required="false">
<description>the order to display</description>
<defaultValue/>
</param>
</input>
<output>
<param className="photo.name" name="name"/>
<param className="person.name" name="creator_name"/>
</output>
</service>
<service name="getMediaData">
<description>return all information about a media</description>
<invokeUrl>http://api.fotolia.com/xmlrpc.getMediaData</invokeUrl>
<input>
<param className="photo.id" name="id" required="true">
<description>existing media id</description>
<defaultValue/>
</param>
<param className="object.string" name="order" required="false">
<description>the order to display</description>
<defaultValue/>
</param>
</input>
<output>
<param className="photo.name" name="name"/>
<param className="person.name" name="creator_name"/>
<param className="photo.thumbnailImageUrl" name="thumbnail_url"/>
</output>
</service>
</services>
</tile>
<tile tileId="125">
<name>GoogleStaticMaps</name>
<providerUrl>http://code.google.com/intl/zh-CN/apis/maps/documentation/staticmaps/index.html</providerUrl>
<description>
<tags>mapping</tags>
<text>return a static map</text>
</description>
<category>mapping</category>
<services>
<service name="staticmap">
<description>return gif map</description>
<invokeUrl>http://maps.google.com/staticmap</invokeUrl>
<input>
<param className="geo.latitude" name="center" required="true">
<description>latitude, longitude</description>
<defaultValue/>
</param>
<param className="photo.integer" name="zoom" required="false">
<description>zoom value</description>
<defaultValue/>
</param>
<param className="photo.string" name="size" required="true">
<description>valuexvalue </description>
<defaultValue/>
</param>
</input>
<output>
<param className="photo.url" name="mapURL"/>
</output>
</service>
</services>
</tile>
<tile tileId="127">
<name>AOLInstantMessenger</name>
<providerUrl>http://dev.aol.com/aim/</providerUrl>
<description>
<tags>p2p presence im messaging VoIP chat</tags>
<text>AOL Instant Messenger (AIM) is surely one of the core software components provided by AOL</text>
</description>
<category>chat</category>
<services>
<service name="DisplayAwayMessage">
<description>Display Your Away Message on a Web Page</description>
<invokeUrl>http://developer.aim.com/manageKeys.jsp</invokeUrl>
<input>
<param className="object.string" name="id" required="true">
<description>My Away Message</description>
<defaultValue>myAwayMessage</defaultValue>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="129">
<name>BigTribe</name>
<providerUrl>http://www.bigtribe.com/publisher/docs/references.jsp</providerUrl>
<description>
<tags>mapping ads </tags>
<text>Easily integrate third-party map systems, local directories and your own location-specific content</text>
</description>
<category>advertisiing</category>
<services>
<service name="Service">
<description>Service Endpoint</description>
<invokeUrl>http://geohana.net/api/script</invokeUrl>
<input>
<param className="object.string" name="key" required="true">
<description>Your License</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="131">
<name>Daylife</name>
<providerUrl>http://developer.daylife.com/</providerUrl>
<description>
<tags>news media aggregation </tags>
<text>The DayPI lets you ask questions of the news from around the world, and build applications on top of the answers, using whatever web application technology you like.  </text>
</description>
<category>news</category>
<services>
<service name="RSSFeed">
<description>RSS feed for Articles about any term using DayPI Search</description>
<invokeUrl>http://www.buzzingblog.com/dayliferss/rss.php</invokeUrl>
<input>
<param className="object.string" name="query" required="true">
<description>search term of your choice</description>
<defaultValue/>
</param>
<param className="object.integer" name="limit" required="false">
<description>Specify the number of items you want to pull in the feed using a limit parameter</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="133">
<name>FedEx</name>
<providerUrl>http://www.fedex.com/mx_english/ebusiness/globaldeveloper/</providerUrl>
<description>
<tags>shipping enterprise</tags>
<text>Realize the full potential of e-commerce with FedEx Global Developer Tools</text>
</description>
<category>Shipping</category>
<services>
<service name="CreateShipment">
<description>Create a Mexico Domestic Shipment</description>
<invokeUrl>http://www.fedex.com/intramx/GenLabel-war/initLabel.do</invokeUrl>
<input>
<param className="object.string" name="language" required="true">
<description>Default Language you use</description>
<defaultValue>en</defaultValue>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="135">
<name>FriendFeed</name>
<providerUrl>http://friendfeed.com/api/</providerUrl>
<description>
<tags>rss lifestream social </tags>
<text>You can develop FriendFeed interface for a mobile phone, build a FriendFeed widget for your blog, or develop an application that makes it easy to post photos to your feed from your iPhone.  </text>
</description>
<category>other</category>
<services>
<service name="Requests">
<description>All requests to the FriendFeed API are simple HTTP GET and POST requests</description>
<invokeUrl>http://friendfeed.com/api/feed/public</invokeUrl>
<input/>
<output>
<param className="object.string" name="format"/>
</output>
</service>
</services>
</tile>
<tile tileId="137">
<name>geocoder.ca</name>
<providerUrl>http://geocoder.ca/?api=1</providerUrl>
<description>
<tags>mapping</tags>
<text>Geocoding services for Canada </text>
</description>
<category>mapping</category>
<services>
<service name="ReverseGeocoding">
<description>Cross Street Intersection Geocoding API</description>
<invokeUrl>http://geocoder.ca</invokeUrl>
<input>
<param className="adr.street-address" name="addresst" required="true">
<description>The name of the street address</description>
<defaultValue/>
</param>
<param className="object.decimal" name="stno" required="true">
<description>Street Number </description>
<defaultValue/>
</param>
<param className="adr.locality" name="city" required="true">
<description>The City Name </description>
<defaultValue/>
</param>
<param className="object.decimal" name="decimal" required="false">
<description>This is an optional parameter to limit the number of decimal places in the response</description>
<defaultValue/>
</param>
<param className="adr.location" name="locate" required="true">
<description>This is an optional parameter for your convenience. We will parse out an address or intersection from it</description>
<defaultValue/>
</param>
</input>
<output>
<param className="geo.latitude" name="latt"/>
<param className="geo.longtitude" name="longt"/>
<param className="object.id" name="id"/>
</output>
</service>
</services>
</tile>
<tile tileId="139">
<name>GoogleSpreadsheets</name>
<providerUrl>http://code.google.com/intl/zh-CN/apis/spreadsheets/overview.html</providerUrl>
<description>
<tags>office spreadsheet </tags>
<text>The Google Spreadsheets data API allows client applications to view and update Spreadsheets content in the form of a Google data API ("GData") feeds</text>
</description>
<category>office</category>
<services>
<service name="InteracteWithFeed">
<description>Interacting with list-based feeds</description>
<invokeUrl>http://spreadsheets.google.com/feeds/cells/key/worksheetId/private/full</invokeUrl>
<input>
<param className="object.decimal" name="min-row" required="false">
<description>Send a cell range query</description>
<defaultValue/>
</param>
<param className="object.decimal" name="max-row" required="false">
<description>Send a cell range query</description>
<defaultValue/>
</param>
<param className="object.decimal" name="min-col" required="false">
<description>Send a cell range query</description>
<defaultValue/>
</param>
<param className="object.decimal" name="max-col" required="false">
<description>Send a cell range query</description>
<defaultValue/>
</param>
<param className="object.anyType" name="reverse" required="false">
<description>Determine whether to get rows in reverse order</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="145">
<name>LinkShare</name>
<providerUrl>http://www.linkshare.com/rc/merchandiser.html</providerUrl>
<description>
<tags>shopping</tags>
<text>query against Merchandiser data for the advertisers that you have partnerships with</text>
</description>
<category>shopping</category>
<services>
<service name="productsearch">
<description>query against Merchandiser data</description>
<invokeUrl>http://feed.linksynergy.com/productsearch</invokeUrl>
<input>
<param className="object.string" name="keyword" required="true">
<description>key word to search. You can search for one or more keywords at a time</description>
<defaultValue/>
</param>
<param className="product.name" name="cat" required="false">
<description>product category to restrict the search</description>
<defaultValue/>
</param>
<param className="object.integer" name="MaxResults" required="false">
<description>specify the maximum number of results on a page in the search result set</description>
<defaultValue>20</defaultValue>
</param>
<param className="object.integer" name="Page" required="false">
<description>allows you to specify the page number for the results returned</description>
<defaultValue>1</defaultValue>
</param>
<param className="person.id" name="mid" required="false">
<description>specify an advertiser (MID) and limit your search to this advertiser’s products</description>
<defaultValue/>
</param>
<param className="object.string" name="sort" required="false">
<description>The sort is specified by its parameter name and the type of sort being specified</description>
<defaultValue/>
</param>
<param className="object.string" name="sorttype" required="false">
<description>ascending or descending</description>
<defaultValue>asc</defaultValue>
</param>
</input>
<output>
<param className="object.integer" name="TotalMatches"/>
<param className="person.id" name="mid"/>
<param className="product.name" name="merchantname"/>
<param className="object.id" name="linkid"/>
<param className="product.name" name="productname"/>
<param className="product.string" name="category"/>
<param className="product.description" name="description"/>
</output>
</service>
</services>
</tile>
<tile tileId="147">
<name>Kayak</name>
<providerUrl>http://developer.kayak.com/</providerUrl>
<description>
<tags>travel search</tags>
<text>The search API is an HTTP interface that lets you, the programmer, integrate kayak.com searches and results into your web site, desktop application, or mobile phone application.</text>
</description>
<category>Travel</category>
<services>
<service name="Hotel">
<description>The Hotel Search Gateway permits the initiation of a hotel search query on the Kayak website</description>
<invokeUrl>http://www.kayak.com/s/search/hotel</invokeUrl>
<input>
<param className="object.string" name="ai" required="false">
<description>Affiliate identifier provided by Kayak.com.</description>
<defaultValue/>
</param>
<param className="object.string" name="p" required="false">
<description>Optional Sub-Affiliate identifier. This is a pass-thru value from Kayak s perspective; used by affiliate for internal promotion tracking if desired. </description>
<defaultValue/>
</param>
<param className="object.anyType" name="do" required="false">
<description>Answers the question:  Should we do the search as opposed to just pre-populating the search form? .</description>
<defaultValue>y</defaultValue>
</param>
<param className="object.integer" name="pa" required="false">
<description>Number of Guests</description>
<defaultValue>1</defaultValue>
</param>
<param className="object.integer" name="rm" required="false">
<description>Number of Rooms</description>
<defaultValue>1</defaultValue>
</param>
</input>
<output/>
</service>
<service name="Air">
<description>The Air Search Gateway permits the initiation of a air search query on the Kayak website</description>
<invokeUrl>http://www.kayak.com/s/search/air</invokeUrl>
<input>
<param className="object.string" name="ai" required="false">
<description>Affiliate identifier provided by Kayak.com.</description>
<defaultValue/>
</param>
<param className="object.string" name="p" required="false">
<description>Optional Sub-Affiliate identifier. This is a pass-thru value from Kayak s perspective; used by affiliate for internal promotion tracking if desired. </description>
<defaultValue/>
</param>
<param className="object.anyType" name="do" required="false">
<description>Answers the question:  Should we do the search as opposed to just pre-populating the search form? .</description>
<defaultValue>y</defaultValue>
</param>
<param className="object.string" name="ft" required="false">
<description>Flight-type indicating oneway or roundtrip</description>
<defaultValue>rt</defaultValue>
</param>
<param className="object.anyType" name="ns" required="false">
<description>Answers the question  Is a non-stop flight preferred? </description>
<defaultValue>n</defaultValue>
</param>
</input>
<output/>
</service>
<service name="Car">
<description>The Car Search Gateway permits the initiation of a car search query on the Kayak website</description>
<invokeUrl>http://www.kayak.com/s/search/car</invokeUrl>
<input>
<param className="object.string" name="ai" required="false">
<description>Affiliate identifier provided by Kayak.com.</description>
<defaultValue/>
</param>
<param className="object.string" name="p" required="false">
<description>Optional Sub-Affiliate identifier. This is a pass-thru value from Kayak s perspective; used by affiliate for internal promotion tracking if desired. </description>
<defaultValue/>
</param>
<param className="object.anyType" name="do" required="false">
<description>Answers the question:  Should we do the search as opposed to just pre-populating the search form? .</description>
<defaultValue>y</defaultValue>
</param>
<param className="object.string" name="df" required="false">
<description>Date format for dates in this request</description>
<defaultValue>us1</defaultValue>
</param>
<param className="object.anyType" name="d1" required="false">
<description>Pick-up Date</description>
<defaultValue>1 day in the future</defaultValue>
</param>
</input>
<output/>
</service>
<service name="Cruise">
<description>The Cruise Search Gateway permits the initiation of a cruise search query on the Kayak website</description>
<invokeUrl>http://www.kayak.com/s/search/cruise</invokeUrl>
<input>
<param className="object.string" name="ai" required="false">
<description>Affiliate identifier provided by Kayak.com.</description>
<defaultValue/>
</param>
<param className="object.string" name="p" required="false">
<description>Optional Sub-Affiliate identifier. This is a pass-thru value from Kayak s perspective; used by affiliate for internal promotion tracking if desired. </description>
<defaultValue/>
</param>
<param className="object.anyType" name="do" required="false">
<description>Answers the question:  Should we do the search as opposed to just pre-populating the search form? .</description>
<defaultValue>y</defaultValue>
</param>
<param className="object.date" name="dt" required="false">
<description>Departure Date</description>
<defaultValue>First of this month</defaultValue>
</param>
<param className="adr.location" name="dest" required="false">
<description>Destination</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
<service name="Vacations">
<description>The Vacations Search Gateway permits the initiation of a vacations search query on the Kayak website</description>
<invokeUrl>http://www.kayak.com/s/search/vacations</invokeUrl>
<input>
<param className="object.string" name="ai" required="false">
<description>Affiliate identifier provided by Kayak.com.</description>
<defaultValue/>
</param>
<param className="object.string" name="p" required="false">
<description>Optional Sub-Affiliate identifier. This is a pass-thru value from Kayak s perspective; used by affiliate for internal promotion tracking if desired. </description>
<defaultValue/>
</param>
<param className="object.anyType" name="do" required="false">
<description>Answers the question:  Should we do the search as opposed to just pre-populating the search form? .</description>
<defaultValue>y</defaultValue>
</param>
<param className="object.integer" name="adults" required="false">
<description>Number of Adults</description>
<defaultValue>1</defaultValue>
</param>
<param className="object.integer" name="kids" required="false">
<description>Number of Children</description>
<defaultValue>0</defaultValue>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="151">
<name>LyricWiki</name>
<providerUrl>http://lyricwiki.org/server.php</providerUrl>
<description>
<tags>music lyrics </tags>
<text>LyricWiki is a free site which is a source where anyone can go to get reliable lyrics for any song from any artist without being hammered by invasive ads</text>
</description>
<category>music</category>
<services>
<service name="searchArtists">
<description>Search for an artist by name and return up to 10 close matches</description>
<invokeUrl>http://lyricwiki.org/server.php</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>encoded</defaultValue>
</param>
<param className="object.string" name="namespace" required="true">
<description/>
<defaultValue>LyricWiki</defaultValue>
</param>
<param className="object.string" name="message" required="true">
<description/>
<defaultValue>searchArtistsRequest</defaultValue>
</param>
<param className="object.string" name="searchString" required="false">
<description/>
<defaultValue/>
</param>
<param className="object.url" name="encodingStyle" required="true">
<description/>
<defaultValue>http://schemas.xmlsoap.org/soap/encoding/</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
<param className="object.string" name="namespace"/>
<param className="object.url" name="encodingStyle"/>
<param className="object.string" name="message"/>
<param className="object.anyType" name="return"/>
</output>
</service>
<service name="searchAlbums">
<description>Search for an album on LyricWiki and return up to 10 close matches (year optional)</description>
<invokeUrl>http://lyricwiki.org/server.php</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>encoded</defaultValue>
</param>
<param className="object.string" name="namespace" required="true">
<description/>
<defaultValue>LyricWiki</defaultValue>
</param>
<param className="object.string" name="message" required="true">
<description/>
<defaultValue>searchArtistsRequest</defaultValue>
</param>
<param className="person.name" name="artist" required="false">
<description/>
<defaultValue/>
</param>
<param className="object.url" name="encodingStyle" required="true">
<description/>
<defaultValue>http://schemas.xmlsoap.org/soap/encoding/</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
<param className="object.string" name="namespace"/>
<param className="object.url" name="encodingStyle"/>
<param className="object.string" name="message"/>
<param className="object.anyType" name="return"/>
</output>
</service>
<service name="checkSongExists">
<description>Check if a song exists in the LyricWiki database yet</description>
<invokeUrl>http://lyricwiki.org/server.php</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>encoded</defaultValue>
</param>
<param className="object.string" name="namespace" required="true">
<description/>
<defaultValue>LyricWiki</defaultValue>
</param>
<param className="object.string" name="message" required="true">
<description/>
<defaultValue>searchArtistsRequest</defaultValue>
</param>
<param className="person.name" name="artist" required="false">
<description/>
<defaultValue/>
</param>
<param className="object.url" name="encodingStyle" required="true">
<description/>
<defaultValue>http://schemas.xmlsoap.org/soap/encoding/</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
<param className="object.string" name="namespace"/>
<param className="object.url" name="encodingStyle"/>
<param className="object.string" name="message"/>
<param className="object.anyType" name="return"/>
</output>
</service>
<service name="searchSongs">
<description>Search for a song on LyricWiki and get up to 10 close matches</description>
<invokeUrl>http://lyricwiki.org/server.php</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>encoded</defaultValue>
</param>
<param className="object.string" name="namespace" required="true">
<description/>
<defaultValue>LyricWiki</defaultValue>
</param>
<param className="object.string" name="message" required="true">
<description/>
<defaultValue>searchArtistsRequest</defaultValue>
</param>
<param className="person.name" name="artist" required="false">
<description/>
<defaultValue/>
</param>
<param className="object.url" name="encodingStyle" required="true">
<description/>
<defaultValue>http://schemas.xmlsoap.org/soap/encoding/</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
<param className="object.string" name="namespace"/>
<param className="object.url" name="encodingStyle"/>
<param className="object.string" name="message"/>
<param className="music.anyType" name="return"/>
</output>
</service>
<service name="getSOTD">
<description>Get the lyrics for a the current Song of the Day on LyricWiki</description>
<invokeUrl>http://lyricwiki.org/server.php</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>encoded</defaultValue>
</param>
<param className="object.string" name="namespace" required="true">
<description/>
<defaultValue>LyricWiki</defaultValue>
</param>
<param className="object.string" name="message" required="true">
<description/>
<defaultValue>getSOTDRequest</defaultValue>
</param>
<param className="person.name" name="artist" required="false">
<description/>
<defaultValue/>
</param>
<param className="object.url" name="encodingStyle" required="true">
<description/>
<defaultValue>http://schemas.xmlsoap.org/soap/encoding/</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
<param className="object.string" name="namespace"/>
<param className="object.url" name="encodingStyle"/>
<param className="object.string" name="message"/>
<param className="object.anyType" name="return"/>
</output>
</service>
<service name="getSong">
<description>Get the lyrics for a LyricWiki song with the exact artist and song match</description>
<invokeUrl>http://lyricwiki.org/server.php</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>encoded</defaultValue>
</param>
<param className="object.string" name="namespace" required="true">
<description/>
<defaultValue>LyricWiki</defaultValue>
</param>
<param className="object.string" name="message" required="true">
<description/>
<defaultValue>getSongRequest</defaultValue>
</param>
<param className="person.name" name="artist" required="false">
<description/>
<defaultValue/>
</param>
<param className="object.url" name="encodingStyle" required="true">
<description/>
<defaultValue>http://schemas.xmlsoap.org/soap/encoding/</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
<param className="object.string" name="namespace"/>
<param className="object.url" name="encodingStyle"/>
<param className="object.string" name="message"/>
<param className="music.anyType" name="return"/>
</output>
</service>
</services>
</tile>
<tile tileId="152">
<name>imageLoop</name>
<providerUrl>http://www.imageloop.com/de/api/index.htm</providerUrl>
<description>
<tags>photo tools slideshow germany</tags>
<text>With imageloop you can create your own world of photos.</text>
</description>
<category>Photos</category>
<services>
<service name="queryImages">
<description>get a list of photos for a given query</description>
<invokeUrl>http://www.imageloop.com/httprpc/?f=imagelooop.queryImages</invokeUrl>
<input>
<param className="object.string" name="query" required="true">
<description>key word</description>
<defaultValue>music</defaultValue>
</param>
</input>
<output>
<param className="photo.id" name="imageID"/>
</output>
</service>
<service name="queryImageByImageID">
<description>get photo metadata for a given imageID</description>
<invokeUrl>http://www.imageloop.com/httprpc/?f=imagelooop.getImageMetaData</invokeUrl>
<input>
<param className="photo.id" name="imageID" required="true">
<description>image id</description>
<defaultValue>100000</defaultValue>
</param>
</input>
<output>
<param className="photo.title" name="title"/>
<param className="photo.tags" name="tags"/>
<param className="photo.description" name="description"/>
<param className="photo.imageUrl" name="imageLink"/>
<param className="person.userName" name="ownerUsername"/>
</output>
</service>
</services>
</tile>
<tile tileId="147">
<name>MicrosoftMapPoint</name>
<providerUrl>http://msdn.microsoft.com/en-us/virtualearth/default.aspx</providerUrl>
<description>
<tags>mapping</tags>
<text>Note that this is a commercial, fee-based service but that 45 trial accounts are available</text>
</description>
<category>mapping</category>
<services>
<service name="GetClientToken">
<description>Gets a token for use with VE authentication</description>
<invokeUrl>http://s.mappoint.net/mappoint-30/GetClientToken</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>literal</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
</output>
</service>
<service name="GetGreatCircleDistances">
<description>Calculate pair-wise distances</description>
<invokeUrl>http://s.mappoint.net/mappoint-30/GetGreatCircleDistances</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>literal</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
</output>
</service>
<service name="GetDataSourceInfo">
<description>Get a general description of data sources</description>
<invokeUrl>http://s.mappoint.net/mappoint-30/GetDataSourceInfo</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>literal</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
</output>
</service>
<service name="GetEntityTypes">
<description>Retrieve the list types and their properties in a DataSource</description>
<invokeUrl>http://s.mappoint.net/mappoint-30/GetEntityTypes</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>literal</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
</output>
</service>
<service name="GetCountryRegionInfo">
<description>Retrieve information about countries or national regions</description>
<invokeUrl>http://s.mappoint.net/mappoint-30/GetCountryRegionInfo</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>literal</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
</output>
</service>
<service name="GetVersionInfo">
<description>Get the MapPoint Web Service version</description>
<invokeUrl>http://s.mappoint.net/mappoint-30/GetVersionInfo</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>literal</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
</output>
</service>
<service name="GetMap">
<description>Renders map images of the given MapViews</description>
<invokeUrl>http://s.mappoint.net/mappoint-30/GetMap</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>literal</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
</output>
</service>
<service name="ConvertToPoint">
<description>Convert individual LatLongs into PixelCoords as they would appear in the given MapView</description>
<invokeUrl>http://s.mappoint.net/mappoint-30/ConvertToPoint</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>literal</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
</output>
</service>
<service name="ConvertToLatLong">
<description>Convert individual PixelCoords into LatLongs as they would appear in the given MapView</description>
<invokeUrl>http://s.mappoint.net/mappoint-30/ConvertToLatLong</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>literal</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
</output>
</service>
<service name="GetBestMapView">
<description>Get a MapView that encompasses the given locations</description>
<invokeUrl>http://s.mappoint.net/mappoint-30/GetBestMapView</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>literal</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
</output>
</service>
<service name="GetLineDriveMap">
<description>Renders LineDrive map images of the given Route</description>
<invokeUrl>http://s.mappoint.net/mappoint-30/GetLineDriveMap</invokeUrl>
<input>
<param className="object.string" name="use" required="true">
<description/>
<defaultValue>literal</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="use"/>
</output>
</service>
</services>
</tile>
<tile tileId="149">
<name>MTV</name>
<providerUrl>http://developer.mtvnservices.com/</providerUrl>
<description>
<tags>music video  </tags>
<text>Develop your own video apps based on MTV, VH1, CMT and Logo content using this REST API</text>
</description>
<category>video</category>
<services>
<service name="VideoSearch">
<description>Returns a list of videos for a specific search term</description>
<invokeUrl>http://api.mtvnservices.com/1/video/search/</invokeUrl>
<input>
<param className="object.string" name="term" required="true">
<description>Specify the search query with the term parameter</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
<service name="Video">
<description>Returns a single video by encoded ID</description>
<invokeUrl>http://api.mtvnservices.com/1/video/</invokeUrl>
<input>
<param className="video.id" name="video_id" required="true">
<description>Video ID for a single video entry</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
<service name="ArtistAlias">
<description>Returns content associated to a specific artist</description>
<invokeUrl>http://api.mtvnservices.com/1/artist/</invokeUrl>
<input>
<param className="person.name" name="artist_alias" required="true">
<description>Each artist has a unique alias in the MTVN content system</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
<service name="ArtistVideos">
<description>Returns videos associated to a specific artist</description>
<invokeUrl>http://api.mtvnservices.com/1/artist/[artist_uri]/videos</invokeUrl>
<input>
<param className="person.url" name="artist_uri" required="true">
<description>Each artist has a unique URI in the MTVN content system</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
<service name="ArtistSearch">
<description>Returns a list of artists for a specific search term</description>
<invokeUrl>http://api.mtvnservices.com/1/artist/search/</invokeUrl>
<input>
<param className="object.string" name="term" required="true">
<description>Specify the search query with the term parameter</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
<service name="ArtistBrowse">
<description>Retrieves a list of artists sorted alphabetically</description>
<invokeUrl>http://api.mtvnservices.com/1/artist/browse/</invokeUrl>
<input>
<param className="person.string" name="alpha" required="true">
<description>Specify the first letter of the artist s name</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
<service name="GenreVideos">
<description>Returns a list of videos for a specified genre</description>
<invokeUrl>http://api.mtvnservices.com/1/genre/[genre_alias]/videos/</invokeUrl>
<input>
<param className="object.string" name="genre_alias" required="true">
<description>Each genre has a single alias in the MTVN Content API</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
<service name="GenreArtists">
<description>Returns a list of artists for a specified genre</description>
<invokeUrl>http://api.mtvnservices.com/1/genre/[genre_alias]/artists/</invokeUrl>
<input>
<param className="object.string" name="genre_alias" required="true">
<description>Each genre has a single alias in the MTVN Content API</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
<service name="GenreAlias">
<description>Returns content links for a specified genre</description>
<invokeUrl>http://api.mtvnservices.com/1/genre/[genre_alias]/</invokeUrl>
<input>
<param className="object.string" name="genre_alias" required="true">
<description>Each genre has a single alias in the MTVN Content API</description>
<defaultValue/>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="152">
<name>MySpace</name>
<providerUrl>http://developer.myspace.com/Community/</providerUrl>
<description>
<tags>social opensocial</tags>
<text>With MDP you will be able to create compelling new products that integrate directly into MySpace pages and get exposure to millions of people around the world.</text>
</description>
<category>community</category>
<services>
<service name="Photos">
<description>Returns all photos of the user specified by userid</description>
<invokeUrl>http://api.myspace.com/v1/users/{userid}/photos</invokeUrl>
<input>
<param className="person.id" name="userid" required="true">
<description>User identifier</description>
<defaultValue/>
</param>
</input>
<output>
<param className="photo.title" name="title"/>
<param className="photo.description" name="description"/>
<param className="photo.imageUrl" name="imageUrl"/>
</output>
</service>
<service name="Videos">
<description>Returns the videos of the user specified by userid</description>
<invokeUrl>http://api.myspace.com/v1/users/{userid}/videos</invokeUrl>
<input>
<param className="person.id" name="userid" required="true">
<description>User identifier</description>
<defaultValue/>
</param>
</input>
<output>
<param className="video.title" name="title"/>
<param className="video.description" name="description"/>
<param className="video.url" name="link"/>
</output>
</service>
</services>
</tile>
<tile tileId="155">
<name>Vast</name>
<providerUrl>http://www.vast.com/info/customapi</providerUrl>
<description>
<tags>search</tags>
<text>Vast is a web search service that crawls the entire web and structure the data it finds</text>
</description>
<category>search</category>
<services>
<service name="GetCars">
<description/>
<invokeUrl>http://data.vast.com/listings/-/cars</invokeUrl>
<input>
<param className="adr.string" name="tlocation" required="false">
<description/>
<defaultValue/>
</param>
<param className="adr.integer" name="zip" required="false">
<description/>
<defaultValue/>
</param>
<param className="event.date" name="year" required="false">
<description/>
<defaultValue/>
</param>
<param className="adr.country" name="make" required="false">
<description/>
<defaultValue/>
</param>
</input>
<output>
<param className="object.url" name="id"/>
<param className="event.time" name="updated"/>
<param className="event.time" name="published"/>
<param className="person.name" name="author"/>
<param className="product.name" name="title"/>
</output>
</service>
</services>
</tile>
<tile tileId="157">
<name>WeatherChannel</name>
<providerUrl>http://www.weather.com/services/xmloap.html</providerUrl>
<description>
<tags>wheather</tags>
<text>We ll enable you to search for a location and to integrate current conditions and the forecast for today and tomorrow in your application for free</text>
</description>
<category>weather</category>
<services>
<service name="">
<description/>
<invokeUrl/>
<input/>
<output/>
</service>
</services>
</tile>
<tile tileId="159">
<name>YahooBOSS</name>
<providerUrl>http://developer.yahoo.com/search/boss/</providerUrl>
<description>
<tags>search</tags>
<text>The goal of BOSS is to foster innovation in the search industry</text>
</description>
<category>search</category>
<services>
<service name="WebSearch">
<description/>
<invokeUrl>http://boss.yahooapis.com/ysearch/web/v1/foo</invokeUrl>
<input>
<param className="object.string" name="appid" required="true">
<description/>
<defaultValue/>
</param>
<param className="object.string" name="format" required="false">
<description>The type of value returned,for example,xml.</description>
<defaultValue/>
</param>
</input>
<output>
<param className="object.url" name="xml"/>
</output>
</service>
<service name="ImageSearch">
<description/>
<invokeUrl>http://boss.yahooapis.com/ysearch/images/v1/foo</invokeUrl>
<input>
<param className="object.string" name="appid" required="true">
<description/>
<defaultValue/>
</param>
<param className="object.string" name="filter" required="false">
<description>Whether or not to activate the Offensive Content Reduction filter. If set to yes, content marked as offensive is omitted from results.</description>
<defaultValue/>
</param>
<param className="photo.string" name="dimensions" required="false">
<description>all (default), small, medium, large, wallpaper, widewallpaper</description>
<defaultValue/>
</param>
<param className="photo.url" name="refererurl" required="false">
<description>Search for this URL. Depending on other query restrictions, returns all image objects with this referring URL</description>
<defaultValue/>
</param>
<param className="photo.url" name="url" required="false">
<description>Search for this URL. Returns this exact image result. </description>
<defaultValue/>
</param>
</input>
<output>
<param className="photo.string" name="abstract"/>
<param className="photo.url" name="clickurl"/>
<param className="photo.name" name="filename"/>
<param className="photo.decimal" name="size"/>
<param className="photo.string" name="format"/>
</output>
</service>
<service name="NewsSearch">
<description>News Search collects documents by crawling news related sites</description>
<invokeUrl>http://boss.yahooapis.com/ysearch/news/v1/foo</invokeUrl>
<input>
<param className="news.time" name="age" required="true">
<description>Age can be specified using a string made an integer and one of the letters  s ,  m ,  h ,  d  and  w  representing seconds, minutes, hours, days and weeks. No spaces are allowed in the string.</description>
<defaultValue>7d</defaultValue>
</param>
<param className="object.string" name="filter" required="false">
<description>Whether or not to activate the Offensive Content Reduction filter. If set to yes, content marked as offensive is omitted from results.</description>
<defaultValue/>
</param>
<param className="photo.string" name="dimensions" required="false">
<description>all (default), small, medium, large, wallpaper, widewallpaper</description>
<defaultValue/>
</param>
<param className="photo.url" name="refererurl" required="false">
<description>Search for this URL. Depending on other query restrictions, returns all image objects with this referring URL</description>
<defaultValue/>
</param>
<param className="photo.url" name="url" required="false">
<description>Search for this URL. Returns this exact image result. </description>
<defaultValue/>
</param>
</input>
<output>
<param className="news.string" name="abstract"/>
<param className="news.url" name="clickurl"/>
<param className="news.string" name="language"/>
<param className="news.date" name="date"/>
<param className="object.integer" name="totalhits"/>
</output>
</service>
<service name="SpellingSuggestions">
<description>The Spelling request allows you to retrieve spelling suggestions from the spelling database</description>
<invokeUrl>http://boss.yahooapis.com/ysearch/spelling/v1/foo</invokeUrl>
<input>
<param className="object.string" name="suggestion" required="false">
<description>The actual spelling suggestion.</description>
<defaultValue/>
</param>
<param className="object.string" name="filter" required="false">
<description>Whether or not to activate the Offensive Content Reduction filter. If set to yes, content marked as offensive is omitted from results.</description>
<defaultValue/>
</param>
<param className="photo.string" name="dimensions" required="false">
<description>all (default), small, medium, large, wallpaper, widewallpaper</description>
<defaultValue/>
</param>
<param className="photo.url" name="refererurl" required="false">
<description>Search for this URL. Depending on other query restrictions, returns all image objects with this referring URL</description>
<defaultValue/>
</param>
<param className="photo.url" name="url" required="false">
<description>Search for this URL. Returns this exact image result. </description>
<defaultValue/>
</param>
<param className="object.string" name="appid" required="true">
<description/>
<defaultValue/>
</param>
</input>
<output>
<param className="news.string" name="abstract"/>
<param className="news.url" name="clickurl"/>
<param className="news.string" name="language"/>
<param className="news.date" name="date"/>
<param className="object.integer" name="totalhits"/>
<param className="object.string" name="suggestion"/>
</output>
</service>
</services>
</tile>
<tile tileId="161">
<name>YahooRelatedSuggestions</name>
<providerUrl>http://developer.yahoo.com/search/web/V1/relatedSuggestion.html</providerUrl>
<description>
<tags>search</tags>
<text>The Related Suggestion service provides suggestions for queries related to the submitted query.  </text>
</description>
<category>search</category>
<services>
<service name="SearchWebServices">
<description>The Related Suggestion service provides suggestions for queries related to the submitted query.</description>
<invokeUrl>http://search.yahooapis.com/WebSearchService/V1/relatedSuggestion</invokeUrl>
<input>
<param className="object.id" name="appid" required="true">
<description>The application ID. See Application IDs for more information. </description>
<defaultValue/>
</param>
<param className="object.string" name="query" required="true">
<description>The query to get related searches from (UTF-8 encoded). </description>
<defaultValue/>
</param>
<param className="object.integer" name="results" required="false">
<description>The number of results to return. </description>
<defaultValue>10</defaultValue>
</param>
<param className="object.string" name="output" required="false">
<description>The format for the output</description>
<defaultValue>xml</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="ResultSet"/>
<param className="object.string" name="Result"/>
</output>
</service>
</services>
</tile>
<tile tileId="162">
<name>AOLVideo</name>
<providerUrl>http://developer.truveo.com/index.php</providerUrl>
<description>
<tags>video seach truveo AOL</tags>
<text>The Truveo Video Search indexes over 100 Million vidoes on the web with 50MM monthly uniques.</text>
</description>
<category>Video</category>
<services>
<service name="searchVideo">
<description>search related video for a given query</description>
<invokeUrl>http://developer.truveo.com/index.php</invokeUrl>
<input>
<param className="object.string" name="query" required="true">
<description>key word</description>
<defaultValue>music</defaultValue>
</param>
</input>
<output>
<param className="video.title" name="title"/>
<param className="video.description" name="description"/>
<param className="photo.imageUrl" name="playUrl"/>
</output>
</service>
</services>
</tile>
<tile tileId="163">
<name>Skype</name>
<providerUrl>https://developer.skype.com/</providerUrl>
<description>
<tags>messaging chat Voice video communication</tags>
<text>The Truveo Video Search indexes over 100 Million vidoes on the web with 50MM monthly uniques.</text>
</description>
<category>Telephony</category>
<services>
<service name="getCategory">
<description>query for Skype Prime listing categories;</description>
<invokeUrl>http://developer.truveo.com/index.php</invokeUrl>
<input>
</input>
<output>
<param className="object.title" name="title"/>
<param className="object.id" name="id"/>
</output>
</service>
<service name="queryList">
<description>query for listings, by keywords, category or language;</description>
<invokeUrl>http://developer.truveo.com/index.php</invokeUrl>
<input>
<param className="object.string" name="category" required="true">
<description>key word</description>
<defaultValue>music</defaultValue>
</param>
<param className="object.integer" name="limit" required="false">
<description>result number</description>
<defaultValue>100</defaultValue>
</param>
</input>
<output>
<param className="object.title" name="title"/>
<param className="object.description" name="description"/>
<param className="person.userName" name="provider"/>
</output>
</service>
</services>
</tile>
<tile tileId="167">
<name>Yelp</name>
<providerUrl>http://www.yelp.com/developers</providerUrl>
<description>
<tags>shopping local</tags>
<text>The Yelp APIs are REST (REpresentational State Transfer) APIs and users of these APIs will be able to retrieve business review and rating, information for a particular geographic region or location</text>
</description>
<category>shopping</category>
<services>
<service name="YelpReviewSearch">
<description>The  Yelp Review Search API  allows the retrieval of Yelp business and review data based on a set of input parameters</description>
<invokeUrl>http://api.yelp.com/business_review_search</invokeUrl>
<input>
<param className="geo.latitude" name="tl_lat" required="true">
<description>Top Left latitude of bounding box</description>
<defaultValue/>
</param>
<param className="geo.longitude" name="tl_long" required="true">
<description>Top Left longitude of bounding box</description>
<defaultValue/>
</param>
<param className="geo.latitude" name="br_lat" required="true">
<description>Bottom right latitude of bounding box</description>
<defaultValue/>
</param>
<param className="geo.longitude" name="br_long" required="true">
<description>Bottom right longitude of bounding box</description>
<defaultValue/>
</param>
<param className="object.string" name="term" required="false">
<description>String representing the name of business or search term being requested. (E.G.  bars )</description>
<defaultValue/>
</param>
</input>
<output>
<param className="object.name" name="businesses"/>
<param className="adr.location" name="address1"/>
<param className="adr.location" name="address2 "/>
<param className="object.string" name="categories"/>
<param className="adr.name" name="city"/>
</output>
</service>
<service name="YelpPhone">
<description>The  Yelp Phone API  enables the retrieval of business review information based on a phone number input parameter</description>
<invokeUrl>http://api.yelp.com/phone_search</invokeUrl>
<input>
<param className="phone.phoneNumber" name="phone" required="true">
<description>Parameter that specifies the business phone number to search for</description>
<defaultValue/>
</param>
</input>
<output>
<param className="object.name" name="businesses"/>
<param className="adr.string" name="address1"/>
<param className="adr.string" name="address2"/>
<param className="object.string" name="categories"/>
<param className="adr.locality" name="city"/>
</output>
</service>
<service name="YelpNeighborhood">
<description>The  Yelp Neighborhood API  allows the retrieval of neighborhood name information based on various input parameters</description>
<invokeUrl>http://api.yelp.com/neighborhood_search</invokeUrl>
<input>
<param className="geo.latitude" name="lat" required="true">
<description>Latitude of geo-point for which a neighborhood name is desired.</description>
<defaultValue/>
</param>
<param className="geo.longitude" name="long" required="true">
<description>Longitude of geo-point for which a neighborhood name is desired.</description>
<defaultValue/>
</param>
</input>
<output>
<param className="adr.region" name="neighborhoods"/>
<param className="adr.name" name="name "/>
<param className="adr.locality" name="city"/>
<param className="adr.region" name="state"/>
<param className="object.url" name="url"/>
</output>
</service>
</services>
</tile>
<tile tileId="169">
<name>SecondLife</name>
<providerUrl>http://secondlife.com/developers/mapapi/</providerUrl>
<description>
<tags>games mapping</tags>
<text>Second Life is a 3-D virtual world entirely built and owned by its residents</text>
</description>
<category>other</category>
<services>
<service name="MapWindow">
<description>This class represents a window placed over the map.</description>
<invokeUrl/>
<input>
<param className="object.string" name="windowText" required="true">
<description/>
<defaultValue/>
</param>
<param className="object.boolean" name="alwaysOnTop" required="false">
<description>specifies if this window should always be on top of other windows </description>
<defaultValue>false</defaultValue>
</param>
<param className="object.boolean" name="noEffect" required="false">
<description>specifies if window will appear with fade-in and fade-out effect </description>
<defaultValue>false</defaultValue>
</param>
</input>
<output/>
</service>
<service name="SLMap">
<description>This class represents the map</description>
<invokeUrl/>
<input>
<param className="object.string" name="container" required="true">
<description/>
<defaultValue/>
</param>
<param className="object.boolean" name="hasZoomControls" required="false">
<description/>
<defaultValue>true</defaultValue>
</param>
<param className="object.boolean" name="hasPanningControls" required="false">
<description/>
<defaultValue>true</defaultValue>
</param>
<param className="object.integer" name="zoomMin" required="false">
<description>specifies an minimum level a map can be zoomed to. Currently the maximum for this value is 7. </description>
<defaultValue>6</defaultValue>
</param>
</input>
<output/>
</service>
<service name="Img">
<description>Represents an image to be used as an icon.</description>
<invokeUrl/>
<input>
<param className="photo.string" name="imageSource" required="true">
<description/>
<defaultValue/>
</param>
<param className="photo.integer" name="width" required="true">
<description/>
<defaultValue/>
</param>
<param className="photo.integer" name="height" required="true">
<description/>
<defaultValue/>
</param>
<param className="photo.boolean" name="hasAlphaChannel" required="false">
<description>specify whether you are using a 24-bit PNG image with alpha channel transparency</description>
<defaultValue>false</defaultValue>
</param>
</input>
<output>
<param className="photo.url" name="imgurl"/>
</output>
</service>
<service name="Icon">
<description>Represents an icon to used as a marker.</description>
<invokeUrl/>
<input>
<param className="photo.imageUrl" name="mainImage" required="true">
<description/>
<defaultValue/>
</param>
<param className="photo.imageUrl" name="shadowImage" required="false">
<description/>
<defaultValue>null</defaultValue>
</param>
</input>
<output>
<param className="photo.imageUrl" name="imgurl"/>
</output>
</service>
<service name="Marker">
<description>Represents a marker to be added on the map. </description>
<invokeUrl/>
<input>
<param className="photo.imageUrl" name="icons" required="true">
<description>an array of icons of length 6</description>
<defaultValue/>
</param>
<param className="photo.integer" name="coordinate" required="true">
<description>Creates a new marker to be placed on the map at given coordinate.</description>
<defaultValue/>
</param>
</input>
<output>
<param className="photo.imageUrl" name="imgurl"/>
</output>
</service>
<service name="SLPoint">
<description>Represents a point in Second Life. </description>
<invokeUrl/>
<input>
<param className="geo.name" name="Region_name" required="true">
<description>an array of icons of length 6</description>
<defaultValue/>
</param>
<param className="object.integer" name="local_x" required="true">
<description>Creates a new marker to be placed on the map at given coordinate.</description>
<defaultValue/>
</param>
<param className="object.integer" name="local_y" required="true">
<description/>
<defaultValue/>
</param>
</input>
<output>
<param className="photo.imageUrl" name="imgurl"/>
</output>
</service>
<service name="XYPoint">
<description>Represents a point in 2D coordinate space. </description>
<invokeUrl/>
<input>
<param className="geo.decimal" name="x" required="true">
<description/>
<defaultValue/>
</param>
<param className="geo.decimal" name="y" required="true">
<description/>
<defaultValue/>
</param>
</input>
<output>
<param className="photo.imageUrl" name="imgurl"/>
</output>
</service>
<service name="Bounds">
<description>Represents a point in 2D coordinate space. </description>
<invokeUrl/>
<input>
<param className="geo.decimal" name="xMin" required="true">
<description/>
<defaultValue/>
</param>
<param className="geo.decimal" name="xMax" required="true">
<description/>
<defaultValue/>
</param>
<param className="geo.decimal" name="yMin" required="true">
<description/>
<defaultValue/>
</param>
<param className="geo.decimal" name="yMax" required="true">
<description/>
<defaultValue/>
</param>
</input>
<output>
<param className="photo.imageUrl" name="imgurl"/>
</output>
</service>
</services>
</tile>
<tile tileId="171">
<name>Zazzle</name>
<providerUrl>http://www.zazzle.com/api</providerUrl>
<description>
<tags>shopping</tags>
<text>Zazzle provides a simple URL linkover-based API that allows any third party to automatically generate a customized product with dynamic images and text</text>
</description>
<category>shopping</category>
<services>
<service name="CreateTemplateLink">
<description/>
<invokeUrl>http://www.zazzle.com/create</invokeUrl>
<input>
<param className="product.id" name="TemplateId" required="true">
<description/>
<defaultValue/>
</param>
<param className="photo.imageUrl" name="CoverImg" required="true">
<description/>
<defaultValue/>
</param>
<param className="product.description" name="CoverText" required="true">
<description/>
<defaultValue/>
</param>
</input>
<output>
<param className="product.url" name="ProductUrl"/>
</output>
</service>
</services>
</tile>
<tile tileId="173">
<name>Commission Junction</name>
<providerUrl>http://webservices.cj.com/</providerUrl>
<description>
<tags>shopping</tags>
<text>enabling publishers to present the most up-to-date product information</text>
</description>
<category>shopping</category>
<services>
<service name="PublisherLookup">
<description>enables developers to access information regarding publishers within the Commission Junction network</description>
<invokeUrl> https://publookup.api.cj.com</invokeUrl>
<input>
<param className="object.string" name="developerKey" required="true">
<description>developer key obtained from the Web Services Developer Site</description>
<defaultValue>null</defaultValue>
</param>
<param className="object.string" name="token" required="true">
<description>The Authentication Key from a successful publisher logi</description>
<defaultValue>null</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="name"/>
<param className="object.id" name="pid"/>
<param className="object.url" name="url"/>
</output>
</service>
<service name="ProductCatalogSearch">
<description>enables developers to query and retrieve specific product information</description>
<invokeUrl>https://product.api.cj.com</invokeUrl>
<input>
<param className="object.string" name="developerKey" required="true">
<description>developer key obtained from the Web Services Developer Site</description>
<defaultValue>null</defaultValue>
</param>
<param className="object.string" name="websiteId" required="true">
<description>enables the system to generate the appropriate link code in the response</description>
<defaultValue>null</defaultValue>
</param>
<param className="object.string" name="keywords" required="false">
<description>This value restricts the search results</description>
<defaultValue>null</defaultValue>
</param>
<param className="object.string" name="sortBy" required="false">
<description>Sort the results in the response</description>
<defaultValue>null</defaultValue>
</param>
</input>
<output>
<param className="object.integer" name="count"/>
<param className="object.integer" name="offset"/>
<param className="product.description" name="products"/>
<param className="object.integer" name="totalResults"/>
</output>
</service>
<service name="LinkSearch">
<description>enables developers to find links in the Commission Junction network</description>
<invokeUrl> https://linksearch.api.cj.com</invokeUrl>
<input>
<param className="object.string" name="developerKey" required="true">
<description>developer key obtained from the Web Services Developer Site</description>
<defaultValue>null</defaultValue>
</param>
<param className="object.string" name="websiteId" required="true">
<description>enables the system to generate the appropriate link code in the response</description>
<defaultValue>null</defaultValue>
</param>
<param className="object.string" name="keywords" required="false">
<description>This value restricts the search results</description>
<defaultValue>null</defaultValue>
</param>
<param className="object.string" name="sortBy" required="false">
<description>Sort the results in the response</description>
<defaultValue>null</defaultValue>
</param>
<param className="object.string" name="advertiserIds" required="false">
<description>Limits the results to a set of particular advertisers</description>
<defaultValue>null</defaultValue>
</param>
</input>
<output>
<param className="object.anyType" name="links"/>
<param className="object.integer" name="totalResults"/>
</output>
</service>
</services>
</tile>
<tile tileId="175">
<name>MyVox</name>
<providerUrl>http://www2.myvox.com/developers/default.asp</providerUrl>
<description>
<tags>telephony media Voice</tags>
<text>voice-enable any application you can imagine. MyVox turns any phone into a microphone hooked up to your application. </text>
</description>
<category>telephony</category>
<services>
<service name="GetRecording">
<description>Returns data for a Recording instance associated with a RecordingList instance. If “recording_key” is specified then the matching recording is returned.</description>
<invokeUrl>http://api.myvox.com/vr?action=GetRecording</invokeUrl>
<input>
<param className="track.string" name="voice_recorder_key" required="true">
<description>The identification key for the VoiceRecorder application instance</description>
<defaultValue/>
</param>
<param className="track.string" name="recording_key" required="true">
<description>The identification key for the RecordingList instance</description>
<defaultValue/>
</param>
<param className="adr.anyType" name="The identification key for the RecordingList instance" required="false">
<description>The identification key for the RecordingList instance</description>
<defaultValue/>
</param>
<param className="music.anyType" name="meta_data_1" required="false">
<description>Arbitrary meta-data associated with the Recording instance</description>
<defaultValue/>
</param>
</input>
<output>
<param className="music.string" name="date_created"/>
<param className="event.boolean" name="Status"/>
</output>
</service>
</services>
</tile>
<tile tileId="177">
<name>MyBlogLog</name>
<providerUrl>http://developer.yahoo.com/mybloglog/</providerUrl>
<description>
<tags>blog social</tags>
<text>Discover who visits your favorite sites, including your own. MyBlogLog powers the Recent Reader widget seen on many blog sidebars which feature photos of a sites' most recent readers. </text>
</description>
<category>community</category>
<services>
<service name="Community.find.byName">
<description/>
<invokeUrl/>
<input>
<param className="object.string" name="format" required="false">
<description>Defines the returned response type for the call. If using a header use HTTP ACCEPT. Query string values are  xml ,  json , php </description>
<defaultValue/>
</param>
<param className="object.string" name="callback" required="false">
<description>If set, wraps the JSON object in call to the selected function. Only makes sense if output selected is JSON</description>
<defaultValue/>
</param>
<param className="person.name" name="name" required="true">
<description>Name of community you are looking up</description>
<defaultValue/>
</param>
</input>
<output>
<param className="blog.id" name="id"/>
<param className="blog.name" name="name"/>
<param className="blog.url" name="url"/>
</output>
</service>
<service name="Member.find.ByScreenName">
<description>Find member_id by username</description>
<invokeUrl>http://mybloglog.yahooapis.com/v1/user/screen_name/{screen_name}</invokeUrl>
<input>
<param className="object.string" name="format" required="false">
<description>Defines the returned response type for the call. If using a header use HTTP ACCEPT. Query string values are  xml ,  json , php </description>
<defaultValue/>
</param>
<param className="object.string" name="callback" required="false">
<description>If set, wraps the JSON object in call to the selected function. Only makes sense if output selected is JSON</description>
<defaultValue/>
</param>
<param className="person.name" name="screen_name" required="true">
<description>Name of person you are looking up</description>
<defaultValue/>
</param>
</input>
<output>
<param className="blog.id" name="id"/>
<param className="blog.name" name="name"/>
</output>
</service>
<service name="Member.messages.reportSpam">
<description>Find member_id by username</description>
<invokeUrl>http://mybloglog.yahooapis.com/v1/user/messages/reportspam</invokeUrl>
<input>
<param className="object.string" name="format" required="false">
<description>Defines the returned response type for the call. If using a header use HTTP ACCEPT. Query string values are  xml ,  json , php </description>
<defaultValue/>
</param>
<param className="object.string" name="callback" required="false">
<description>If set, wraps the JSON object in call to the selected function. Only makes sense if output selected is JSON</description>
<defaultValue/>
</param>
<param className="event.integer" name="message_id" required="true">
<description>Use members.messages.list to lookup message ids by member</description>
<defaultValue/>
</param>
</input>
<output>
<param className="event.id" name="id"/>
<param className="event.boolean" name="spam"/>
</output>
</service>
</services>
</tile>
<tile tileId="179">
<name>Oodle</name>
<providerUrl>http://developer.oodle.com/</providerUrl>
<description>
<tags>shopping classifieds</tags>
<text>Oodle makes it easy to use online classifieds.</text>
</description>
<category>shopping</category>
<services>
<service name="listings">
<description>The  listings  method is the primary way to fetch Oodle listings from our REST API.</description>
<invokeUrl>http://api.oodle.com/api/v2/listings</invokeUrl>
<input>
<param className="adr.location" name="region" required="true">
<description>A region is a metro area or an entire country.</description>
<defaultValue/>
</param>
<param className="object.string" name="q" required="false">
<description>The query, or list of keywords.</description>
<defaultValue/>
</param>
<param className="product.string" name="category" required="false">
<description>The category argument is a string representing the category code. </description>
<defaultValue/>
</param>
<param className="product.string" name="attributes" required="false">
<description>To refine your query with color, make, model, bedrooms, bathrooms, etc.</description>
<defaultValue/>
</param>
<param className="adr.location" name="location" required="false">
<description>Free-form text for a location. </description>
<defaultValue/>
</param>
<param className="adr.location" name="radius" required="false">
<description>Distance (in miles) from the specified location for which results should be returned. </description>
<defaultValue>30</defaultValue>
</param>
<param className="object.string" name="format" required="false">
<description>Output format of results. </description>
<defaultValue>XML</defaultValue>
</param>
<param className="object.string" name="jsoncallback" required="false">
<description>You may, however, change this behavior through the use of the  jsoncallback  parameter</description>
<defaultValue>json</defaultValue>
</param>
</input>
<output>
<param className="product.name" name="product_name"/>
<param className="product.price" name="price"/>
<param className="person.name" name="seller"/>
<param className="person.url" name="seller_url"/>
<param className="product.integer" name="num"/>
</output>
</service>
</services>
</tile>
<tile tileId="181">
<name>MSNMessenger</name>
<providerUrl>http://dev.live.com/messenger/</providerUrl>
<description>
<tags>chat messaging desktop </tags>
<text>an HTML-based application that is exposed as part of the MSN® Messenger client</text>
</description>
<category>chat</category>
<services>
<service name="InviteUser">
<description>Inviting Users to Share Online Presence</description>
<invokeUrl>http://settings.messenger.live.com/applications/websignup.aspx</invokeUrl>
<input>
<param className="object.url" name="returnurl" required="false">
<description>the URL on your site that the user will be returned to</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.anyType" name="privacyurl" required="true">
<description>the URL for your site s privacy page</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.id" name="Id"/>
<param className="object.string" name="Result"/>
</output>
</service>
<service name="Query">
<description>Querying with the Windows Live Presence</description>
<invokeUrl>http://messenger.services.live.com/users/[ID]/[resource]/</invokeUrl>
<input>
<param className="object.url" name="cb" required="false">
<description>a presence resource request</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.region" name="mkt" required="false">
<description>Specifies a culture ID indicating the language to which the statusText string should be localized</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="status"/>
<param className="object.string" name="statusText"/>
<param className="object.id" name="id"/>
<param className="photo.imageUrl" name="icon.url"/>
</output>
</service>
</services>
</tile>
<tile tileId="183">
<name>SlideShare</name>
<providerUrl>http://www.slideshare.net/developers/</providerUrl>
<description>
<tags>office enterprise</tags>
<text>the world's largest community for sharing presentations on the web</text>
</description>
<category>other</category>
<services>
<service name="SlideshowSearch">
<description>searh the slide you want to find</description>
<invokeUrl>http://www.slideshare.net/api/1/search_slideshows</invokeUrl>
<input>
<param className="object.string" name="q" required="true">
<description>the query string</description>
<defaultValue/>
</param>
<param className="object.integer" name="page" required="false">
<description>The page number of the results (works in conjunction with items_per_page)</description>
<defaultValue>1</defaultValue>
</param>
<param className="object.string" name="lang" required="false">
<description>Language of slideshows</description>
<defaultValue>eng</defaultValue>
</param>
<param className="object.string" name="what " required="false">
<description>What type of search. If not set, text search is used.  tag  is the other option.</description>
<defaultValue/>
</param>
<param className="object.string" name="fileformat " required="false">
<description>File format to search for. </description>
<defaultValue>all</defaultValue>
</param>
</input>
<output>
<param className="object.integer" name="NumResults"/>
<param className="product.id" name="Id"/>
<param className="product.title" name="Title"/>
<param className="person.name" name="Owne"/>
<param className="product.url" name="URL"/>
<param className="photo.thumbnailImageUrl" name="Thumbnail"/>
<param className="product.description" name="Description"/>
</output>
</service>
</services>
</tile>
<tile tileId="185">
<name>Twittervision</name>
<providerUrl>http://twittervision.com/api.html</providerUrl>
<description>
<tags>messaging mapping</tags>
<text>easy ways for people to work with the location-based information</text>
</description>
<category>messaging</category>
<services>
<service name="GetCurrentStatus ">
<description>Get the Current Location and Status of a User</description>
<invokeUrl>http://twittervision.com/user/current_status/screen_name.xml</invokeUrl>
<input>
<param className="person.name" name="screen_name" required="true">
<description>Simply replace screen_name with the screen name of the user you wish to locate in the url</description>
<defaultValue/>
</param>
<param className="object.string" name="format" required="true">
<description>You can retrieve status in either XML, JSON, or YAML formats. With the postfix in the url</description>
<defaultValue/>
</param>
</input>
<output>
<param className="person.name" name="username"/>
<param className="photo.imageUrl" name="userheadimg"/>
<param className="adr.location" name="location"/>
<param className="blog.description" name="words"/>
<param className="blog.time" name="updatedtime"/>
</output>
</service>
</services>
</tile>
<tile tileId="187">
<name>WindowsLiveSpaces</name>
<providerUrl>http://dev.live.com/spaces/</providerUrl>
<description>
<tags>blog</tags>
<text>MSN Spaces supports the MetaWeblog API programming interface which enables external programs to get and set the text and attributes of Weblog posts.</text>
</description>
<category>bloging</category>
<services>
<service name="ViewFriends">
<description>The View Friends API allows the viewing of a particular user s social network based upon the user s CID.</description>
<invokeUrl>http://spaces.live.com/NetworkExplorer.aspx</invokeUrl>
<input>
<param className="blog.id" name="CID" required="true">
<description>Unique identifier that allows the resolution of the space alias. This identifier contains no personally identifiable information (PII).</description>
<defaultValue/>
</param>
</input>
<output>
<param className="blog.url" name="redirecttouserSocialNetwork"/>
</output>
</service>
<service name="ViewPhotos">
<description>The View Photos API navigates to either the full-page version of the photos module in Visitor mode, or the full-page version of the photos module in author mode, which lists all of the user s albums and plays a slideshow of the default album. </description>
<invokeUrl>http://CID.spaces.live.com/photos</invokeUrl>
<input>
<param className="blog.id" name="CID" required="true">
<description>Unique identifier that allows the resolution of the space alias. This identifier contains no personally identifiable information (PII).</description>
<defaultValue/>
</param>
</input>
<output>
<param className="photo.url" name="photo"/>
</output>
</service>
<service name="ViewSpace">
<description>The View Space API allows the viewing or redirecting to a particular user s space using the CID of that user.</description>
<invokeUrl>http://spaces.live.com/viewspace.aspx</invokeUrl>
<input>
<param className="blog.id" name="CID" required="true">
<description>Unique identifier that allows the resolution of the space alias. This identifier contains no personally identifiable information (PII).</description>
<defaultValue/>
</param>
</input>
<output>
<param className="blog.url" name="userspace"/>
</output>
</service>
</services>
</tile>
<tile tileId="189">
<name>GoogleCustomSearch</name>
<providerUrl>http://www.google.com/coop/docs/cse/cref.html</providerUrl>
<description>
<tags>Search</tags>
<text>dynamically generate Custom Search Engines</text>
</description>
<category>search</category>
<services>
<service name="RetrievingSearchResultCode">
<description>Retrieving the Code for the Search Results</description>
<invokeUrl>http://www.google.com/coop/api/default/cse/cse_id/code/searchresults</invokeUrl>
<input/>
<output>
<param className="object.string" name="googleSearchIframeName "/>
<param className="object.string" name="googleSearchFormName "/>
<param className="object.integer" name="googleSearchFrameWidth "/>
<param className="object.string" name="googleSearchDomain "/>
<param className="object.string" name="googleSearchPath "/>
</output>
</service>
<service name="RetrievingAllAnnotations">
<description>Retrieving All Annotations</description>
<invokeUrl>http://www.google.com/coop/api/default/annotations/</invokeUrl>
<input/>
<output>
<param className="object.url" name="about"/>
<param className="object.date" name="timestamp"/>
<param className="object.string" name="name"/>
<param className="object.string" name="attribute"/>
<param className="object.string" name="value"/>
</output>
</service>
<service name="RetrievingSearchEngines">
<description>Retrieving the Specifications of a Search Engine</description>
<invokeUrl>http://www.google.com/coop/api/default/cse/CSE_ID</invokeUrl>
<input/>
<output>
<param className="object.id" name="id"/>
<param className="person.string" name="creator"/>
<param className="object.anyType" name="Title"/>
<param className="object.description" name="Description"/>
<param className="object.boolean" name="LookAndFeel"/>
</output>
</service>
<service name="CreatingSearchEngineSpec">
<description>Create a new search engine or modify an existing one (by submitting a context XML)</description>
<invokeUrl>http://www.google.com/coop/api/default/cse/CSE_ID</invokeUrl>
<input>
<param className="adr.location" name="keywords" required="false">
<description>Specifies a list of keywords associated with the search engine</description>
<defaultValue>aa</defaultValue>
</param>
<param className="adr.string" name="language" required="false">
<description>Determines which of the available 40 languages to display in the user interface</description>
<defaultValue>en</defaultValue>
</param>
<param className="object.string" name="Title" required="false">
<description>The name of your search engine</description>
<defaultValue>null</defaultValue>
</param>
<param className="object.description" name="Description" required="false">
<description>The descriptive text that appears in your search engine homepage.</description>
<defaultValue>null</defaultValue>
</param>
<param className="object.boolean" name="LookAndFeel" required="false">
<description>Determines whether your search results show ads</description>
<defaultValue>false</defaultValue>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="191">
<name>YahooMail</name>
<providerUrl>http://developer.yahoo.com/mail/</providerUrl>
<description>
<tags>email</tags>
<text>Mail Web Service APIs, you can build applications to perform tasks such as listing messages, displaying folders, and composing and sending messages. </text>
</description>
<category>email</category>
<services>
<service name="ListMessages">
<description>ListMessages returns a list of messages for the specified user from the Yahoo! Mail Web Service. You can specify a set of Messages IDs, and/or the complete message.</description>
<invokeUrl/>
<input>
<param className="post.id" name="fid" required="true">
<description>Folder ID and name.</description>
<defaultValue/>
</param>
<param className="object.string" name="filterBy" required="false">
<description>Used to filter by flags.</description>
<defaultValue/>
</param>
<param className="object.string" name="groupBy" required="false">
<description>Used to group messages (unread first, etc).</description>
<defaultValue/>
</param>
<param className="post.id" name="startMid" required="false">
<description>First message ID to return.</description>
<defaultValue/>
</param>
<param className="post.integer" name="numMid" required="false">
<description>Number of message IDs to return</description>
<defaultValue/>
</param>
</input>
<output>
<param className="post.description" name="message"/>
<param className="post.id" name="messageid"/>
</output>
</service>
</services>
</tile>
<tile tileId="193">
<name>aideRSS</name>
<providerUrl>http://apidoc.aiderss.com/Main_Page</providerUrl>
<description>
<tags>rss</tags>
<text>AideRSS is an intelligent assistant, which continuously monitors RSS feeds, finds the good stuff, creates a PostRank, and delivers it to you. </text>
</description>
<category>feeds</category>
<services>
<service name="feed">
<description>Returns the entries for a feed, along with the stats. </description>
<invokeUrl>http://api.aiderss.com/feed?appkey=aiderss.com</invokeUrl>
<input>
<param className="object.string" name="format" required="true">
<description>The format to return data in.</description>
<defaultValue/>
</param>
<param className="feeds.id" name="feed_id" required="true">
<description/>
<defaultValue/>
</param>
<param className="feeds.string" name="level" required="true">
<description>all|good|great|best|a postrank number : Level of entries to filter out. </description>
<defaultValue/>
</param>
<param className="feeds.integer" name="num" required="true">
<description>1-30 : Number of entries to return.</description>
<defaultValue/>
</param>
</input>
<output>
<param className="feeds.time" name="pubDate"/>
<param className="feeds.title" name="title"/>
<param className="feeds.description" name="description"/>
<param className="feeds.url" name="link"/>
<param className="photo.thumbnailImageUrl" name="image"/>
</output>
</service>
</services>
</tile>
<tile tileId="195">
<name>AOLOpenAuth</name>
<providerUrl>http://dev.aol.com/api/openauth</providerUrl>
<description>
<tags>security identity authentication</tags>
<text>empowers third-party web sites and applications to authenticate AOL and AIM users through their Web Sites/Applications. </text>
</description>
<category>other</category>
<services>
<service name="login">
<description>Authenticates the user (via Secure login form if not already authenticated) and returns an AOL Authentication Token in a browser. </description>
<invokeUrl>http(s)://api.screenname.aol.com/auth/login</invokeUrl>
<input>
<param className="person.id" name="devId" required="true">
<description>your developer Id required to access AOL APIs</description>
<defaultValue/>
</param>
<param className="object.string" name="f" required="true">
<description>the required format of the response (json or xml or qs) </description>
<defaultValue/>
</param>
<param className="adr.url" name="succUr" required="false">
<description>the destination url where the site wants the user to be redirected to upon successful authentication or when user cancels login process. If no succUrl is provided</description>
<defaultValue/>
</param>
<param className="object.string" name="language" required="false">
<description>the required language and locale of the error/status messages. </description>
<defaultValue/>
</param>
</input>
<output>
<param className="event.id" name="a"/>
<param className="event.time" name="expiresIn"/>
</output>
</service>
<service name="getInfo">
<description>Validates the Authentication Token issued and returns user s loginId and displayName along with last authentication time stamp. </description>
<invokeUrl>http(s)://api.screenname.aol.com/auth/getInfo</invokeUrl>
<input>
<param className="person.id" name="devId" required="true">
<description>your developer Id required to access AOL APIs</description>
<defaultValue/>
</param>
<param className="object.string" name="f" required="true">
<description>the required format of the response (json or xml or qs) </description>
<defaultValue/>
</param>
<param className="adr.url" name="succUr" required="false">
<description>the destination url where the site wants the user to be redirected to upon successful authentication or when user cancels login process. If no succUrl is provided</description>
<defaultValue/>
</param>
<param className="object.string" name="language" required="false">
<description>the required language and locale of the error/status messages. </description>
<defaultValue/>
</param>
<param className="event.id" name="a" required="true">
<description>the Authentication token returned by login or getToken methods</description>
<defaultValue/>
</param>
</input>
<output>
<param className="person.id" name="loginId"/>
<param className="person.name" name="displayName"/>
<param className="event.time" name="lastAuth"/>
</output>
</service>
</services>
</tile>
<tile tileId="197">
<name>AonawareDictionary</name>
<providerUrl>http://services.aonaware.com/DictService/</providerUrl>
<description>
<tags>reference Dictionary</tags>
<text>Dictionary lookup service </text>
</description>
<category>other</category>
<services>
<service name="Search">
<description>Dictionary lookup service </description>
<invokeUrl>http://services.aonaware.com/DictService/</invokeUrl>
<input>
<param className="object.string" name="words" required="true">
<description>the words to look up</description>
<defaultValue/>
</param>
<param className="object.string" name="dictionary" required="true">
<description>dictionary to use</description>
<defaultValue/>
</param>
</input>
<output>
<param className="object.description" name="explanation"/>
</output>
</service>
</services>
</tile>
<tile tileId="199">
<name>Authorize.Net</name>
<providerUrl>http://developer.authorize.net/</providerUrl>
<description>
<tags>shopping finance</tags>
<text>Authorize.Net provides a number of ways to process transactions through the payment gateway,</text>
</description>
<category>shopping</category>
<services>
<service name="getCustomerProfileRequest">
<description>This function is used to retrieve an existing customer profile along with all the associated customer payment profiles and customer shipping addresses. </description>
<invokeUrl/>
<input>
<param className="person.id" name="customerProfileId" required="true">
<description>user id</description>
<defaultValue/>
</param>
</input>
<output>
<param className="person.name" name="name"/>
<param className="person.string" name="transactionKey"/>
</output>
</service>
</services>
</tile>
<tile tileId="201">
<name>Zillow</name>
<providerUrl>http://www.zillow.com/howto/api/APIOverview.htm</providerUrl>
<description>
<tags>realestate</tags>
<text>turns member sites into mini real estate portals by offering fresh and provocative real estate content to keep people coming back</text>
</description>
<category>advertisiing</category>
<services>
<service name="GetZestimate">
<description>get the information of the most recent property Zestimate</description>
<invokeUrl>http://www.zillow.com/webservice/GetZestimate.htm</invokeUrl>
<input>
<param className="object.id" name="zws-id" required="true">
<description>The Zillow Web Service Identifier</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="zpid" required="true">
<description>The Zillow Property ID for the property for which to obtain information</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="adr.location" name="Fulladdress"/>
<param className="object.anyType" name="Zestimate data"/>
<param className="object.url" name="Links"/>
<param className="object.boolean" name="Limit-warning"/>
</output>
</service>
<service name="GetSearchResults">
<description>finds a property for a specified address</description>
<invokeUrl>http://www.zillow.com/webservice/GetSearchResults.htm</invokeUrl>
<input>
<param className="object.id" name="zws-id" required="true">
<description>The Zillow Web Service Identifier</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.location" name="address" required="true">
<description>The address of the property to search</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.location" name="citystatezip" required="true">
<description>The city+state combination and/or ZIP code for which to search</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="adr.anyType" name="Fulladdress"/>
<param className="object.anyType" name="Zestimate data"/>
<param className="object.url" name="Links"/>
<param className="object.boolean" name="Limit-warning"/>
<param className="object.id" name="zpid"/>
</output>
</service>
<service name="GetChart">
<description>generates a URL for an image file that displays historical Zestimates for a specific property</description>
<invokeUrl>http://www.zillow.com/webservice/GetChart.htm</invokeUrl>
<input>
<param className="object.id" name="zws-id" required="true">
<description>The Zillow Web Service Identifier</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="zpid" required="true">
<description>The Zillow Property ID for the property</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.string" name="unit-type" required="true">
<description>The city+state combination and/or ZIP code for which to search</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="width" required="true">
<description>An integer value that specifies the width of the generated image</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="height" required="true">
<description>An integer value that specifies the heigth of the generated image</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.date" name="chartDuration" required="true">
<description>The duration of past data that needs to be shown in the chart</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.url" name="url"/>
<param className="object.boolean" name="Limit-warning"/>
</output>
</service>
<service name="GetComps">
<description>returns a list of comparable recent sales for a specified property</description>
<invokeUrl>http://www.zillow.com/webservice/GetComps.htm</invokeUrl>
<input>
<param className="object.id" name="zws-id" required="true">
<description>The Zillow Web Service Identifier</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="zpid" required="true">
<description>The Zillow Property ID for the property</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="count" required="true">
<description>The number of comparable recent sales to obtain</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.id" name="zpid"/>
<param className="adr.location" name="Full address"/>
<param className="product.price" name="Zestimate data"/>
<param className="object.url" name="Links"/>
<param className="object.boolean" name="Compscore"/>
<param className="object.boolean" name="Limit-warning"/>
</output>
</service>
<service name="GetDeepComps">
<description>returns a list of comparable recent sales for a specified property</description>
<invokeUrl>http://www.zillow.com/webservice/GetComps.htm</invokeUrl>
<input>
<param className="object.id" name="zws-id" required="true">
<description>The Zillow Web Service Identifier</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="zpid" required="true">
<description>The Zillow Property ID for the property</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="count" required="true">
<description>The number of comparable recent sales to obtain</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.id" name="zpid"/>
<param className="adr.anyType" name="Full address"/>
<param className="product.price" name="Zestimate data"/>
<param className="object.url" name="Links"/>
<param className="object.boolean" name="Compscore"/>
<param className="object.boolean" name="Limit-warning"/>
</output>
</service>
<service name="GetDeepSearch-Results">
<description>finds a property for a specified address</description>
<invokeUrl>http://www.zillow.com/webservice/GetDeepSearchResults.htm</invokeUrl>
<input>
<param className="object.id" name="zws-id" required="true">
<description>The Zillow Property ID for the property</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.location" name="address" required="true">
<description>The address of the property to search</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.location" name="citystatezip" required="true">
<description>The city+state combination and/or ZIP code for which to search</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.id" name="zpid"/>
<param className="adr.anyType" name="Full address"/>
<param className="product.price" name="Zestimate data"/>
<param className="object.url" name="Links"/>
<param className="object.boolean" name="Compscore"/>
<param className="object.boolean" name="Limit-warning"/>
</output>
</service>
<service name="GetUpdatedPropertyDetails">
<description>returns all of the home facts that have been edited by the home s owner or agent</description>
<invokeUrl>http://www.zillow.com/webservice/GetUpdatedPropertyDetails.htm</invokeUrl>
<input>
<param className="object.id" name="zws-id" required="true">
<description>The Zillow Property ID for the property</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.id" name="zpid" required="true">
<description>The Zillow Property ID for the property for which to obtain information</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.id" name="zpid"/>
<param className="adr.location" name="Full address"/>
<param className="product.price" name="Zestimate data"/>
<param className="object.url" name="Links"/>
<param className="object.boolean" name="Compscore"/>
<param className="object.boolean" name="Limit-warning"/>
</output>
</service>
<service name="GetDemographics">
<description>returns a set of affordability, real estate, and demographic data</description>
<invokeUrl>http://www.zillow.com/webservice/GetDemographics.htm</invokeUrl>
<input>
<param className="object.id" name="zws-id" required="true">
<description>The Zillow Property ID for the property</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.region" name="regionid" required="false">
<description>The regionid of the region to retrieve data from</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.region" name="state" required="false">
<description>The state of the region to retrieve data from</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.locality" name="city" required="false">
<description>The city of the region to retrieve data from</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="adr.region" name="Region"/>
<param className="phone.url" name="URLs"/>
<param className="photo.anyType" name="Charts"/>
<param className="object.description" name="Affordability Information"/>
<param className="person.string" name="People Data "/>
<param className="object.boolean" name="Limit-warning"/>
</output>
</service>
<service name="GetRegionChildren">
<description>returns information about Children of a region</description>
<invokeUrl>http://www.zillow.com/webservice/GetRegionChildren.htm</invokeUrl>
<input>
<param className="object.id" name="zws-id" required="true">
<description>The Zillow Property ID for the property</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.region" name="rid" required="false">
<description>The regionid of the region to retrieve data from</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.region" name="state" required="false">
<description>The state of the region to retrieve data from</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.locality" name="city" required="false">
<description>The city of the region to retrieve data from</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.string" name="childtype" required="false">
<description>the type of subregions to retrieve</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="adr.region" name="Region"/>
<param className="object.string" name="Subregion Type"/>
<param className="object.anyType" name="Subregion List"/>
<param className="object.boolean" name="Limit-warning"/>
</output>
</service>
<service name="GetRateSummary">
<description>returns the current rates per loan type</description>
<invokeUrl>http://www.zillow.com/webservice/GetRateSummary.htm</invokeUrl>
<input>
<param className="object.id" name="zws-id" required="true">
<description>The Zillow Property ID for the property</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.string" name="output" required="false">
<description>The type of output desired</description>
<defaultValue> xml </defaultValue>
</param>
<param className="object.string" name="callback" required="false">
<description>The name of the JavaScript callback function used to process the returned JSON data</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.anyType" name="Today s Rates"/>
<param className="object.anyType" name="Last Week s Rates"/>
<param className="object.boolean" name="Limit-warning"/>
</output>
</service>
</services>
</tile>
<tile tileId="203">
<name>hostipInfo</name>
<providerUrl>http://www.hostip.info/use.html</providerUrl>
<description>
<tags>internet</tags>
<text>IP lookup</text>
</description>
<category>internet</category>
<services>
<service name="GETCountry">
<description>locate country IP addresses belong to</description>
<invokeUrl>http://api.hostip.info/country.php</invokeUrl>
<input/>
<output>
<param className="adr.country" name="Country"/>
</output>
</service>
<service name="GETCity">
<description>locate city IP addresses belong to</description>
<invokeUrl>http://api.hostip.info/get_html.php</invokeUrl>
<input>
<param className="object.ipAddress" name="ip" required="true">
<description>the ip address look up for</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.boolean" name="position" required="true">
<description>whether need geo info</description>
<defaultValue>false</defaultValue>
</param>
</input>
<output>
<param className="adr.country" name="Country"/>
<param className="adr.location" name="City"/>
<param className="geo.latitude" name="Latitude"/>
<param className="geo.longitude" name="Longitude"/>
</output>
</service>
</services>
</tile>
<tile tileId="205">
<name>Panoramio</name>
<providerUrl>http://www.panoramio.com/api/</providerUrl>
<description>
<tags>photo mapping</tags>
<text>enables digital photographers to geolocate, store and organize their photographs–and to view those photographs in Google Earth and Google Maps.  </text>
</description>
<category>photos</category>
<services>
<service name="simpleREST">
<description>geolocate, store and organize their photographs–and to view those photographs in Google Earth and Google Maps.  </description>
<invokeUrl>http://www.panoramio.com/map/get_panoramas.php</invokeUrl>
<input>
<param className="object.string" name="order" required="false">
<description>sort by popularity or upload date</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.anyType" name="set" required="false">
<description>define your photo set</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.string" name="size" required="false">
<description>the size of the photo set</description>
<defaultValue>medium</defaultValue>
</param>
<param className="geo.longitude" name="minx" required="false">
<description>define the area to show photos from minimum longitude</description>
<defaultValue>none</defaultValue>
</param>
<param className="geo.latitude" name="miny" required="false">
<description>define the area to show photos from minimum latitude</description>
<defaultValue>none</defaultValue>
</param>
<param className="geo.longitude" name="maxx" required="false">
<description>define the area to show photos from maximum longitude</description>
<defaultValue>none</defaultValue>
</param>
<param className="geo.latitude" name="maxy" required="false">
<description>define the area to show photos from maximum latitude</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="from" required="false">
<description>define the number of photos to be displayed from</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="to" required="false">
<description>define the number of photos to be displayed to</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="photo.title" name="title"/>
<param className="photo.imageUrl" name="url"/>
<param className="geo.latitude" name="latitude"/>
<param className="geo.longitude" name="longtitude"/>
<param className="person.name" name="ownername"/>
</output>
</service>
</services>
</tile>
<tile tileId="207">
<name>WeatherBug</name>
<providerUrl>http://api.weatherbug.com/api/</providerUrl>
<description>
<tags>weather</tags>
<text>access to live weather conditions, forecasts and severe weather warnings for all US zip codes</text>
</description>
<category>weather</category>
<services>
<service name="LiveWeatherRSS">
<description>Live Weather RSS</description>
<invokeUrl>http://api.wxbug.net/getLiveWeatherRSS.aspx</invokeUrl>
<input>
<param className="object.string" name="ACode" required="true">
<description>An alphanumeric license key issued by Weatherbug</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.id" name="stationid" required="true">
<description>station id</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.boolean" name="UnitType" required="true">
<description>UnitType=0, U.S. customary units;1,Metric system units </description>
<defaultValue>U.S. customary units</defaultValue>
</param>
</input>
<output>
<param className="object.anyType" name="RSS"/>
</output>
</service>
<service name="StationListXML">
<description>get Station List</description>
<invokeUrl>http://api.wxbug.net/getStationsXML.aspx</invokeUrl>
<input>
<param className="object.string" name="ACode" required="true">
<description>An alphanumeric license key issued by Weatherbug</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.zipCode" name="ZipCode" required="true">
<description>5 digits designation for U.S. cities only</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.boolean" name="UnitType" required="true">
<description>UnitType=0, U.S. customary units;1,Metric system units </description>
<defaultValue>U.S. customary units</defaultValue>
</param>
</input>
<output>
<param className="object.anyType" name="StationList"/>
</output>
</service>
<service name="SearchLocations">
<description>Search Locations using ACode</description>
<invokeUrl>http://api.wxbug.net/getLocationsXML.aspx</invokeUrl>
<input>
<param className="object.string" name="ACode" required="true">
<description>An alphanumeric license key issued by Weatherbug</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.string" name="SearchString" required="true">
<description>Parameter used to search for locations</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.anyType" name="whether"/>
</output>
</service>
</services>
</tile>
<tile tileId="209">
<name>Multimap</name>
<providerUrl>http://www.multimap.com/share/documentation/api/1.2/</providerUrl>
<description>
<tags>mapping routing geocoding poi ajax Global</tags>
<text>One-stop service for global AJAX mapping, routing, geocoding, searching and POI </text>
</description>
<category>mapping</category>
<services>
<service name="CreateMapView">
<description>create a new map viewer and link it to the container DIV</description>
<invokeUrl>http://clients.multimap.com/API/maps/api_key</invokeUrl>
<input>
<param className="geo.latitude" name="latitude" required="true">
<description>latitude of the map view</description>
<defaultValue>none</defaultValue>
</param>
<param className="geo.longitude" name="longtitude" required="true">
<description>longtitude of the map view</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="211">
<name>SeeqPod</name>
<providerUrl>http://www.seeqpod.com/api.php?music_discovery</providerUrl>
<description>
<tags>music search discovery</tags>
<text>Submit a song you like to the SeeqPod Music Discovery API, and it will return a list of Playable Search results that we think you'll like</text>
</description>
<category>music</category>
<services>
<service name="Recommendation">
<description>return a list of playable search results that we think you ll like</description>
<invokeUrl>http://www.seeqpod.com/api/v0.2/UID/music/recommendations/artists/</invokeUrl>
<input>
<param className="person.name" name="artist" required="true">
<description>The content producer being used as the base of the recommendations</description>
<defaultValue>none</defaultValue>
</param>
<param className="music.name" name="sone" required="true">
<description>The playable search result to base the recommendations off of</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="music.title" name="title"/>
<param className="music.url" name="mp3_url_id"/>
<param className="music.id" name="song_id"/>
</output>
</service>
<service name="Search">
<description>he search call will return a list of pointers relevant to the given query</description>
<invokeUrl>http://www.seeqpod.com/api/v0.2/UID/music/search/query/start index/num results/</invokeUrl>
<input>
<param className="object.string" name="query" required="true">
<description>The string to be searched for</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="startindex" required="false">
<description>The zero based starting index for pagination</description>
<defaultValue>0</defaultValue>
</param>
<param className="object.integer" name="numresults" required="false">
<description>The number of results that to be returned for this page</description>
<defaultValue>0</defaultValue>
</param>
</input>
<output>
<param className="music.title" name="title"/>
<param className="music.url" name="mp3_url_id"/>
<param className="music.id" name="song_id"/>
</output>
</service>
<service name="VideoSearch">
<description>The Video Search call will return a list of videos relevant to the given query</description>
<invokeUrl>http://www.seeqpod.com/api/v0.2/UID/video/search/query/</invokeUrl>
<input>
<param className="object.string" name="query" required="true">
<description>The string to be searched for</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="video.title" name="title"/>
<param className="video.videoUrl" name="location"/>
<param className="photo.imageUrl" name="image"/>
</output>
</service>
<service name="CacheAccess">
<description>This call will return a temporary pointer to the given url_id</description>
<invokeUrl>http://www.seeqpod.com/api/adserve/results</invokeUrl>
<input>
<param className="music.url" name="mp3_url_id" required="true">
<description>The url_id to be retrieved from the cache, as found in a search call</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="music.url" name="tempUrl"/>
</output>
</service>
</services>
</tile>
<tile tileId="213">
<name>Basecamp</name>
<providerUrl>http://developer.37signals.com/basecamp/</providerUrl>
<description>
<tags>enterprise pm</tags>
<text>a unique project collaboration tool</text>
</description>
<category>enterprise</category>
<services>
<service name="AttachingFiles">
<description>allow you to attach a file to the record</description>
<invokeUrl>none</invokeUrl>
<input>
<param className="object.anyType" name="file" required="true">
<description>content of the file you want to attach</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.id" name="ID"/>
</output>
</service>
<service name="Getproject">
<description>Returns a single project identified by its integer ID</description>
<invokeUrl>none</invokeUrl>
<input>
<param className="object.id" name="id" required="true">
<description>project id</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.anyType" name="project"/>
</output>
</service>
<service name="Getpeople">
<description>return all of the people in the given company</description>
<invokeUrl>none</invokeUrl>
<input>
<param className="object.id" name="project_id" required="false">
<description>project id</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.id" name="company_id" required="false">
<description>company id</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="person.anyType" name="person"/>
</output>
</service>
<service name="Createlist">
<description>Creates a new todo-list based on the submitted XML data</description>
<invokeUrl>none</invokeUrl>
<input>
<param className="object.id" name="project_id" required="false">
<description>project id</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.name" name="name" required="true">
<description>name of to do task</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.description" name="description" required="true">
<description>description of to do task</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="215">
<name>Lyricsfly</name>
<providerUrl>http://lyricsfly.com/api/</providerUrl>
<description>
<tags>music lyrics</tags>
<text>Song lyrics search engine</text>
</description>
<category>music</category>
<services>
<service name="search">
<description>search out lyrics </description>
<invokeUrl>http://lyricsfly.com/api/api.php</invokeUrl>
<input>
<param className="person.id" name="i" required="true">
<description>USER ID</description>
<defaultValue>none</defaultValue>
</param>
<param className="person.name" name="a" required="true">
<description>ARTIST</description>
<defaultValue>none</defaultValue>
</param>
<param className="music.title" name="t" required="true">
<description>TITLE</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.string" name="tx"/>
</output>
</service>
<service name="edit">
<description>Editing lyrics</description>
<invokeUrl>http://lyricsfly.com/search/correction.php</invokeUrl>
<input>
<param className="music.id" name="id" required="true">
<description>SONG ID</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="217">
<name>GoogleMashupEditor</name>
<providerUrl>http://code.google.com/intl/zh-CN/gme/docs/jsapi.html</providerUrl>
<description>
<tags>tools </tags>
<text>use the API to perform CRUD operations (create, read, update, delete) on entries in a data feed</text>
</description>
<category>tools</category>
<services>
<service name="getObjectById">
<description>Given a GME module ID, returns the module object</description>
<invokeUrl>none</invokeUrl>
<input>
<param className="object.id" name="module_ID" required="true">
<description>GME module ID</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.anyType" name="module "/>
</output>
</service>
<service name="App.getContainer">
<description>Given a string with an ID, returns a reference to the gm:container having that ID</description>
<invokeUrl>none</invokeUrl>
<input>
<param className="object.id" name="ID" required="true">
<description>id of object in container</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.anyType" name="container"/>
</output>
</service>
<service name="GPath.cloneEntry">
<description>Given an entry, returns a copy of the entry object that you can add to another feed</description>
<invokeUrl>none</invokeUrl>
<input>
<param className="object.anyType" name="oldEntry" required="true">
<description>the oldEntry to clone</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.anyType" name="entry"/>
</output>
</service>
<service name="entryAt">
<description>Returns the specific entry in the feed</description>
<invokeUrl>none</invokeUrl>
<input>
<param className="object.integer" name="index" required="true">
<description>index of the entry</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.anyType" name="entry"/>
</output>
</service>
<service name="addEntry">
<description>Adds the given element to the feed</description>
<invokeUrl>none</invokeUrl>
<input>
<param className="object.anyType" name="entry" required="true">
<description>entry to add</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output/>
</service>
</services>
</tile>
<tile tileId="219">
<name>indeed</name>
<providerUrl>http://www.indeed.com/jsp/apiinfo.jsp</providerUrl>
<description>
<tags>job search</tags>
<text>search the Indeed job</text>
</description>
<category>jobSearch</category>
<services>
<service name="search">
<description>search jobs</description>
<invokeUrl>http://api.indeed.com/apisearch</invokeUrl>
<input>
<param className="object.string" name="searchkey" required="true">
<description>using search key to access to tools to receive job data</description>
<defaultValue>none</defaultValue>
</param>
<param className="job.name" name="q" required="false">
<description>Query</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.location" name="l" required="false">
<description>Location. Use a postal code or a  city, state  combination</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="MaxNum" required="false">
<description>Maximum number of results returned per query</description>
<defaultValue>10</defaultValue>
</param>
<param className="object.string" name="Sort by" required="true">
<description>Sort by relevance or date</description>
<defaultValue>relevance</defaultValue>
</param>
</input>
<output>
<param className="job.description" name="description"/>
</output>
</service>
</services>
</tile>
<tile tileId="221">
<name>MusicBrainz</name>
<providerUrl>http://wiki.musicbrainz.org/XMLWebService</providerUrl>
<description>
<tags>music</tags>
<text>Music metadata community service</text>
</description>
<category>music</category>
<services>
<service name="SearchingArtists">
<description>Looking up a Specific Artist</description>
<invokeUrl>http://musicbrainz.org/ws/1/artist/</invokeUrl>
<input>
<param className="object.string" name="inc" required="false">
<description>A list of space separated values describing how much detail should be included in the output</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="limit" required="false">
<description>An integer value defining how many entries should be returned</description>
<defaultValue>25</defaultValue>
</param>
<param className="person.name" name="name" required="true">
<description>matching name</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="person.name" name="artist"/>
</output>
</service>
<service name="SearchingReleases">
<description>Looking up a Specific Release</description>
<invokeUrl>http://musicbrainz.org/ws/1/release/</invokeUrl>
<input>
<param className="object.integer" name="limit" required="false">
<description>An integer value defining how many entries should be returned</description>
<defaultValue>25</defaultValue>
</param>
<param className="person.name" name="artist" required="true">
<description>given artist</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.anyType" name="title" required="true">
<description>title to match</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="music.anyType" name="music"/>
</output>
</service>
<service name="ratingsresources">
<description>Looking up rating for a Specific Entity</description>
<invokeUrl>http://musicbrainz.org/ws/1/rating/</invokeUrl>
<input>
<param className="object.id" name="id" required="false">
<description>The MBID of the entity that you would like to see your rating for</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.string" name="entity" required="false">
<description>Identifies the entity type, can be artist, release, track or label</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="music.anyType" name="music"/>
</output>
</service>
<service name="folksonomyresources">
<description>Looking up tags for a Specific Entity</description>
<invokeUrl>http://musicbrainz.org/ws/1/tag/</invokeUrl>
<input>
<param className="object.id" name="id" required="false">
<description>The MBID of the entity that you would like to see your rating for</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.string" name="entity" required="false">
<description>Identifies the entity type, can be artist, release, track or label</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="music.anyType" name="music"/>
</output>
</service>
</services>
</tile>
<tile tileId="223">
<name>YahooMapImage</name>
<providerUrl>http://developer.yahoo.com/maps/rest/V1/index.html</providerUrl>
<description>
<tags>mapping</tags>
<text>allows you to get a URL pointing to a graphic of a map generated according to the parameters you specify</text>
</description>
<category>mapping</category>
<services>
<service name="Gettingamap">
<description> provides a reference to a map graphic generated according to the parameters you specify in your request.</description>
<invokeUrl>http://local.yahooapis.com/MapsService/V1/mapImage</invokeUrl>
<input>
<param className="object.id" name="appid" required="true">
<description>The application ID</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.street-address" name="street" required="false">
<description>Street name</description>
<defaultValue>none</defaultValue>
</param>
<param className="adr.zipCode" name="zipcode" required="false">
<description>The five-digit zip code, or the five-digit code plus four-digit extension</description>
<defaultValue>none</defaultValue>
</param>
<param className="geo.anyType" name="latitude" required="false">
<description>latitude</description>
<defaultValue>none</defaultValue>
</param>
<param className="geo.longitude" name="longtitude" required="false">
<description>longtitude</description>
<defaultValue>none</defaultValue>
</param>
<param className="photo.string" name="imagetype" required="false">
<description>The image format for the map</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.string" name="output" required="false">
<description>The format for the output</description>
<defaultValue>php</defaultValue>
</param>
</input>
<output>
<param className="object.url" name="mapurl"/>
</output>
</service>
</services>
</tile>
<tile tileId="225">
<name>Zvents</name>
<providerUrl>http://corporate.zvents.com/developers/</providerUrl>
<description>
<tags>events local </tags>
<text>The Zvents Developer API provides programmatic access to objects stored in Zvents include events, venues, groups, users and tags.</text>
</description>
<category>events</category>
<services>
<service name="event">
<description>Retrieve information for an event</description>
<invokeUrl>http://www.zvents.com/rest/event</invokeUrl>
<input>
<param className="object.string" name="key" required="true">
<description>Zvents Developer API key</description>
<defaultValue>none</defaultValue>
</param>
<param className="event.id" name="id" required="true">
<description>ID of the event</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="event.id" name="id"/>
<param className="event.description" name="description"/>
<param className="event.url" name="link"/>
<param className="event.name" name="name"/>
<param className="event.summary" name="summary"/>
</output>
</service>
<service name="event_new">
<description>Create a new event</description>
<invokeUrl>http://www.zvents.com/rest/event_new</invokeUrl>
<input>
<param className="object.string" name="key" required="true">
<description>Zvents Developer API key</description>
<defaultValue>none</defaultValue>
</param>
<param className="event.name" name="name" required="true">
<description>The name of the new event</description>
<defaultValue>none</defaultValue>
</param>
<param className="event.description" name="description" required="true">
<description>The description of the new event</description>
<defaultValue>none</defaultValue>
</param>
<param className="event.url" name="url" required="true">
<description>The URL for this event</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="event.id" name="id"/>
<param className="event.description" name="description"/>
<param className="event.url" name="link"/>
<param className="event.name" name="name"/>
<param className="event.summary" name="summary"/>
</output>
</service>
<service name="search">
<description>Search for events by what, when and where parameters</description>
<invokeUrl>http://www.zvents.com/rest/search</invokeUrl>
<input>
<param className="event.string" name="what" required="false">
<description>A string specifying a date range for the search </description>
<defaultValue>none</defaultValue>
</param>
<param className="event.string" name="when" required="false">
<description>separating two dates with the word  to </description>
<defaultValue>none</defaultValue>
</param>
<param className="event.string" name="location" required="false">
<description>A string describing a location around which the search results will be restricted</description>
<defaultValue>none</defaultValue>
</param>
<param className="object.integer" name="limit" required="false">
<description>The maximum number of matching events to return</description>
<defaultValue>10</defaultValue>
</param>
<param className="object.integer" name="cat" required="false">
<description>Restrict your search to items that belong to a specific category</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="event.id" name="id"/>
<param className="event.description" name="description"/>
<param className="event.url" name="link"/>
<param className="event.name" name="name"/>
<param className="event.summary" name="summary"/>
</output>
</service>
<service name="categories">
<description>Search for events by what, when and where parameters</description>
<invokeUrl>http://www.zvents.com/rest/categories</invokeUrl>
<input>
<param className="object.string" name="key" required="true">
<description>Zvents Developer API key</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="object.integer" name="id"/>
<param className="object.name" name="name"/>
<param className="object.integer" name="parent_id"/>
<param className="object.integer" name="depth"/>
</output>
</service>
<service name="venue">
<description>Retrieve information for a venue</description>
<invokeUrl>http://www.zvents.com/rest/venue</invokeUrl>
<input>
<param className="object.string" name="key" required="true">
<description>Zvents Developer API key</description>
<defaultValue>none</defaultValue>
</param>
<param className="event.id" name="id" required="true">
<description>ID of the venue</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="event.id" name="id"/>
<param className="event.name" name="name"/>
<param className="event.description" name="description"/>
<param className="event.url" name="link"/>
<param className="adr.anyType" name="address"/>
</output>
</service>
<service name="group">
<description>Retrieve information for a group</description>
<invokeUrl>http://www.zvents.com/rest/group</invokeUrl>
<input>
<param className="object.string" name="key" required="true">
<description>Zvents Developer API key</description>
<defaultValue>none</defaultValue>
</param>
<param className="event.id" name="id" required="true">
<description>ID of the group</description>
<defaultValue>none</defaultValue>
</param>
</input>
<output>
<param className="event.url" name="url"/>
<param className="object.id" name="creator_id"/>
</output>
</service>
</services>
</tile>
<tile tileId="228">
<name>GoogleMap</name>
<providerUrl>http://maps.google.com/</providerUrl>
<description>
<tags>mapping</tags>
<text>Adds a pushpin to the map based on latitude and longitude</text>
</description>
<category>mapping</category>
<services>
<service name="addPushpin">
<description>Adds a pushpin to the map based on latitude and longitude</description>
<invokeUrl/>
<input>
<param className="geo.latitude" name="latitude" required="true">
<description>The pushpin's latitude</description>
<defaultValue>0</defaultValue>
</param>
<param className="geo.longitude" name="longitude" required="true">
<description>The pushpin's longitude</description>
<defaultValue>0</defaultValue>
</param>
<param className="photo.thumbnailImageUrl" name="url" required="false">
<description>The URL used for the pushpin's image</description>
<defaultValue>0</defaultValue>
</param>
<param className="object.title" name="title" required="false">
<description>The pushpin's title</description>
<defaultValue>My Pushpin</defaultValue>
</param>
<param className="object.description" name="description" required="false">
<description>The pushpin's description</description>
<defaultValue>This is a pushpin on the earth</defaultValue>
</param>
</input>
<output>
</output>
</service> 
</services>
</tile>
</catalog>
